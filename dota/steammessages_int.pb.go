// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: steammessages_int.proto

package dota

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgGCRoutingInfo_RoutingMethod int32

const (
	CMsgGCRoutingInfo_RANDOM                         CMsgGCRoutingInfo_RoutingMethod = 0
	CMsgGCRoutingInfo_DISCARD                        CMsgGCRoutingInfo_RoutingMethod = 1
	CMsgGCRoutingInfo_CLIENT_STEAMID                 CMsgGCRoutingInfo_RoutingMethod = 2
	CMsgGCRoutingInfo_PROTOBUF_FIELD_UINT64          CMsgGCRoutingInfo_RoutingMethod = 3
	CMsgGCRoutingInfo_WEBAPI_PARAM                   CMsgGCRoutingInfo_RoutingMethod = 4
	CMsgGCRoutingInfo_WEBAPI_PARAM_STEAMID_ACCOUNTID CMsgGCRoutingInfo_RoutingMethod = 5
)

// Enum value maps for CMsgGCRoutingInfo_RoutingMethod.
var (
	CMsgGCRoutingInfo_RoutingMethod_name = map[int32]string{
		0: "RANDOM",
		1: "DISCARD",
		2: "CLIENT_STEAMID",
		3: "PROTOBUF_FIELD_UINT64",
		4: "WEBAPI_PARAM",
		5: "WEBAPI_PARAM_STEAMID_ACCOUNTID",
	}
	CMsgGCRoutingInfo_RoutingMethod_value = map[string]int32{
		"RANDOM":                         0,
		"DISCARD":                        1,
		"CLIENT_STEAMID":                 2,
		"PROTOBUF_FIELD_UINT64":          3,
		"WEBAPI_PARAM":                   4,
		"WEBAPI_PARAM_STEAMID_ACCOUNTID": 5,
	}
)

func (x CMsgGCRoutingInfo_RoutingMethod) Enum() *CMsgGCRoutingInfo_RoutingMethod {
	p := new(CMsgGCRoutingInfo_RoutingMethod)
	*p = x
	return p
}

func (x CMsgGCRoutingInfo_RoutingMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgGCRoutingInfo_RoutingMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_int_proto_enumTypes[0].Descriptor()
}

func (CMsgGCRoutingInfo_RoutingMethod) Type() protoreflect.EnumType {
	return &file_steammessages_int_proto_enumTypes[0]
}

func (x CMsgGCRoutingInfo_RoutingMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgGCRoutingInfo_RoutingMethod) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgGCRoutingInfo_RoutingMethod(num)
	return nil
}

// Deprecated: Use CMsgGCRoutingInfo_RoutingMethod.Descriptor instead.
func (CMsgGCRoutingInfo_RoutingMethod) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{44, 0}
}

type CMsgGCMsgSetOptions_Option int32

const (
	CMsgGCMsgSetOptions_NOTIFY_USER_SESSIONS   CMsgGCMsgSetOptions_Option = 0
	CMsgGCMsgSetOptions_NOTIFY_SERVER_SESSIONS CMsgGCMsgSetOptions_Option = 1
	CMsgGCMsgSetOptions_NOTIFY_ACHIEVEMENTS    CMsgGCMsgSetOptions_Option = 2
	CMsgGCMsgSetOptions_NOTIFY_VAC_ACTION      CMsgGCMsgSetOptions_Option = 3
)

// Enum value maps for CMsgGCMsgSetOptions_Option.
var (
	CMsgGCMsgSetOptions_Option_name = map[int32]string{
		0: "NOTIFY_USER_SESSIONS",
		1: "NOTIFY_SERVER_SESSIONS",
		2: "NOTIFY_ACHIEVEMENTS",
		3: "NOTIFY_VAC_ACTION",
	}
	CMsgGCMsgSetOptions_Option_value = map[string]int32{
		"NOTIFY_USER_SESSIONS":   0,
		"NOTIFY_SERVER_SESSIONS": 1,
		"NOTIFY_ACHIEVEMENTS":    2,
		"NOTIFY_VAC_ACTION":      3,
	}
)

func (x CMsgGCMsgSetOptions_Option) Enum() *CMsgGCMsgSetOptions_Option {
	p := new(CMsgGCMsgSetOptions_Option)
	*p = x
	return p
}

func (x CMsgGCMsgSetOptions_Option) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgGCMsgSetOptions_Option) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_int_proto_enumTypes[1].Descriptor()
}

func (CMsgGCMsgSetOptions_Option) Type() protoreflect.EnumType {
	return &file_steammessages_int_proto_enumTypes[1]
}

func (x CMsgGCMsgSetOptions_Option) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgGCMsgSetOptions_Option) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgGCMsgSetOptions_Option(num)
	return nil
}

// Deprecated: Use CMsgGCMsgSetOptions_Option.Descriptor instead.
func (CMsgGCMsgSetOptions_Option) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{49, 0}
}

type CMsgGCMsgSetOptions_GCSQLVersion int32

const (
	CMsgGCMsgSetOptions_GCSQL_VERSION_BASELINE CMsgGCMsgSetOptions_GCSQLVersion = 1
	CMsgGCMsgSetOptions_GCSQL_VERSION_BOOLTYPE CMsgGCMsgSetOptions_GCSQLVersion = 2
)

// Enum value maps for CMsgGCMsgSetOptions_GCSQLVersion.
var (
	CMsgGCMsgSetOptions_GCSQLVersion_name = map[int32]string{
		1: "GCSQL_VERSION_BASELINE",
		2: "GCSQL_VERSION_BOOLTYPE",
	}
	CMsgGCMsgSetOptions_GCSQLVersion_value = map[string]int32{
		"GCSQL_VERSION_BASELINE": 1,
		"GCSQL_VERSION_BOOLTYPE": 2,
	}
)

func (x CMsgGCMsgSetOptions_GCSQLVersion) Enum() *CMsgGCMsgSetOptions_GCSQLVersion {
	p := new(CMsgGCMsgSetOptions_GCSQLVersion)
	*p = x
	return p
}

func (x CMsgGCMsgSetOptions_GCSQLVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgGCMsgSetOptions_GCSQLVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_int_proto_enumTypes[2].Descriptor()
}

func (CMsgGCMsgSetOptions_GCSQLVersion) Type() protoreflect.EnumType {
	return &file_steammessages_int_proto_enumTypes[2]
}

func (x CMsgGCMsgSetOptions_GCSQLVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgGCMsgSetOptions_GCSQLVersion) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgGCMsgSetOptions_GCSQLVersion(num)
	return nil
}

// Deprecated: Use CMsgGCMsgSetOptions_GCSQLVersion.Descriptor instead.
func (CMsgGCMsgSetOptions_GCSQLVersion) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{49, 1}
}

type CMsgWebAPIKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           *uint32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	AccountId        *uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PublisherGroupId *uint32 `protobuf:"varint,3,opt,name=publisher_group_id,json=publisherGroupId" json:"publisher_group_id,omitempty"`
	KeyId            *uint32 `protobuf:"varint,4,opt,name=key_id,json=keyId" json:"key_id,omitempty"`
	Domain           *string `protobuf:"bytes,5,opt,name=domain" json:"domain,omitempty"`
}

func (x *CMsgWebAPIKey) Reset() {
	*x = CMsgWebAPIKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgWebAPIKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgWebAPIKey) ProtoMessage() {}

func (x *CMsgWebAPIKey) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgWebAPIKey.ProtoReflect.Descriptor instead.
func (*CMsgWebAPIKey) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgWebAPIKey) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CMsgWebAPIKey) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgWebAPIKey) GetPublisherGroupId() uint32 {
	if x != nil && x.PublisherGroupId != nil {
		return *x.PublisherGroupId
	}
	return 0
}

func (x *CMsgWebAPIKey) GetKeyId() uint32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *CMsgWebAPIKey) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

type CMsgHttpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestMethod   *uint32                          `protobuf:"varint,1,opt,name=request_method,json=requestMethod" json:"request_method,omitempty"`
	Hostname        *string                          `protobuf:"bytes,2,opt,name=hostname" json:"hostname,omitempty"`
	Url             *string                          `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	Headers         []*CMsgHttpRequest_RequestHeader `protobuf:"bytes,4,rep,name=headers" json:"headers,omitempty"`
	GetParams       []*CMsgHttpRequest_QueryParam    `protobuf:"bytes,5,rep,name=get_params,json=getParams" json:"get_params,omitempty"`
	PostParams      []*CMsgHttpRequest_QueryParam    `protobuf:"bytes,6,rep,name=post_params,json=postParams" json:"post_params,omitempty"`
	Body            []byte                           `protobuf:"bytes,7,opt,name=body" json:"body,omitempty"`
	AbsoluteTimeout *uint32                          `protobuf:"varint,8,opt,name=absolute_timeout,json=absoluteTimeout" json:"absolute_timeout,omitempty"`
	UseHttps        *bool                            `protobuf:"varint,9,opt,name=use_https,json=useHttps" json:"use_https,omitempty"`
}

func (x *CMsgHttpRequest) Reset() {
	*x = CMsgHttpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHttpRequest) ProtoMessage() {}

func (x *CMsgHttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHttpRequest.ProtoReflect.Descriptor instead.
func (*CMsgHttpRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgHttpRequest) GetRequestMethod() uint32 {
	if x != nil && x.RequestMethod != nil {
		return *x.RequestMethod
	}
	return 0
}

func (x *CMsgHttpRequest) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

func (x *CMsgHttpRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgHttpRequest) GetHeaders() []*CMsgHttpRequest_RequestHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CMsgHttpRequest) GetGetParams() []*CMsgHttpRequest_QueryParam {
	if x != nil {
		return x.GetParams
	}
	return nil
}

func (x *CMsgHttpRequest) GetPostParams() []*CMsgHttpRequest_QueryParam {
	if x != nil {
		return x.PostParams
	}
	return nil
}

func (x *CMsgHttpRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *CMsgHttpRequest) GetAbsoluteTimeout() uint32 {
	if x != nil && x.AbsoluteTimeout != nil {
		return *x.AbsoluteTimeout
	}
	return 0
}

func (x *CMsgHttpRequest) GetUseHttps() bool {
	if x != nil && x.UseHttps != nil {
		return *x.UseHttps
	}
	return false
}

type CMsgWebAPIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceName *string          `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName" json:"interface_name,omitempty"`
	MethodName    *string          `protobuf:"bytes,3,opt,name=method_name,json=methodName" json:"method_name,omitempty"`
	Version       *uint32          `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	ApiKey        *CMsgWebAPIKey   `protobuf:"bytes,5,opt,name=api_key,json=apiKey" json:"api_key,omitempty"`
	Request       *CMsgHttpRequest `protobuf:"bytes,6,opt,name=request" json:"request,omitempty"`
	RoutingAppId  *uint32          `protobuf:"varint,7,opt,name=routing_app_id,json=routingAppId" json:"routing_app_id,omitempty"`
}

func (x *CMsgWebAPIRequest) Reset() {
	*x = CMsgWebAPIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgWebAPIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgWebAPIRequest) ProtoMessage() {}

func (x *CMsgWebAPIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgWebAPIRequest.ProtoReflect.Descriptor instead.
func (*CMsgWebAPIRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgWebAPIRequest) GetInterfaceName() string {
	if x != nil && x.InterfaceName != nil {
		return *x.InterfaceName
	}
	return ""
}

func (x *CMsgWebAPIRequest) GetMethodName() string {
	if x != nil && x.MethodName != nil {
		return *x.MethodName
	}
	return ""
}

func (x *CMsgWebAPIRequest) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgWebAPIRequest) GetApiKey() *CMsgWebAPIKey {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

func (x *CMsgWebAPIRequest) GetRequest() *CMsgHttpRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *CMsgWebAPIRequest) GetRoutingAppId() uint32 {
	if x != nil && x.RoutingAppId != nil {
		return *x.RoutingAppId
	}
	return 0
}

type CMsgHttpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode *uint32                            `protobuf:"varint,1,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	Headers    []*CMsgHttpResponse_ResponseHeader `protobuf:"bytes,2,rep,name=headers" json:"headers,omitempty"`
	Body       []byte                             `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
}

func (x *CMsgHttpResponse) Reset() {
	*x = CMsgHttpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHttpResponse) ProtoMessage() {}

func (x *CMsgHttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHttpResponse.ProtoReflect.Descriptor instead.
func (*CMsgHttpResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgHttpResponse) GetStatusCode() uint32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *CMsgHttpResponse) GetHeaders() []*CMsgHttpResponse_ResponseHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CMsgHttpResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type CMsgAMFindAccounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchType   *uint32 `protobuf:"varint,1,opt,name=search_type,json=searchType" json:"search_type,omitempty"`
	SearchString *string `protobuf:"bytes,2,opt,name=search_string,json=searchString" json:"search_string,omitempty"`
}

func (x *CMsgAMFindAccounts) Reset() {
	*x = CMsgAMFindAccounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMFindAccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMFindAccounts) ProtoMessage() {}

func (x *CMsgAMFindAccounts) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMFindAccounts.ProtoReflect.Descriptor instead.
func (*CMsgAMFindAccounts) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgAMFindAccounts) GetSearchType() uint32 {
	if x != nil && x.SearchType != nil {
		return *x.SearchType
	}
	return 0
}

func (x *CMsgAMFindAccounts) GetSearchString() string {
	if x != nil && x.SearchString != nil {
		return *x.SearchString
	}
	return ""
}

type CMsgAMFindAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId []uint64 `protobuf:"fixed64,1,rep,name=steam_id,json=steamId" json:"steam_id,omitempty"`
}

func (x *CMsgAMFindAccountsResponse) Reset() {
	*x = CMsgAMFindAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMFindAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMFindAccountsResponse) ProtoMessage() {}

func (x *CMsgAMFindAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMFindAccountsResponse.ProtoReflect.Descriptor instead.
func (*CMsgAMFindAccountsResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgAMFindAccountsResponse) GetSteamId() []uint64 {
	if x != nil {
		return x.SteamId
	}
	return nil
}

type CMsgNotifyWatchdog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source    *uint32 `protobuf:"varint,1,opt,name=source" json:"source,omitempty"`
	AlertType *uint32 `protobuf:"varint,2,opt,name=alert_type,json=alertType" json:"alert_type,omitempty"`
	Critical  *bool   `protobuf:"varint,4,opt,name=critical" json:"critical,omitempty"`
	Time      *uint32 `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	Appid     *uint32 `protobuf:"varint,6,opt,name=appid" json:"appid,omitempty"`
	Text      *string `protobuf:"bytes,7,opt,name=text" json:"text,omitempty"`
	Recipient *string `protobuf:"bytes,12,opt,name=recipient" json:"recipient,omitempty"`
}

func (x *CMsgNotifyWatchdog) Reset() {
	*x = CMsgNotifyWatchdog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgNotifyWatchdog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgNotifyWatchdog) ProtoMessage() {}

func (x *CMsgNotifyWatchdog) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgNotifyWatchdog.ProtoReflect.Descriptor instead.
func (*CMsgNotifyWatchdog) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgNotifyWatchdog) GetSource() uint32 {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return 0
}

func (x *CMsgNotifyWatchdog) GetAlertType() uint32 {
	if x != nil && x.AlertType != nil {
		return *x.AlertType
	}
	return 0
}

func (x *CMsgNotifyWatchdog) GetCritical() bool {
	if x != nil && x.Critical != nil {
		return *x.Critical
	}
	return false
}

func (x *CMsgNotifyWatchdog) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *CMsgNotifyWatchdog) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgNotifyWatchdog) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *CMsgNotifyWatchdog) GetRecipient() string {
	if x != nil && x.Recipient != nil {
		return *x.Recipient
	}
	return ""
}

type CMsgAMGetLicenses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CMsgAMGetLicenses) Reset() {
	*x = CMsgAMGetLicenses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMGetLicenses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMGetLicenses) ProtoMessage() {}

func (x *CMsgAMGetLicenses) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMGetLicenses.ProtoReflect.Descriptor instead.
func (*CMsgAMGetLicenses) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgAMGetLicenses) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CMsgPackageLicense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId   *uint32 `protobuf:"varint,1,opt,name=package_id,json=packageId" json:"package_id,omitempty"`
	TimeCreated *uint32 `protobuf:"varint,2,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	OwnerId     *uint32 `protobuf:"varint,3,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
}

func (x *CMsgPackageLicense) Reset() {
	*x = CMsgPackageLicense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPackageLicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPackageLicense) ProtoMessage() {}

func (x *CMsgPackageLicense) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPackageLicense.ProtoReflect.Descriptor instead.
func (*CMsgPackageLicense) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgPackageLicense) GetPackageId() uint32 {
	if x != nil && x.PackageId != nil {
		return *x.PackageId
	}
	return 0
}

func (x *CMsgPackageLicense) GetTimeCreated() uint32 {
	if x != nil && x.TimeCreated != nil {
		return *x.TimeCreated
	}
	return 0
}

func (x *CMsgPackageLicense) GetOwnerId() uint32 {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return 0
}

type CMsgAMGetLicensesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	License []*CMsgPackageLicense `protobuf:"bytes,1,rep,name=license" json:"license,omitempty"`
	Result  *uint32               `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
}

func (x *CMsgAMGetLicensesResponse) Reset() {
	*x = CMsgAMGetLicensesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMGetLicensesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMGetLicensesResponse) ProtoMessage() {}

func (x *CMsgAMGetLicensesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMGetLicensesResponse.ProtoReflect.Descriptor instead.
func (*CMsgAMGetLicensesResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgAMGetLicensesResponse) GetLicense() []*CMsgPackageLicense {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *CMsgAMGetLicensesResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type CMsgGCGetCommandList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId         *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	CommandPrefix *string `protobuf:"bytes,2,opt,name=command_prefix,json=commandPrefix" json:"command_prefix,omitempty"`
}

func (x *CMsgGCGetCommandList) Reset() {
	*x = CMsgGCGetCommandList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCGetCommandList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCGetCommandList) ProtoMessage() {}

func (x *CMsgGCGetCommandList) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCGetCommandList.ProtoReflect.Descriptor instead.
func (*CMsgGCGetCommandList) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgGCGetCommandList) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgGCGetCommandList) GetCommandPrefix() string {
	if x != nil && x.CommandPrefix != nil {
		return *x.CommandPrefix
	}
	return ""
}

type CMsgGCGetCommandListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandName []string `protobuf:"bytes,1,rep,name=command_name,json=commandName" json:"command_name,omitempty"`
}

func (x *CMsgGCGetCommandListResponse) Reset() {
	*x = CMsgGCGetCommandListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCGetCommandListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCGetCommandListResponse) ProtoMessage() {}

func (x *CMsgGCGetCommandListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCGetCommandListResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCGetCommandListResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgGCGetCommandListResponse) GetCommandName() []string {
	if x != nil {
		return x.CommandName
	}
	return nil
}

type CGCMsgMemCachedGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (x *CGCMsgMemCachedGet) Reset() {
	*x = CGCMsgMemCachedGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgMemCachedGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgMemCachedGet) ProtoMessage() {}

func (x *CGCMsgMemCachedGet) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgMemCachedGet.ProtoReflect.Descriptor instead.
func (*CGCMsgMemCachedGet) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{12}
}

func (x *CGCMsgMemCachedGet) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CGCMsgMemCachedGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*CGCMsgMemCachedGetResponse_ValueTag `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (x *CGCMsgMemCachedGetResponse) Reset() {
	*x = CGCMsgMemCachedGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgMemCachedGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgMemCachedGetResponse) ProtoMessage() {}

func (x *CGCMsgMemCachedGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgMemCachedGetResponse.ProtoReflect.Descriptor instead.
func (*CGCMsgMemCachedGetResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{13}
}

func (x *CGCMsgMemCachedGetResponse) GetValues() []*CGCMsgMemCachedGetResponse_ValueTag {
	if x != nil {
		return x.Values
	}
	return nil
}

type CGCMsgMemCachedSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*CGCMsgMemCachedSet_KeyPair `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (x *CGCMsgMemCachedSet) Reset() {
	*x = CGCMsgMemCachedSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgMemCachedSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgMemCachedSet) ProtoMessage() {}

func (x *CGCMsgMemCachedSet) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgMemCachedSet.ProtoReflect.Descriptor instead.
func (*CGCMsgMemCachedSet) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{14}
}

func (x *CGCMsgMemCachedSet) GetKeys() []*CGCMsgMemCachedSet_KeyPair {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CGCMsgMemCachedDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (x *CGCMsgMemCachedDelete) Reset() {
	*x = CGCMsgMemCachedDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgMemCachedDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgMemCachedDelete) ProtoMessage() {}

func (x *CGCMsgMemCachedDelete) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgMemCachedDelete.ProtoReflect.Descriptor instead.
func (*CGCMsgMemCachedDelete) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{15}
}

func (x *CGCMsgMemCachedDelete) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CGCMsgMemCachedStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CGCMsgMemCachedStats) Reset() {
	*x = CGCMsgMemCachedStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgMemCachedStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgMemCachedStats) ProtoMessage() {}

func (x *CGCMsgMemCachedStats) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgMemCachedStats.ProtoReflect.Descriptor instead.
func (*CGCMsgMemCachedStats) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{16}
}

type CGCMsgMemCachedStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrConnections *uint64 `protobuf:"varint,1,opt,name=curr_connections,json=currConnections" json:"curr_connections,omitempty"`
	CmdGet          *uint64 `protobuf:"varint,2,opt,name=cmd_get,json=cmdGet" json:"cmd_get,omitempty"`
	CmdSet          *uint64 `protobuf:"varint,3,opt,name=cmd_set,json=cmdSet" json:"cmd_set,omitempty"`
	CmdFlush        *uint64 `protobuf:"varint,4,opt,name=cmd_flush,json=cmdFlush" json:"cmd_flush,omitempty"`
	GetHits         *uint64 `protobuf:"varint,5,opt,name=get_hits,json=getHits" json:"get_hits,omitempty"`
	GetMisses       *uint64 `protobuf:"varint,6,opt,name=get_misses,json=getMisses" json:"get_misses,omitempty"`
	DeleteHits      *uint64 `protobuf:"varint,7,opt,name=delete_hits,json=deleteHits" json:"delete_hits,omitempty"`
	DeleteMisses    *uint64 `protobuf:"varint,8,opt,name=delete_misses,json=deleteMisses" json:"delete_misses,omitempty"`
	BytesRead       *uint64 `protobuf:"varint,9,opt,name=bytes_read,json=bytesRead" json:"bytes_read,omitempty"`
	BytesWritten    *uint64 `protobuf:"varint,10,opt,name=bytes_written,json=bytesWritten" json:"bytes_written,omitempty"`
	LimitMaxbytes   *uint64 `protobuf:"varint,11,opt,name=limit_maxbytes,json=limitMaxbytes" json:"limit_maxbytes,omitempty"`
	CurrItems       *uint64 `protobuf:"varint,12,opt,name=curr_items,json=currItems" json:"curr_items,omitempty"`
	Evictions       *uint64 `protobuf:"varint,13,opt,name=evictions" json:"evictions,omitempty"`
	Bytes           *uint64 `protobuf:"varint,14,opt,name=bytes" json:"bytes,omitempty"`
}

func (x *CGCMsgMemCachedStatsResponse) Reset() {
	*x = CGCMsgMemCachedStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgMemCachedStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgMemCachedStatsResponse) ProtoMessage() {}

func (x *CGCMsgMemCachedStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgMemCachedStatsResponse.ProtoReflect.Descriptor instead.
func (*CGCMsgMemCachedStatsResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{17}
}

func (x *CGCMsgMemCachedStatsResponse) GetCurrConnections() uint64 {
	if x != nil && x.CurrConnections != nil {
		return *x.CurrConnections
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetCmdGet() uint64 {
	if x != nil && x.CmdGet != nil {
		return *x.CmdGet
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetCmdSet() uint64 {
	if x != nil && x.CmdSet != nil {
		return *x.CmdSet
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetCmdFlush() uint64 {
	if x != nil && x.CmdFlush != nil {
		return *x.CmdFlush
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetGetHits() uint64 {
	if x != nil && x.GetHits != nil {
		return *x.GetHits
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetGetMisses() uint64 {
	if x != nil && x.GetMisses != nil {
		return *x.GetMisses
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetDeleteHits() uint64 {
	if x != nil && x.DeleteHits != nil {
		return *x.DeleteHits
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetDeleteMisses() uint64 {
	if x != nil && x.DeleteMisses != nil {
		return *x.DeleteMisses
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetBytesRead() uint64 {
	if x != nil && x.BytesRead != nil {
		return *x.BytesRead
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetBytesWritten() uint64 {
	if x != nil && x.BytesWritten != nil {
		return *x.BytesWritten
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetLimitMaxbytes() uint64 {
	if x != nil && x.LimitMaxbytes != nil {
		return *x.LimitMaxbytes
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetCurrItems() uint64 {
	if x != nil && x.CurrItems != nil {
		return *x.CurrItems
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetEvictions() uint64 {
	if x != nil && x.Evictions != nil {
		return *x.Evictions
	}
	return 0
}

func (x *CGCMsgMemCachedStatsResponse) GetBytes() uint64 {
	if x != nil && x.Bytes != nil {
		return *x.Bytes
	}
	return 0
}

type CGCMsgSQLStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaCatalog *uint32 `protobuf:"varint,1,opt,name=schema_catalog,json=schemaCatalog" json:"schema_catalog,omitempty"`
}

func (x *CGCMsgSQLStats) Reset() {
	*x = CGCMsgSQLStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgSQLStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgSQLStats) ProtoMessage() {}

func (x *CGCMsgSQLStats) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgSQLStats.ProtoReflect.Descriptor instead.
func (*CGCMsgSQLStats) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{18}
}

func (x *CGCMsgSQLStats) GetSchemaCatalog() uint32 {
	if x != nil && x.SchemaCatalog != nil {
		return *x.SchemaCatalog
	}
	return 0
}

type CGCMsgSQLStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threads                       *uint32 `protobuf:"varint,1,opt,name=threads" json:"threads,omitempty"`
	ThreadsConnected              *uint32 `protobuf:"varint,2,opt,name=threads_connected,json=threadsConnected" json:"threads_connected,omitempty"`
	ThreadsActive                 *uint32 `protobuf:"varint,3,opt,name=threads_active,json=threadsActive" json:"threads_active,omitempty"`
	OperationsSubmitted           *uint32 `protobuf:"varint,4,opt,name=operations_submitted,json=operationsSubmitted" json:"operations_submitted,omitempty"`
	PreparedStatementsExecuted    *uint32 `protobuf:"varint,5,opt,name=prepared_statements_executed,json=preparedStatementsExecuted" json:"prepared_statements_executed,omitempty"`
	NonPreparedStatementsExecuted *uint32 `protobuf:"varint,6,opt,name=non_prepared_statements_executed,json=nonPreparedStatementsExecuted" json:"non_prepared_statements_executed,omitempty"`
	DeadlockRetries               *uint32 `protobuf:"varint,7,opt,name=deadlock_retries,json=deadlockRetries" json:"deadlock_retries,omitempty"`
	OperationsTimedOutInQueue     *uint32 `protobuf:"varint,8,opt,name=operations_timed_out_in_queue,json=operationsTimedOutInQueue" json:"operations_timed_out_in_queue,omitempty"`
	Errors                        *uint32 `protobuf:"varint,9,opt,name=errors" json:"errors,omitempty"`
}

func (x *CGCMsgSQLStatsResponse) Reset() {
	*x = CGCMsgSQLStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgSQLStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgSQLStatsResponse) ProtoMessage() {}

func (x *CGCMsgSQLStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgSQLStatsResponse.ProtoReflect.Descriptor instead.
func (*CGCMsgSQLStatsResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{19}
}

func (x *CGCMsgSQLStatsResponse) GetThreads() uint32 {
	if x != nil && x.Threads != nil {
		return *x.Threads
	}
	return 0
}

func (x *CGCMsgSQLStatsResponse) GetThreadsConnected() uint32 {
	if x != nil && x.ThreadsConnected != nil {
		return *x.ThreadsConnected
	}
	return 0
}

func (x *CGCMsgSQLStatsResponse) GetThreadsActive() uint32 {
	if x != nil && x.ThreadsActive != nil {
		return *x.ThreadsActive
	}
	return 0
}

func (x *CGCMsgSQLStatsResponse) GetOperationsSubmitted() uint32 {
	if x != nil && x.OperationsSubmitted != nil {
		return *x.OperationsSubmitted
	}
	return 0
}

func (x *CGCMsgSQLStatsResponse) GetPreparedStatementsExecuted() uint32 {
	if x != nil && x.PreparedStatementsExecuted != nil {
		return *x.PreparedStatementsExecuted
	}
	return 0
}

func (x *CGCMsgSQLStatsResponse) GetNonPreparedStatementsExecuted() uint32 {
	if x != nil && x.NonPreparedStatementsExecuted != nil {
		return *x.NonPreparedStatementsExecuted
	}
	return 0
}

func (x *CGCMsgSQLStatsResponse) GetDeadlockRetries() uint32 {
	if x != nil && x.DeadlockRetries != nil {
		return *x.DeadlockRetries
	}
	return 0
}

func (x *CGCMsgSQLStatsResponse) GetOperationsTimedOutInQueue() uint32 {
	if x != nil && x.OperationsTimedOutInQueue != nil {
		return *x.OperationsTimedOutInQueue
	}
	return 0
}

func (x *CGCMsgSQLStatsResponse) GetErrors() uint32 {
	if x != nil && x.Errors != nil {
		return *x.Errors
	}
	return 0
}

type CMsgAMAddFreeLicense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	IpPublic         *uint32 `protobuf:"varint,2,opt,name=ip_public,json=ipPublic" json:"ip_public,omitempty"`
	Packageid        *uint32 `protobuf:"varint,3,opt,name=packageid" json:"packageid,omitempty"`
	StoreCountryCode *string `protobuf:"bytes,4,opt,name=store_country_code,json=storeCountryCode" json:"store_country_code,omitempty"`
}

func (x *CMsgAMAddFreeLicense) Reset() {
	*x = CMsgAMAddFreeLicense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMAddFreeLicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMAddFreeLicense) ProtoMessage() {}

func (x *CMsgAMAddFreeLicense) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMAddFreeLicense.ProtoReflect.Descriptor instead.
func (*CMsgAMAddFreeLicense) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgAMAddFreeLicense) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgAMAddFreeLicense) GetIpPublic() uint32 {
	if x != nil && x.IpPublic != nil {
		return *x.IpPublic
	}
	return 0
}

func (x *CMsgAMAddFreeLicense) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CMsgAMAddFreeLicense) GetStoreCountryCode() string {
	if x != nil && x.StoreCountryCode != nil {
		return *x.StoreCountryCode
	}
	return ""
}

type CMsgAMAddFreeLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult              *int32  `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	PurchaseResultDetail *int32  `protobuf:"varint,2,opt,name=purchase_result_detail,json=purchaseResultDetail" json:"purchase_result_detail,omitempty"`
	Transid              *uint64 `protobuf:"fixed64,3,opt,name=transid" json:"transid,omitempty"`
}

func (x *CMsgAMAddFreeLicenseResponse) Reset() {
	*x = CMsgAMAddFreeLicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMAddFreeLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMAddFreeLicenseResponse) ProtoMessage() {}

func (x *CMsgAMAddFreeLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMAddFreeLicenseResponse.ProtoReflect.Descriptor instead.
func (*CMsgAMAddFreeLicenseResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgAMAddFreeLicenseResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

func (x *CMsgAMAddFreeLicenseResponse) GetPurchaseResultDetail() int32 {
	if x != nil && x.PurchaseResultDetail != nil {
		return *x.PurchaseResultDetail
	}
	return 0
}

func (x *CMsgAMAddFreeLicenseResponse) GetTransid() uint64 {
	if x != nil && x.Transid != nil {
		return *x.Transid
	}
	return 0
}

type CGCMsgGetIPLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ips []uint32 `protobuf:"fixed32,1,rep,name=ips" json:"ips,omitempty"`
}

func (x *CGCMsgGetIPLocation) Reset() {
	*x = CGCMsgGetIPLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgGetIPLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgGetIPLocation) ProtoMessage() {}

func (x *CGCMsgGetIPLocation) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgGetIPLocation.ProtoReflect.Descriptor instead.
func (*CGCMsgGetIPLocation) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{22}
}

func (x *CGCMsgGetIPLocation) GetIps() []uint32 {
	if x != nil {
		return x.Ips
	}
	return nil
}

type CGCMsgGetIPASN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ips []uint32 `protobuf:"fixed32,1,rep,name=ips" json:"ips,omitempty"`
}

func (x *CGCMsgGetIPASN) Reset() {
	*x = CGCMsgGetIPASN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgGetIPASN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgGetIPASN) ProtoMessage() {}

func (x *CGCMsgGetIPASN) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgGetIPASN.ProtoReflect.Descriptor instead.
func (*CGCMsgGetIPASN) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{23}
}

func (x *CGCMsgGetIPASN) GetIps() []uint32 {
	if x != nil {
		return x.Ips
	}
	return nil
}

type CIPASNInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip  *uint32 `protobuf:"fixed32,1,opt,name=ip" json:"ip,omitempty"`
	Asn *uint32 `protobuf:"varint,2,opt,name=asn" json:"asn,omitempty"`
}

func (x *CIPASNInfo) Reset() {
	*x = CIPASNInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CIPASNInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CIPASNInfo) ProtoMessage() {}

func (x *CIPASNInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CIPASNInfo.ProtoReflect.Descriptor instead.
func (*CIPASNInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{24}
}

func (x *CIPASNInfo) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

func (x *CIPASNInfo) GetAsn() uint32 {
	if x != nil && x.Asn != nil {
		return *x.Asn
	}
	return 0
}

type CGCMsgGetIPASNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CIPASNInfo `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
}

func (x *CGCMsgGetIPASNResponse) Reset() {
	*x = CGCMsgGetIPASNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgGetIPASNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgGetIPASNResponse) ProtoMessage() {}

func (x *CGCMsgGetIPASNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgGetIPASNResponse.ProtoReflect.Descriptor instead.
func (*CGCMsgGetIPASNResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{25}
}

func (x *CGCMsgGetIPASNResponse) GetInfos() []*CIPASNInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CMsgAMSendEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid           *uint64                                        `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	EmailMsgType      *uint32                                        `protobuf:"varint,2,opt,name=email_msg_type,json=emailMsgType" json:"email_msg_type,omitempty"`
	EmailFormat       *uint32                                        `protobuf:"varint,3,opt,name=email_format,json=emailFormat" json:"email_format,omitempty"`
	PersonaNameTokens []*CMsgAMSendEmail_PersonaNameReplacementToken `protobuf:"bytes,5,rep,name=persona_name_tokens,json=personaNameTokens" json:"persona_name_tokens,omitempty"`
	SourceGc          *uint32                                        `protobuf:"varint,6,opt,name=source_gc,json=sourceGc" json:"source_gc,omitempty"`
	Tokens            []*CMsgAMSendEmail_ReplacementToken            `protobuf:"bytes,7,rep,name=tokens" json:"tokens,omitempty"`
}

func (x *CMsgAMSendEmail) Reset() {
	*x = CMsgAMSendEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMSendEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMSendEmail) ProtoMessage() {}

func (x *CMsgAMSendEmail) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMSendEmail.ProtoReflect.Descriptor instead.
func (*CMsgAMSendEmail) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{26}
}

func (x *CMsgAMSendEmail) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgAMSendEmail) GetEmailMsgType() uint32 {
	if x != nil && x.EmailMsgType != nil {
		return *x.EmailMsgType
	}
	return 0
}

func (x *CMsgAMSendEmail) GetEmailFormat() uint32 {
	if x != nil && x.EmailFormat != nil {
		return *x.EmailFormat
	}
	return 0
}

func (x *CMsgAMSendEmail) GetPersonaNameTokens() []*CMsgAMSendEmail_PersonaNameReplacementToken {
	if x != nil {
		return x.PersonaNameTokens
	}
	return nil
}

func (x *CMsgAMSendEmail) GetSourceGc() uint32 {
	if x != nil && x.SourceGc != nil {
		return *x.SourceGc
	}
	return 0
}

func (x *CMsgAMSendEmail) GetTokens() []*CMsgAMSendEmail_ReplacementToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type CMsgAMSendEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *uint32 `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
}

func (x *CMsgAMSendEmailResponse) Reset() {
	*x = CMsgAMSendEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMSendEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMSendEmailResponse) ProtoMessage() {}

func (x *CMsgAMSendEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMSendEmailResponse.ProtoReflect.Descriptor instead.
func (*CMsgAMSendEmailResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{27}
}

func (x *CMsgAMSendEmailResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

type CMsgGCGetEmailTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId        *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	EmailMsgType *uint32 `protobuf:"varint,2,opt,name=email_msg_type,json=emailMsgType" json:"email_msg_type,omitempty"`
	EmailLang    *int32  `protobuf:"varint,3,opt,name=email_lang,json=emailLang" json:"email_lang,omitempty"`
	EmailFormat  *int32  `protobuf:"varint,4,opt,name=email_format,json=emailFormat" json:"email_format,omitempty"`
}

func (x *CMsgGCGetEmailTemplate) Reset() {
	*x = CMsgGCGetEmailTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCGetEmailTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCGetEmailTemplate) ProtoMessage() {}

func (x *CMsgGCGetEmailTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCGetEmailTemplate.ProtoReflect.Descriptor instead.
func (*CMsgGCGetEmailTemplate) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{28}
}

func (x *CMsgGCGetEmailTemplate) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgGCGetEmailTemplate) GetEmailMsgType() uint32 {
	if x != nil && x.EmailMsgType != nil {
		return *x.EmailMsgType
	}
	return 0
}

func (x *CMsgGCGetEmailTemplate) GetEmailLang() int32 {
	if x != nil && x.EmailLang != nil {
		return *x.EmailLang
	}
	return 0
}

func (x *CMsgGCGetEmailTemplate) GetEmailFormat() int32 {
	if x != nil && x.EmailFormat != nil {
		return *x.EmailFormat
	}
	return 0
}

type CMsgGCGetEmailTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult        *uint32 `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	TemplateExists *bool   `protobuf:"varint,2,opt,name=template_exists,json=templateExists" json:"template_exists,omitempty"`
	Template       *string `protobuf:"bytes,3,opt,name=template" json:"template,omitempty"`
}

func (x *CMsgGCGetEmailTemplateResponse) Reset() {
	*x = CMsgGCGetEmailTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCGetEmailTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCGetEmailTemplateResponse) ProtoMessage() {}

func (x *CMsgGCGetEmailTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCGetEmailTemplateResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCGetEmailTemplateResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{29}
}

func (x *CMsgGCGetEmailTemplateResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

func (x *CMsgGCGetEmailTemplateResponse) GetTemplateExists() bool {
	if x != nil && x.TemplateExists != nil {
		return *x.TemplateExists
	}
	return false
}

func (x *CMsgGCGetEmailTemplateResponse) GetTemplate() string {
	if x != nil && x.Template != nil {
		return *x.Template
	}
	return ""
}

type CMsgAMGrantGuestPasses2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	PackageId        *uint32 `protobuf:"varint,2,opt,name=package_id,json=packageId" json:"package_id,omitempty"`
	PassesToGrant    *int32  `protobuf:"varint,3,opt,name=passes_to_grant,json=passesToGrant" json:"passes_to_grant,omitempty"`
	DaysToExpiration *int32  `protobuf:"varint,4,opt,name=days_to_expiration,json=daysToExpiration" json:"days_to_expiration,omitempty"`
	Action           *int32  `protobuf:"varint,5,opt,name=action" json:"action,omitempty"`
}

func (x *CMsgAMGrantGuestPasses2) Reset() {
	*x = CMsgAMGrantGuestPasses2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMGrantGuestPasses2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMGrantGuestPasses2) ProtoMessage() {}

func (x *CMsgAMGrantGuestPasses2) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMGrantGuestPasses2.ProtoReflect.Descriptor instead.
func (*CMsgAMGrantGuestPasses2) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{30}
}

func (x *CMsgAMGrantGuestPasses2) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

func (x *CMsgAMGrantGuestPasses2) GetPackageId() uint32 {
	if x != nil && x.PackageId != nil {
		return *x.PackageId
	}
	return 0
}

func (x *CMsgAMGrantGuestPasses2) GetPassesToGrant() int32 {
	if x != nil && x.PassesToGrant != nil {
		return *x.PassesToGrant
	}
	return 0
}

func (x *CMsgAMGrantGuestPasses2) GetDaysToExpiration() int32 {
	if x != nil && x.DaysToExpiration != nil {
		return *x.DaysToExpiration
	}
	return 0
}

func (x *CMsgAMGrantGuestPasses2) GetAction() int32 {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return 0
}

type CMsgAMGrantGuestPasses2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult       *int32 `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	PassesGranted *int32 `protobuf:"varint,2,opt,name=passes_granted,json=passesGranted" json:"passes_granted,omitempty"`
}

func (x *CMsgAMGrantGuestPasses2Response) Reset() {
	*x = CMsgAMGrantGuestPasses2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMGrantGuestPasses2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMGrantGuestPasses2Response) ProtoMessage() {}

func (x *CMsgAMGrantGuestPasses2Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMGrantGuestPasses2Response.ProtoReflect.Descriptor instead.
func (*CMsgAMGrantGuestPasses2Response) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{31}
}

func (x *CMsgAMGrantGuestPasses2Response) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

func (x *CMsgAMGrantGuestPasses2Response) GetPassesGranted() int32 {
	if x != nil && x.PassesGranted != nil {
		return *x.PassesGranted
	}
	return 0
}

type CMsgGCGetPersonaNames struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamids []uint64 `protobuf:"fixed64,1,rep,name=steamids" json:"steamids,omitempty"`
}

func (x *CMsgGCGetPersonaNames) Reset() {
	*x = CMsgGCGetPersonaNames{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCGetPersonaNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCGetPersonaNames) ProtoMessage() {}

func (x *CMsgGCGetPersonaNames) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCGetPersonaNames.ProtoReflect.Descriptor instead.
func (*CMsgGCGetPersonaNames) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{32}
}

func (x *CMsgGCGetPersonaNames) GetSteamids() []uint64 {
	if x != nil {
		return x.Steamids
	}
	return nil
}

type CMsgGCGetPersonaNames_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SucceededLookups     []*CMsgGCGetPersonaNames_Response_PersonaName `protobuf:"bytes,1,rep,name=succeeded_lookups,json=succeededLookups" json:"succeeded_lookups,omitempty"`
	FailedLookupSteamids []uint64                                      `protobuf:"fixed64,2,rep,name=failed_lookup_steamids,json=failedLookupSteamids" json:"failed_lookup_steamids,omitempty"`
}

func (x *CMsgGCGetPersonaNames_Response) Reset() {
	*x = CMsgGCGetPersonaNames_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCGetPersonaNames_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCGetPersonaNames_Response) ProtoMessage() {}

func (x *CMsgGCGetPersonaNames_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCGetPersonaNames_Response.ProtoReflect.Descriptor instead.
func (*CMsgGCGetPersonaNames_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{33}
}

func (x *CMsgGCGetPersonaNames_Response) GetSucceededLookups() []*CMsgGCGetPersonaNames_Response_PersonaName {
	if x != nil {
		return x.SucceededLookups
	}
	return nil
}

func (x *CMsgGCGetPersonaNames_Response) GetFailedLookupSteamids() []uint64 {
	if x != nil {
		return x.FailedLookupSteamids
	}
	return nil
}

type CMsgGCCheckFriendship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamidLeft  *uint64 `protobuf:"fixed64,1,opt,name=steamid_left,json=steamidLeft" json:"steamid_left,omitempty"`
	SteamidRight *uint64 `protobuf:"fixed64,2,opt,name=steamid_right,json=steamidRight" json:"steamid_right,omitempty"`
}

func (x *CMsgGCCheckFriendship) Reset() {
	*x = CMsgGCCheckFriendship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCCheckFriendship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCCheckFriendship) ProtoMessage() {}

func (x *CMsgGCCheckFriendship) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCCheckFriendship.ProtoReflect.Descriptor instead.
func (*CMsgGCCheckFriendship) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{34}
}

func (x *CMsgGCCheckFriendship) GetSteamidLeft() uint64 {
	if x != nil && x.SteamidLeft != nil {
		return *x.SteamidLeft
	}
	return 0
}

func (x *CMsgGCCheckFriendship) GetSteamidRight() uint64 {
	if x != nil && x.SteamidRight != nil {
		return *x.SteamidRight
	}
	return 0
}

type CMsgGCCheckFriendship_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success         *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	FoundFriendship *bool `protobuf:"varint,2,opt,name=found_friendship,json=foundFriendship" json:"found_friendship,omitempty"`
}

func (x *CMsgGCCheckFriendship_Response) Reset() {
	*x = CMsgGCCheckFriendship_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCCheckFriendship_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCCheckFriendship_Response) ProtoMessage() {}

func (x *CMsgGCCheckFriendship_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCCheckFriendship_Response.ProtoReflect.Descriptor instead.
func (*CMsgGCCheckFriendship_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{35}
}

func (x *CMsgGCCheckFriendship_Response) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *CMsgGCCheckFriendship_Response) GetFoundFriendship() bool {
	if x != nil && x.FoundFriendship != nil {
		return *x.FoundFriendship
	}
	return false
}

type CMsgGCGetAppFriendsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid                      *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	IncludeFriendshipTimestamps  *bool   `protobuf:"varint,2,opt,name=include_friendship_timestamps,json=includeFriendshipTimestamps" json:"include_friendship_timestamps,omitempty"`
	IncludeFriendsWithNoPlayTime *bool   `protobuf:"varint,3,opt,name=include_friends_with_no_play_time,json=includeFriendsWithNoPlayTime" json:"include_friends_with_no_play_time,omitempty"`
}

func (x *CMsgGCGetAppFriendsList) Reset() {
	*x = CMsgGCGetAppFriendsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCGetAppFriendsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCGetAppFriendsList) ProtoMessage() {}

func (x *CMsgGCGetAppFriendsList) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCGetAppFriendsList.ProtoReflect.Descriptor instead.
func (*CMsgGCGetAppFriendsList) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{36}
}

func (x *CMsgGCGetAppFriendsList) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgGCGetAppFriendsList) GetIncludeFriendshipTimestamps() bool {
	if x != nil && x.IncludeFriendshipTimestamps != nil {
		return *x.IncludeFriendshipTimestamps
	}
	return false
}

func (x *CMsgGCGetAppFriendsList) GetIncludeFriendsWithNoPlayTime() bool {
	if x != nil && x.IncludeFriendsWithNoPlayTime != nil {
		return *x.IncludeFriendsWithNoPlayTime
	}
	return false
}

type CMsgGCGetAppFriendsList_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success              *bool    `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Steamids             []uint64 `protobuf:"fixed64,2,rep,name=steamids" json:"steamids,omitempty"`
	FriendshipTimestamps []uint32 `protobuf:"fixed32,3,rep,name=friendship_timestamps,json=friendshipTimestamps" json:"friendship_timestamps,omitempty"`
	LastPlaytimes        []uint32 `protobuf:"fixed32,4,rep,name=last_playtimes,json=lastPlaytimes" json:"last_playtimes,omitempty"`
}

func (x *CMsgGCGetAppFriendsList_Response) Reset() {
	*x = CMsgGCGetAppFriendsList_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCGetAppFriendsList_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCGetAppFriendsList_Response) ProtoMessage() {}

func (x *CMsgGCGetAppFriendsList_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCGetAppFriendsList_Response.ProtoReflect.Descriptor instead.
func (*CMsgGCGetAppFriendsList_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{37}
}

func (x *CMsgGCGetAppFriendsList_Response) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *CMsgGCGetAppFriendsList_Response) GetSteamids() []uint64 {
	if x != nil {
		return x.Steamids
	}
	return nil
}

func (x *CMsgGCGetAppFriendsList_Response) GetFriendshipTimestamps() []uint32 {
	if x != nil {
		return x.FriendshipTimestamps
	}
	return nil
}

func (x *CMsgGCGetAppFriendsList_Response) GetLastPlaytimes() []uint32 {
	if x != nil {
		return x.LastPlaytimes
	}
	return nil
}

type CMsgGCMsgMasterSetDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterDirIndex *int32                               `protobuf:"varint,1,opt,name=master_dir_index,json=masterDirIndex" json:"master_dir_index,omitempty"`
	Dir            []*CMsgGCMsgMasterSetDirectory_SubGC `protobuf:"bytes,2,rep,name=dir" json:"dir,omitempty"`
}

func (x *CMsgGCMsgMasterSetDirectory) Reset() {
	*x = CMsgGCMsgMasterSetDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMsgMasterSetDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMsgMasterSetDirectory) ProtoMessage() {}

func (x *CMsgGCMsgMasterSetDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMsgMasterSetDirectory.ProtoReflect.Descriptor instead.
func (*CMsgGCMsgMasterSetDirectory) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{38}
}

func (x *CMsgGCMsgMasterSetDirectory) GetMasterDirIndex() int32 {
	if x != nil && x.MasterDirIndex != nil {
		return *x.MasterDirIndex
	}
	return 0
}

func (x *CMsgGCMsgMasterSetDirectory) GetDir() []*CMsgGCMsgMasterSetDirectory_SubGC {
	if x != nil {
		return x.Dir
	}
	return nil
}

type CMsgGCMsgMasterSetDirectory_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32  `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (x *CMsgGCMsgMasterSetDirectory_Response) Reset() {
	*x = CMsgGCMsgMasterSetDirectory_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMsgMasterSetDirectory_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMsgMasterSetDirectory_Response) ProtoMessage() {}

func (x *CMsgGCMsgMasterSetDirectory_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMsgMasterSetDirectory_Response.ProtoReflect.Descriptor instead.
func (*CMsgGCMsgMasterSetDirectory_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{39}
}

func (x *CMsgGCMsgMasterSetDirectory_Response) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

func (x *CMsgGCMsgMasterSetDirectory_Response) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type CMsgGCMsgWebAPIJobRequestForwardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirIndex *int32 `protobuf:"varint,1,opt,name=dir_index,json=dirIndex" json:"dir_index,omitempty"`
}

func (x *CMsgGCMsgWebAPIJobRequestForwardResponse) Reset() {
	*x = CMsgGCMsgWebAPIJobRequestForwardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMsgWebAPIJobRequestForwardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMsgWebAPIJobRequestForwardResponse) ProtoMessage() {}

func (x *CMsgGCMsgWebAPIJobRequestForwardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMsgWebAPIJobRequestForwardResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCMsgWebAPIJobRequestForwardResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{40}
}

func (x *CMsgGCMsgWebAPIJobRequestForwardResponse) GetDirIndex() int32 {
	if x != nil && x.DirIndex != nil {
		return *x.DirIndex
	}
	return 0
}

type CGCSystemMsg_GetPurchaseTrust_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CGCSystemMsg_GetPurchaseTrust_Request) Reset() {
	*x = CGCSystemMsg_GetPurchaseTrust_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCSystemMsg_GetPurchaseTrust_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCSystemMsg_GetPurchaseTrust_Request) ProtoMessage() {}

func (x *CGCSystemMsg_GetPurchaseTrust_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCSystemMsg_GetPurchaseTrust_Request.ProtoReflect.Descriptor instead.
func (*CGCSystemMsg_GetPurchaseTrust_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{41}
}

func (x *CGCSystemMsg_GetPurchaseTrust_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CGCSystemMsg_GetPurchaseTrust_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasPriorPurchaseHistory   *bool   `protobuf:"varint,1,opt,name=has_prior_purchase_history,json=hasPriorPurchaseHistory" json:"has_prior_purchase_history,omitempty"`
	HasNoRecentPasswordResets *bool   `protobuf:"varint,2,opt,name=has_no_recent_password_resets,json=hasNoRecentPasswordResets" json:"has_no_recent_password_resets,omitempty"`
	IsWalletCashTrusted       *bool   `protobuf:"varint,3,opt,name=is_wallet_cash_trusted,json=isWalletCashTrusted" json:"is_wallet_cash_trusted,omitempty"`
	TimeAllTrusted            *uint32 `protobuf:"varint,4,opt,name=time_all_trusted,json=timeAllTrusted" json:"time_all_trusted,omitempty"`
}

func (x *CGCSystemMsg_GetPurchaseTrust_Response) Reset() {
	*x = CGCSystemMsg_GetPurchaseTrust_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCSystemMsg_GetPurchaseTrust_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCSystemMsg_GetPurchaseTrust_Response) ProtoMessage() {}

func (x *CGCSystemMsg_GetPurchaseTrust_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCSystemMsg_GetPurchaseTrust_Response.ProtoReflect.Descriptor instead.
func (*CGCSystemMsg_GetPurchaseTrust_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{42}
}

func (x *CGCSystemMsg_GetPurchaseTrust_Response) GetHasPriorPurchaseHistory() bool {
	if x != nil && x.HasPriorPurchaseHistory != nil {
		return *x.HasPriorPurchaseHistory
	}
	return false
}

func (x *CGCSystemMsg_GetPurchaseTrust_Response) GetHasNoRecentPasswordResets() bool {
	if x != nil && x.HasNoRecentPasswordResets != nil {
		return *x.HasNoRecentPasswordResets
	}
	return false
}

func (x *CGCSystemMsg_GetPurchaseTrust_Response) GetIsWalletCashTrusted() bool {
	if x != nil && x.IsWalletCashTrusted != nil {
		return *x.IsWalletCashTrusted
	}
	return false
}

func (x *CGCSystemMsg_GetPurchaseTrust_Response) GetTimeAllTrusted() uint32 {
	if x != nil && x.TimeAllTrusted != nil {
		return *x.TimeAllTrusted
	}
	return 0
}

type CMsgGCHAccountVacStatusChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId           *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	AppId             *uint32 `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	RtimeVacbanStarts *uint32 `protobuf:"varint,3,opt,name=rtime_vacban_starts,json=rtimeVacbanStarts" json:"rtime_vacban_starts,omitempty"`
	IsBannedNow       *bool   `protobuf:"varint,4,opt,name=is_banned_now,json=isBannedNow" json:"is_banned_now,omitempty"`
	IsBannedFuture    *bool   `protobuf:"varint,5,opt,name=is_banned_future,json=isBannedFuture" json:"is_banned_future,omitempty"`
}

func (x *CMsgGCHAccountVacStatusChange) Reset() {
	*x = CMsgGCHAccountVacStatusChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCHAccountVacStatusChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCHAccountVacStatusChange) ProtoMessage() {}

func (x *CMsgGCHAccountVacStatusChange) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCHAccountVacStatusChange.ProtoReflect.Descriptor instead.
func (*CMsgGCHAccountVacStatusChange) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{43}
}

func (x *CMsgGCHAccountVacStatusChange) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

func (x *CMsgGCHAccountVacStatusChange) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgGCHAccountVacStatusChange) GetRtimeVacbanStarts() uint32 {
	if x != nil && x.RtimeVacbanStarts != nil {
		return *x.RtimeVacbanStarts
	}
	return 0
}

func (x *CMsgGCHAccountVacStatusChange) GetIsBannedNow() bool {
	if x != nil && x.IsBannedNow != nil {
		return *x.IsBannedNow
	}
	return false
}

func (x *CMsgGCHAccountVacStatusChange) GetIsBannedFuture() bool {
	if x != nil && x.IsBannedFuture != nil {
		return *x.IsBannedFuture
	}
	return false
}

type CMsgGCRoutingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirIndex      []int32                          `protobuf:"varint,1,rep,name=dir_index,json=dirIndex" json:"dir_index,omitempty"`
	Method        *CMsgGCRoutingInfo_RoutingMethod `protobuf:"varint,2,opt,name=method,enum=dota.CMsgGCRoutingInfo_RoutingMethod" json:"method,omitempty"`
	Fallback      *CMsgGCRoutingInfo_RoutingMethod `protobuf:"varint,3,opt,name=fallback,enum=dota.CMsgGCRoutingInfo_RoutingMethod" json:"fallback,omitempty"`
	ProtobufField *uint32                          `protobuf:"varint,4,opt,name=protobuf_field,json=protobufField" json:"protobuf_field,omitempty"`
	WebapiParam   *string                          `protobuf:"bytes,5,opt,name=webapi_param,json=webapiParam" json:"webapi_param,omitempty"`
}

func (x *CMsgGCRoutingInfo) Reset() {
	*x = CMsgGCRoutingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRoutingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRoutingInfo) ProtoMessage() {}

func (x *CMsgGCRoutingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRoutingInfo.ProtoReflect.Descriptor instead.
func (*CMsgGCRoutingInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{44}
}

func (x *CMsgGCRoutingInfo) GetDirIndex() []int32 {
	if x != nil {
		return x.DirIndex
	}
	return nil
}

func (x *CMsgGCRoutingInfo) GetMethod() CMsgGCRoutingInfo_RoutingMethod {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return CMsgGCRoutingInfo_RANDOM
}

func (x *CMsgGCRoutingInfo) GetFallback() CMsgGCRoutingInfo_RoutingMethod {
	if x != nil && x.Fallback != nil {
		return *x.Fallback
	}
	return CMsgGCRoutingInfo_RANDOM
}

func (x *CMsgGCRoutingInfo) GetProtobufField() uint32 {
	if x != nil && x.ProtobufField != nil {
		return *x.ProtobufField
	}
	return 0
}

func (x *CMsgGCRoutingInfo) GetWebapiParam() string {
	if x != nil && x.WebapiParam != nil {
		return *x.WebapiParam
	}
	return ""
}

type CMsgGCMsgMasterSetWebAPIRouting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*CMsgGCMsgMasterSetWebAPIRouting_Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *CMsgGCMsgMasterSetWebAPIRouting) Reset() {
	*x = CMsgGCMsgMasterSetWebAPIRouting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMsgMasterSetWebAPIRouting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMsgMasterSetWebAPIRouting) ProtoMessage() {}

func (x *CMsgGCMsgMasterSetWebAPIRouting) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMsgMasterSetWebAPIRouting.ProtoReflect.Descriptor instead.
func (*CMsgGCMsgMasterSetWebAPIRouting) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{45}
}

func (x *CMsgGCMsgMasterSetWebAPIRouting) GetEntries() []*CMsgGCMsgMasterSetWebAPIRouting_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type CMsgGCMsgMasterSetClientMsgRouting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*CMsgGCMsgMasterSetClientMsgRouting_Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *CMsgGCMsgMasterSetClientMsgRouting) Reset() {
	*x = CMsgGCMsgMasterSetClientMsgRouting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMsgMasterSetClientMsgRouting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMsgMasterSetClientMsgRouting) ProtoMessage() {}

func (x *CMsgGCMsgMasterSetClientMsgRouting) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMsgMasterSetClientMsgRouting.ProtoReflect.Descriptor instead.
func (*CMsgGCMsgMasterSetClientMsgRouting) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{46}
}

func (x *CMsgGCMsgMasterSetClientMsgRouting) GetEntries() []*CMsgGCMsgMasterSetClientMsgRouting_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type CMsgGCMsgMasterSetWebAPIRouting_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32 `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
}

func (x *CMsgGCMsgMasterSetWebAPIRouting_Response) Reset() {
	*x = CMsgGCMsgMasterSetWebAPIRouting_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMsgMasterSetWebAPIRouting_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMsgMasterSetWebAPIRouting_Response) ProtoMessage() {}

func (x *CMsgGCMsgMasterSetWebAPIRouting_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMsgMasterSetWebAPIRouting_Response.ProtoReflect.Descriptor instead.
func (*CMsgGCMsgMasterSetWebAPIRouting_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{47}
}

func (x *CMsgGCMsgMasterSetWebAPIRouting_Response) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

type CMsgGCMsgMasterSetClientMsgRouting_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32 `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
}

func (x *CMsgGCMsgMasterSetClientMsgRouting_Response) Reset() {
	*x = CMsgGCMsgMasterSetClientMsgRouting_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMsgMasterSetClientMsgRouting_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMsgMasterSetClientMsgRouting_Response) ProtoMessage() {}

func (x *CMsgGCMsgMasterSetClientMsgRouting_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMsgMasterSetClientMsgRouting_Response.ProtoReflect.Descriptor instead.
func (*CMsgGCMsgMasterSetClientMsgRouting_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{48}
}

func (x *CMsgGCMsgMasterSetClientMsgRouting_Response) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

type CMsgGCMsgSetOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options         []CMsgGCMsgSetOptions_Option        `protobuf:"varint,1,rep,name=options,enum=dota.CMsgGCMsgSetOptions_Option" json:"options,omitempty"`
	ClientMsgRanges []*CMsgGCMsgSetOptions_MessageRange `protobuf:"bytes,2,rep,name=client_msg_ranges,json=clientMsgRanges" json:"client_msg_ranges,omitempty"`
	GcsqlVersion    *CMsgGCMsgSetOptions_GCSQLVersion   `protobuf:"varint,3,opt,name=gcsql_version,json=gcsqlVersion,enum=dota.CMsgGCMsgSetOptions_GCSQLVersion" json:"gcsql_version,omitempty"`
}

func (x *CMsgGCMsgSetOptions) Reset() {
	*x = CMsgGCMsgSetOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMsgSetOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMsgSetOptions) ProtoMessage() {}

func (x *CMsgGCMsgSetOptions) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMsgSetOptions.ProtoReflect.Descriptor instead.
func (*CMsgGCMsgSetOptions) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{49}
}

func (x *CMsgGCMsgSetOptions) GetOptions() []CMsgGCMsgSetOptions_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CMsgGCMsgSetOptions) GetClientMsgRanges() []*CMsgGCMsgSetOptions_MessageRange {
	if x != nil {
		return x.ClientMsgRanges
	}
	return nil
}

func (x *CMsgGCMsgSetOptions) GetGcsqlVersion() CMsgGCMsgSetOptions_GCSQLVersion {
	if x != nil && x.GcsqlVersion != nil {
		return *x.GcsqlVersion
	}
	return CMsgGCMsgSetOptions_GCSQL_VERSION_BASELINE
}

type CMsgGCHUpdateSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId       *uint64                            `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	AppId         *uint32                            `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Online        *bool                              `protobuf:"varint,3,opt,name=online" json:"online,omitempty"`
	ServerSteamId *uint64                            `protobuf:"fixed64,4,opt,name=server_steam_id,json=serverSteamId" json:"server_steam_id,omitempty"`
	ServerAddr    *uint32                            `protobuf:"varint,5,opt,name=server_addr,json=serverAddr" json:"server_addr,omitempty"`
	ServerPort    *uint32                            `protobuf:"varint,6,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	OsType        *uint32                            `protobuf:"varint,7,opt,name=os_type,json=osType" json:"os_type,omitempty"`
	ClientAddr    *uint32                            `protobuf:"varint,8,opt,name=client_addr,json=clientAddr" json:"client_addr,omitempty"`
	ExtraFields   []*CMsgGCHUpdateSession_ExtraField `protobuf:"bytes,9,rep,name=extra_fields,json=extraFields" json:"extra_fields,omitempty"`
}

func (x *CMsgGCHUpdateSession) Reset() {
	*x = CMsgGCHUpdateSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCHUpdateSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCHUpdateSession) ProtoMessage() {}

func (x *CMsgGCHUpdateSession) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCHUpdateSession.ProtoReflect.Descriptor instead.
func (*CMsgGCHUpdateSession) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{50}
}

func (x *CMsgGCHUpdateSession) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

func (x *CMsgGCHUpdateSession) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgGCHUpdateSession) GetOnline() bool {
	if x != nil && x.Online != nil {
		return *x.Online
	}
	return false
}

func (x *CMsgGCHUpdateSession) GetServerSteamId() uint64 {
	if x != nil && x.ServerSteamId != nil {
		return *x.ServerSteamId
	}
	return 0
}

func (x *CMsgGCHUpdateSession) GetServerAddr() uint32 {
	if x != nil && x.ServerAddr != nil {
		return *x.ServerAddr
	}
	return 0
}

func (x *CMsgGCHUpdateSession) GetServerPort() uint32 {
	if x != nil && x.ServerPort != nil {
		return *x.ServerPort
	}
	return 0
}

func (x *CMsgGCHUpdateSession) GetOsType() uint32 {
	if x != nil && x.OsType != nil {
		return *x.OsType
	}
	return 0
}

func (x *CMsgGCHUpdateSession) GetClientAddr() uint32 {
	if x != nil && x.ClientAddr != nil {
		return *x.ClientAddr
	}
	return 0
}

func (x *CMsgGCHUpdateSession) GetExtraFields() []*CMsgGCHUpdateSession_ExtraField {
	if x != nil {
		return x.ExtraFields
	}
	return nil
}

type CMsgNotificationOfSuspiciousActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid           *uint64                                                     `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Appid             *uint32                                                     `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	MultipleInstances *CMsgNotificationOfSuspiciousActivity_MultipleGameInstances `protobuf:"bytes,3,opt,name=multiple_instances,json=multipleInstances" json:"multiple_instances,omitempty"`
}

func (x *CMsgNotificationOfSuspiciousActivity) Reset() {
	*x = CMsgNotificationOfSuspiciousActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgNotificationOfSuspiciousActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgNotificationOfSuspiciousActivity) ProtoMessage() {}

func (x *CMsgNotificationOfSuspiciousActivity) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgNotificationOfSuspiciousActivity.ProtoReflect.Descriptor instead.
func (*CMsgNotificationOfSuspiciousActivity) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{51}
}

func (x *CMsgNotificationOfSuspiciousActivity) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgNotificationOfSuspiciousActivity) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgNotificationOfSuspiciousActivity) GetMultipleInstances() *CMsgNotificationOfSuspiciousActivity_MultipleGameInstances {
	if x != nil {
		return x.MultipleInstances
	}
	return nil
}

type CMsgGCHVacVerificationChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid    *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Appid      *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	IsVerified *bool   `protobuf:"varint,3,opt,name=is_verified,json=isVerified" json:"is_verified,omitempty"`
}

func (x *CMsgGCHVacVerificationChange) Reset() {
	*x = CMsgGCHVacVerificationChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCHVacVerificationChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCHVacVerificationChange) ProtoMessage() {}

func (x *CMsgGCHVacVerificationChange) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCHVacVerificationChange.ProtoReflect.Descriptor instead.
func (*CMsgGCHVacVerificationChange) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{52}
}

func (x *CMsgGCHVacVerificationChange) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgGCHVacVerificationChange) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgGCHVacVerificationChange) GetIsVerified() bool {
	if x != nil && x.IsVerified != nil {
		return *x.IsVerified
	}
	return false
}

type CMsgGCCheckClanMembership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Clanid  *uint32 `protobuf:"varint,2,opt,name=clanid" json:"clanid,omitempty"`
}

func (x *CMsgGCCheckClanMembership) Reset() {
	*x = CMsgGCCheckClanMembership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCCheckClanMembership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCCheckClanMembership) ProtoMessage() {}

func (x *CMsgGCCheckClanMembership) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCCheckClanMembership.ProtoReflect.Descriptor instead.
func (*CMsgGCCheckClanMembership) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{53}
}

func (x *CMsgGCCheckClanMembership) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgGCCheckClanMembership) GetClanid() uint32 {
	if x != nil && x.Clanid != nil {
		return *x.Clanid
	}
	return 0
}

type CMsgGCCheckClanMembership_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ismember *bool `protobuf:"varint,1,opt,name=ismember" json:"ismember,omitempty"`
}

func (x *CMsgGCCheckClanMembership_Response) Reset() {
	*x = CMsgGCCheckClanMembership_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCCheckClanMembership_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCCheckClanMembership_Response) ProtoMessage() {}

func (x *CMsgGCCheckClanMembership_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCCheckClanMembership_Response.ProtoReflect.Descriptor instead.
func (*CMsgGCCheckClanMembership_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{54}
}

func (x *CMsgGCCheckClanMembership_Response) GetIsmember() bool {
	if x != nil && x.Ismember != nil {
		return *x.Ismember
	}
	return false
}

type CMsgGCHAppCheersReceived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid        *uint32                                 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	CheerTargets []*CMsgGCHAppCheersReceived_CheerTarget `protobuf:"bytes,2,rep,name=cheer_targets,json=cheerTargets" json:"cheer_targets,omitempty"`
}

func (x *CMsgGCHAppCheersReceived) Reset() {
	*x = CMsgGCHAppCheersReceived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCHAppCheersReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCHAppCheersReceived) ProtoMessage() {}

func (x *CMsgGCHAppCheersReceived) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCHAppCheersReceived.ProtoReflect.Descriptor instead.
func (*CMsgGCHAppCheersReceived) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{55}
}

func (x *CMsgGCHAppCheersReceived) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgGCHAppCheersReceived) GetCheerTargets() []*CMsgGCHAppCheersReceived_CheerTarget {
	if x != nil {
		return x.CheerTargets
	}
	return nil
}

type CMsgGCHAppCheersGetAllowedTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid       *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	CheerTarget *uint64 `protobuf:"varint,2,opt,name=cheer_target,json=cheerTarget" json:"cheer_target,omitempty"`
}

func (x *CMsgGCHAppCheersGetAllowedTypes) Reset() {
	*x = CMsgGCHAppCheersGetAllowedTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCHAppCheersGetAllowedTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCHAppCheersGetAllowedTypes) ProtoMessage() {}

func (x *CMsgGCHAppCheersGetAllowedTypes) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCHAppCheersGetAllowedTypes.ProtoReflect.Descriptor instead.
func (*CMsgGCHAppCheersGetAllowedTypes) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{56}
}

func (x *CMsgGCHAppCheersGetAllowedTypes) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgGCHAppCheersGetAllowedTypes) GetCheerTarget() uint64 {
	if x != nil && x.CheerTarget != nil {
		return *x.CheerTarget
	}
	return 0
}

type CMsgGCHAppCheersGetAllowedTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheerTypesValidAllUsers []uint32                                               `protobuf:"varint,1,rep,name=cheer_types_valid_all_users,json=cheerTypesValidAllUsers" json:"cheer_types_valid_all_users,omitempty"`
	CheerRemaps             []*CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps `protobuf:"bytes,2,rep,name=cheer_remaps,json=cheerRemaps" json:"cheer_remaps,omitempty"`
	CacheDuration           *uint32                                                `protobuf:"varint,3,opt,name=cache_duration,json=cacheDuration" json:"cache_duration,omitempty"`
}

func (x *CMsgGCHAppCheersGetAllowedTypesResponse) Reset() {
	*x = CMsgGCHAppCheersGetAllowedTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCHAppCheersGetAllowedTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCHAppCheersGetAllowedTypesResponse) ProtoMessage() {}

func (x *CMsgGCHAppCheersGetAllowedTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCHAppCheersGetAllowedTypesResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCHAppCheersGetAllowedTypesResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{57}
}

func (x *CMsgGCHAppCheersGetAllowedTypesResponse) GetCheerTypesValidAllUsers() []uint32 {
	if x != nil {
		return x.CheerTypesValidAllUsers
	}
	return nil
}

func (x *CMsgGCHAppCheersGetAllowedTypesResponse) GetCheerRemaps() []*CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps {
	if x != nil {
		return x.CheerRemaps
	}
	return nil
}

func (x *CMsgGCHAppCheersGetAllowedTypesResponse) GetCacheDuration() uint32 {
	if x != nil && x.CacheDuration != nil {
		return *x.CacheDuration
	}
	return 0
}

type CWorkshop_AddSpecialPayment_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid         *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Gameitemid    *uint32 `protobuf:"varint,2,opt,name=gameitemid" json:"gameitemid,omitempty"`
	Date          *string `protobuf:"bytes,3,opt,name=date" json:"date,omitempty"`
	PaymentUsUsd  *uint64 `protobuf:"varint,4,opt,name=payment_us_usd,json=paymentUsUsd" json:"payment_us_usd,omitempty"`
	PaymentRowUsd *uint64 `protobuf:"varint,5,opt,name=payment_row_usd,json=paymentRowUsd" json:"payment_row_usd,omitempty"`
}

func (x *CWorkshop_AddSpecialPayment_Request) Reset() {
	*x = CWorkshop_AddSpecialPayment_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_AddSpecialPayment_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_AddSpecialPayment_Request) ProtoMessage() {}

func (x *CWorkshop_AddSpecialPayment_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_AddSpecialPayment_Request.ProtoReflect.Descriptor instead.
func (*CWorkshop_AddSpecialPayment_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{58}
}

func (x *CWorkshop_AddSpecialPayment_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWorkshop_AddSpecialPayment_Request) GetGameitemid() uint32 {
	if x != nil && x.Gameitemid != nil {
		return *x.Gameitemid
	}
	return 0
}

func (x *CWorkshop_AddSpecialPayment_Request) GetDate() string {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return ""
}

func (x *CWorkshop_AddSpecialPayment_Request) GetPaymentUsUsd() uint64 {
	if x != nil && x.PaymentUsUsd != nil {
		return *x.PaymentUsUsd
	}
	return 0
}

func (x *CWorkshop_AddSpecialPayment_Request) GetPaymentRowUsd() uint64 {
	if x != nil && x.PaymentRowUsd != nil {
		return *x.PaymentRowUsd
	}
	return 0
}

type CWorkshop_AddSpecialPayment_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CWorkshop_AddSpecialPayment_Response) Reset() {
	*x = CWorkshop_AddSpecialPayment_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_AddSpecialPayment_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_AddSpecialPayment_Response) ProtoMessage() {}

func (x *CWorkshop_AddSpecialPayment_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_AddSpecialPayment_Response.ProtoReflect.Descriptor instead.
func (*CWorkshop_AddSpecialPayment_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{59}
}

type CWorkshop_GetSpecialPayments_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid      *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Gameitemid *uint32 `protobuf:"varint,2,opt,name=gameitemid" json:"gameitemid,omitempty"`
	Date       *string `protobuf:"bytes,3,opt,name=date" json:"date,omitempty"`
}

func (x *CWorkshop_GetSpecialPayments_Request) Reset() {
	*x = CWorkshop_GetSpecialPayments_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetSpecialPayments_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetSpecialPayments_Request) ProtoMessage() {}

func (x *CWorkshop_GetSpecialPayments_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetSpecialPayments_Request.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetSpecialPayments_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{60}
}

func (x *CWorkshop_GetSpecialPayments_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWorkshop_GetSpecialPayments_Request) GetGameitemid() uint32 {
	if x != nil && x.Gameitemid != nil {
		return *x.Gameitemid
	}
	return 0
}

func (x *CWorkshop_GetSpecialPayments_Request) GetDate() string {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return ""
}

type CWorkshop_GetSpecialPayments_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecialPayments []*CWorkshop_GetSpecialPayments_Response_SpecialPayment `protobuf:"bytes,1,rep,name=special_payments,json=specialPayments" json:"special_payments,omitempty"`
}

func (x *CWorkshop_GetSpecialPayments_Response) Reset() {
	*x = CWorkshop_GetSpecialPayments_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetSpecialPayments_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetSpecialPayments_Response) ProtoMessage() {}

func (x *CWorkshop_GetSpecialPayments_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetSpecialPayments_Response.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetSpecialPayments_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{61}
}

func (x *CWorkshop_GetSpecialPayments_Response) GetSpecialPayments() []*CWorkshop_GetSpecialPayments_Response_SpecialPayment {
	if x != nil {
		return x.SpecialPayments
	}
	return nil
}

type CMsgHttpRequest_RequestHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *CMsgHttpRequest_RequestHeader) Reset() {
	*x = CMsgHttpRequest_RequestHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHttpRequest_RequestHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHttpRequest_RequestHeader) ProtoMessage() {}

func (x *CMsgHttpRequest_RequestHeader) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHttpRequest_RequestHeader.ProtoReflect.Descriptor instead.
func (*CMsgHttpRequest_RequestHeader) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CMsgHttpRequest_RequestHeader) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgHttpRequest_RequestHeader) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CMsgHttpRequest_QueryParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value []byte  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *CMsgHttpRequest_QueryParam) Reset() {
	*x = CMsgHttpRequest_QueryParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHttpRequest_QueryParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHttpRequest_QueryParam) ProtoMessage() {}

func (x *CMsgHttpRequest_QueryParam) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHttpRequest_QueryParam.ProtoReflect.Descriptor instead.
func (*CMsgHttpRequest_QueryParam) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{1, 1}
}

func (x *CMsgHttpRequest_QueryParam) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgHttpRequest_QueryParam) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type CMsgHttpResponse_ResponseHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *CMsgHttpResponse_ResponseHeader) Reset() {
	*x = CMsgHttpResponse_ResponseHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHttpResponse_ResponseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHttpResponse_ResponseHeader) ProtoMessage() {}

func (x *CMsgHttpResponse_ResponseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHttpResponse_ResponseHeader.ProtoReflect.Descriptor instead.
func (*CMsgHttpResponse_ResponseHeader) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CMsgHttpResponse_ResponseHeader) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgHttpResponse_ResponseHeader) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CGCMsgMemCachedGetResponse_ValueTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Found *bool  `protobuf:"varint,1,opt,name=found" json:"found,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *CGCMsgMemCachedGetResponse_ValueTag) Reset() {
	*x = CGCMsgMemCachedGetResponse_ValueTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgMemCachedGetResponse_ValueTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgMemCachedGetResponse_ValueTag) ProtoMessage() {}

func (x *CGCMsgMemCachedGetResponse_ValueTag) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgMemCachedGetResponse_ValueTag.ProtoReflect.Descriptor instead.
func (*CGCMsgMemCachedGetResponse_ValueTag) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{13, 0}
}

func (x *CGCMsgMemCachedGetResponse_ValueTag) GetFound() bool {
	if x != nil && x.Found != nil {
		return *x.Found
	}
	return false
}

func (x *CGCMsgMemCachedGetResponse_ValueTag) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type CGCMsgMemCachedSet_KeyPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value []byte  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *CGCMsgMemCachedSet_KeyPair) Reset() {
	*x = CGCMsgMemCachedSet_KeyPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgMemCachedSet_KeyPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgMemCachedSet_KeyPair) ProtoMessage() {}

func (x *CGCMsgMemCachedSet_KeyPair) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgMemCachedSet_KeyPair.ProtoReflect.Descriptor instead.
func (*CGCMsgMemCachedSet_KeyPair) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CGCMsgMemCachedSet_KeyPair) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CGCMsgMemCachedSet_KeyPair) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type CMsgAMSendEmail_ReplacementToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenName  *string `protobuf:"bytes,1,opt,name=token_name,json=tokenName" json:"token_name,omitempty"`
	TokenValue *string `protobuf:"bytes,2,opt,name=token_value,json=tokenValue" json:"token_value,omitempty"`
}

func (x *CMsgAMSendEmail_ReplacementToken) Reset() {
	*x = CMsgAMSendEmail_ReplacementToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMSendEmail_ReplacementToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMSendEmail_ReplacementToken) ProtoMessage() {}

func (x *CMsgAMSendEmail_ReplacementToken) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMSendEmail_ReplacementToken.ProtoReflect.Descriptor instead.
func (*CMsgAMSendEmail_ReplacementToken) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{26, 0}
}

func (x *CMsgAMSendEmail_ReplacementToken) GetTokenName() string {
	if x != nil && x.TokenName != nil {
		return *x.TokenName
	}
	return ""
}

func (x *CMsgAMSendEmail_ReplacementToken) GetTokenValue() string {
	if x != nil && x.TokenValue != nil {
		return *x.TokenValue
	}
	return ""
}

type CMsgAMSendEmail_PersonaNameReplacementToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid   *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	TokenName *string `protobuf:"bytes,2,opt,name=token_name,json=tokenName" json:"token_name,omitempty"`
}

func (x *CMsgAMSendEmail_PersonaNameReplacementToken) Reset() {
	*x = CMsgAMSendEmail_PersonaNameReplacementToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMSendEmail_PersonaNameReplacementToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMSendEmail_PersonaNameReplacementToken) ProtoMessage() {}

func (x *CMsgAMSendEmail_PersonaNameReplacementToken) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMSendEmail_PersonaNameReplacementToken.ProtoReflect.Descriptor instead.
func (*CMsgAMSendEmail_PersonaNameReplacementToken) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{26, 1}
}

func (x *CMsgAMSendEmail_PersonaNameReplacementToken) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgAMSendEmail_PersonaNameReplacementToken) GetTokenName() string {
	if x != nil && x.TokenName != nil {
		return *x.TokenName
	}
	return ""
}

type CMsgGCGetPersonaNames_Response_PersonaName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid     *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	PersonaName *string `protobuf:"bytes,2,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
}

func (x *CMsgGCGetPersonaNames_Response_PersonaName) Reset() {
	*x = CMsgGCGetPersonaNames_Response_PersonaName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCGetPersonaNames_Response_PersonaName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCGetPersonaNames_Response_PersonaName) ProtoMessage() {}

func (x *CMsgGCGetPersonaNames_Response_PersonaName) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCGetPersonaNames_Response_PersonaName.ProtoReflect.Descriptor instead.
func (*CMsgGCGetPersonaNames_Response_PersonaName) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{33, 0}
}

func (x *CMsgGCGetPersonaNames_Response_PersonaName) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgGCGetPersonaNames_Response_PersonaName) GetPersonaName() string {
	if x != nil && x.PersonaName != nil {
		return *x.PersonaName
	}
	return ""
}

type CMsgGCMsgMasterSetDirectory_SubGC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirIndex    *int32  `protobuf:"varint,1,opt,name=dir_index,json=dirIndex" json:"dir_index,omitempty"`
	Name        *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Box         *string `protobuf:"bytes,3,opt,name=box" json:"box,omitempty"`
	CommandLine *string `protobuf:"bytes,4,opt,name=command_line,json=commandLine" json:"command_line,omitempty"`
	GcBinary    *string `protobuf:"bytes,5,opt,name=gc_binary,json=gcBinary" json:"gc_binary,omitempty"`
}

func (x *CMsgGCMsgMasterSetDirectory_SubGC) Reset() {
	*x = CMsgGCMsgMasterSetDirectory_SubGC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMsgMasterSetDirectory_SubGC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMsgMasterSetDirectory_SubGC) ProtoMessage() {}

func (x *CMsgGCMsgMasterSetDirectory_SubGC) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMsgMasterSetDirectory_SubGC.ProtoReflect.Descriptor instead.
func (*CMsgGCMsgMasterSetDirectory_SubGC) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{38, 0}
}

func (x *CMsgGCMsgMasterSetDirectory_SubGC) GetDirIndex() int32 {
	if x != nil && x.DirIndex != nil {
		return *x.DirIndex
	}
	return 0
}

func (x *CMsgGCMsgMasterSetDirectory_SubGC) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgGCMsgMasterSetDirectory_SubGC) GetBox() string {
	if x != nil && x.Box != nil {
		return *x.Box
	}
	return ""
}

func (x *CMsgGCMsgMasterSetDirectory_SubGC) GetCommandLine() string {
	if x != nil && x.CommandLine != nil {
		return *x.CommandLine
	}
	return ""
}

func (x *CMsgGCMsgMasterSetDirectory_SubGC) GetGcBinary() string {
	if x != nil && x.GcBinary != nil {
		return *x.GcBinary
	}
	return ""
}

type CMsgGCMsgMasterSetWebAPIRouting_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceName *string            `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName" json:"interface_name,omitempty"`
	MethodName    *string            `protobuf:"bytes,2,opt,name=method_name,json=methodName" json:"method_name,omitempty"`
	Routing       *CMsgGCRoutingInfo `protobuf:"bytes,3,opt,name=routing" json:"routing,omitempty"`
}

func (x *CMsgGCMsgMasterSetWebAPIRouting_Entry) Reset() {
	*x = CMsgGCMsgMasterSetWebAPIRouting_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMsgMasterSetWebAPIRouting_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMsgMasterSetWebAPIRouting_Entry) ProtoMessage() {}

func (x *CMsgGCMsgMasterSetWebAPIRouting_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMsgMasterSetWebAPIRouting_Entry.ProtoReflect.Descriptor instead.
func (*CMsgGCMsgMasterSetWebAPIRouting_Entry) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{45, 0}
}

func (x *CMsgGCMsgMasterSetWebAPIRouting_Entry) GetInterfaceName() string {
	if x != nil && x.InterfaceName != nil {
		return *x.InterfaceName
	}
	return ""
}

func (x *CMsgGCMsgMasterSetWebAPIRouting_Entry) GetMethodName() string {
	if x != nil && x.MethodName != nil {
		return *x.MethodName
	}
	return ""
}

func (x *CMsgGCMsgMasterSetWebAPIRouting_Entry) GetRouting() *CMsgGCRoutingInfo {
	if x != nil {
		return x.Routing
	}
	return nil
}

type CMsgGCMsgMasterSetClientMsgRouting_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType *uint32            `protobuf:"varint,1,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	Routing *CMsgGCRoutingInfo `protobuf:"bytes,2,opt,name=routing" json:"routing,omitempty"`
}

func (x *CMsgGCMsgMasterSetClientMsgRouting_Entry) Reset() {
	*x = CMsgGCMsgMasterSetClientMsgRouting_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMsgMasterSetClientMsgRouting_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMsgMasterSetClientMsgRouting_Entry) ProtoMessage() {}

func (x *CMsgGCMsgMasterSetClientMsgRouting_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMsgMasterSetClientMsgRouting_Entry.ProtoReflect.Descriptor instead.
func (*CMsgGCMsgMasterSetClientMsgRouting_Entry) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{46, 0}
}

func (x *CMsgGCMsgMasterSetClientMsgRouting_Entry) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *CMsgGCMsgMasterSetClientMsgRouting_Entry) GetRouting() *CMsgGCRoutingInfo {
	if x != nil {
		return x.Routing
	}
	return nil
}

type CMsgGCMsgSetOptions_MessageRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Low  *uint32 `protobuf:"varint,1,req,name=low" json:"low,omitempty"`
	High *uint32 `protobuf:"varint,2,req,name=high" json:"high,omitempty"`
}

func (x *CMsgGCMsgSetOptions_MessageRange) Reset() {
	*x = CMsgGCMsgSetOptions_MessageRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMsgSetOptions_MessageRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMsgSetOptions_MessageRange) ProtoMessage() {}

func (x *CMsgGCMsgSetOptions_MessageRange) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMsgSetOptions_MessageRange.ProtoReflect.Descriptor instead.
func (*CMsgGCMsgSetOptions_MessageRange) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{49, 0}
}

func (x *CMsgGCMsgSetOptions_MessageRange) GetLow() uint32 {
	if x != nil && x.Low != nil {
		return *x.Low
	}
	return 0
}

func (x *CMsgGCMsgSetOptions_MessageRange) GetHigh() uint32 {
	if x != nil && x.High != nil {
		return *x.High
	}
	return 0
}

type CMsgGCHUpdateSession_ExtraField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *CMsgGCHUpdateSession_ExtraField) Reset() {
	*x = CMsgGCHUpdateSession_ExtraField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCHUpdateSession_ExtraField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCHUpdateSession_ExtraField) ProtoMessage() {}

func (x *CMsgGCHUpdateSession_ExtraField) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCHUpdateSession_ExtraField.ProtoReflect.Descriptor instead.
func (*CMsgGCHUpdateSession_ExtraField) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{50, 0}
}

func (x *CMsgGCHUpdateSession_ExtraField) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgGCHUpdateSession_ExtraField) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CMsgNotificationOfSuspiciousActivity_MultipleGameInstances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppInstanceCount *uint32  `protobuf:"varint,1,opt,name=app_instance_count,json=appInstanceCount" json:"app_instance_count,omitempty"`
	OtherSteamids    []uint64 `protobuf:"fixed64,2,rep,name=other_steamids,json=otherSteamids" json:"other_steamids,omitempty"`
}

func (x *CMsgNotificationOfSuspiciousActivity_MultipleGameInstances) Reset() {
	*x = CMsgNotificationOfSuspiciousActivity_MultipleGameInstances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgNotificationOfSuspiciousActivity_MultipleGameInstances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgNotificationOfSuspiciousActivity_MultipleGameInstances) ProtoMessage() {}

func (x *CMsgNotificationOfSuspiciousActivity_MultipleGameInstances) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgNotificationOfSuspiciousActivity_MultipleGameInstances.ProtoReflect.Descriptor instead.
func (*CMsgNotificationOfSuspiciousActivity_MultipleGameInstances) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{51, 0}
}

func (x *CMsgNotificationOfSuspiciousActivity_MultipleGameInstances) GetAppInstanceCount() uint32 {
	if x != nil && x.AppInstanceCount != nil {
		return *x.AppInstanceCount
	}
	return 0
}

func (x *CMsgNotificationOfSuspiciousActivity_MultipleGameInstances) GetOtherSteamids() []uint64 {
	if x != nil {
		return x.OtherSteamids
	}
	return nil
}

type CMsgGCHAppCheersReceived_CheerTypeAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheerType   *uint32 `protobuf:"varint,1,opt,name=cheer_type,json=cheerType" json:"cheer_type,omitempty"`
	CheerAmount *uint32 `protobuf:"varint,2,opt,name=cheer_amount,json=cheerAmount" json:"cheer_amount,omitempty"`
}

func (x *CMsgGCHAppCheersReceived_CheerTypeAmount) Reset() {
	*x = CMsgGCHAppCheersReceived_CheerTypeAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCHAppCheersReceived_CheerTypeAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCHAppCheersReceived_CheerTypeAmount) ProtoMessage() {}

func (x *CMsgGCHAppCheersReceived_CheerTypeAmount) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCHAppCheersReceived_CheerTypeAmount.ProtoReflect.Descriptor instead.
func (*CMsgGCHAppCheersReceived_CheerTypeAmount) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{55, 0}
}

func (x *CMsgGCHAppCheersReceived_CheerTypeAmount) GetCheerType() uint32 {
	if x != nil && x.CheerType != nil {
		return *x.CheerType
	}
	return 0
}

func (x *CMsgGCHAppCheersReceived_CheerTypeAmount) GetCheerAmount() uint32 {
	if x != nil && x.CheerAmount != nil {
		return *x.CheerAmount
	}
	return 0
}

type CMsgGCHAppCheersReceived_CheerTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheerTarget *uint64                                     `protobuf:"varint,1,opt,name=cheer_target,json=cheerTarget" json:"cheer_target,omitempty"`
	CheerTypes  []*CMsgGCHAppCheersReceived_CheerTypeAmount `protobuf:"bytes,2,rep,name=cheer_types,json=cheerTypes" json:"cheer_types,omitempty"`
}

func (x *CMsgGCHAppCheersReceived_CheerTarget) Reset() {
	*x = CMsgGCHAppCheersReceived_CheerTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCHAppCheersReceived_CheerTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCHAppCheersReceived_CheerTarget) ProtoMessage() {}

func (x *CMsgGCHAppCheersReceived_CheerTarget) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCHAppCheersReceived_CheerTarget.ProtoReflect.Descriptor instead.
func (*CMsgGCHAppCheersReceived_CheerTarget) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{55, 1}
}

func (x *CMsgGCHAppCheersReceived_CheerTarget) GetCheerTarget() uint64 {
	if x != nil && x.CheerTarget != nil {
		return *x.CheerTarget
	}
	return 0
}

func (x *CMsgGCHAppCheersReceived_CheerTarget) GetCheerTypes() []*CMsgGCHAppCheersReceived_CheerTypeAmount {
	if x != nil {
		return x.CheerTypes
	}
	return nil
}

type CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalCheerType *uint32  `protobuf:"varint,1,opt,name=original_cheer_type,json=originalCheerType" json:"original_cheer_type,omitempty"`
	RemappedCheerType *uint32  `protobuf:"varint,2,opt,name=remapped_cheer_type,json=remappedCheerType" json:"remapped_cheer_type,omitempty"`
	AccountIds        []uint32 `protobuf:"varint,3,rep,name=account_ids,json=accountIds" json:"account_ids,omitempty"`
}

func (x *CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps) Reset() {
	*x = CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps) ProtoMessage() {}

func (x *CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps.ProtoReflect.Descriptor instead.
func (*CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{57, 0}
}

func (x *CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps) GetOriginalCheerType() uint32 {
	if x != nil && x.OriginalCheerType != nil {
		return *x.OriginalCheerType
	}
	return 0
}

func (x *CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps) GetRemappedCheerType() uint32 {
	if x != nil && x.RemappedCheerType != nil {
		return *x.RemappedCheerType
	}
	return 0
}

func (x *CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps) GetAccountIds() []uint32 {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

type CWorkshop_GetSpecialPayments_Response_SpecialPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Gameitemid       *uint32 `protobuf:"varint,2,opt,name=gameitemid" json:"gameitemid,omitempty"`
	Date             *string `protobuf:"bytes,3,opt,name=date" json:"date,omitempty"`
	NetPaymentUsUsd  *uint64 `protobuf:"varint,4,opt,name=net_payment_us_usd,json=netPaymentUsUsd" json:"net_payment_us_usd,omitempty"`
	NetPaymentRowUsd *uint64 `protobuf:"varint,5,opt,name=net_payment_row_usd,json=netPaymentRowUsd" json:"net_payment_row_usd,omitempty"`
}

func (x *CWorkshop_GetSpecialPayments_Response_SpecialPayment) Reset() {
	*x = CWorkshop_GetSpecialPayments_Response_SpecialPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_int_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetSpecialPayments_Response_SpecialPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetSpecialPayments_Response_SpecialPayment) ProtoMessage() {}

func (x *CWorkshop_GetSpecialPayments_Response_SpecialPayment) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_int_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetSpecialPayments_Response_SpecialPayment.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetSpecialPayments_Response_SpecialPayment) Descriptor() ([]byte, []int) {
	return file_steammessages_int_proto_rawDescGZIP(), []int{61, 0}
}

func (x *CWorkshop_GetSpecialPayments_Response_SpecialPayment) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWorkshop_GetSpecialPayments_Response_SpecialPayment) GetGameitemid() uint32 {
	if x != nil && x.Gameitemid != nil {
		return *x.Gameitemid
	}
	return 0
}

func (x *CWorkshop_GetSpecialPayments_Response_SpecialPayment) GetDate() string {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return ""
}

func (x *CWorkshop_GetSpecialPayments_Response_SpecialPayment) GetNetPaymentUsUsd() uint64 {
	if x != nil && x.NetPaymentUsUsd != nil {
		return *x.NetPaymentUsUsd
	}
	return 0
}

func (x *CWorkshop_GetSpecialPayments_Response_SpecialPayment) GetNetPaymentRowUsd() uint64 {
	if x != nil && x.NetPaymentRowUsd != nil {
		return *x.NetPaymentRowUsd
	}
	return 0
}

var File_steammessages_int_proto protoreflect.FileDescriptor

var file_steammessages_int_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x6f, 0x74, 0x61, 0x1a,
	0x13, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x57, 0x65, 0x62,
	0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6b, 0x65, 0x79,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xf8, 0x03, 0x0a, 0x0f, 0x43,
	0x4d, 0x73, 0x67, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x3d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x09, 0x67, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x62,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x48, 0x74, 0x74,
	0x70, 0x73, 0x1a, 0x39, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x36, 0x0a,
	0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xfa, 0x01, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x57, 0x65,
	0x62, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x57, 0x65, 0x62, 0x41, 0x50, 0x49,
	0x4b, 0x65, 0x79, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70,
	0x49, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x74, 0x74, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x3a, 0x0a,
	0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5a, 0x0a, 0x12, 0x43, 0x4d, 0x73,
	0x67, 0x41, 0x4d, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x37, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x4d, 0x46,
	0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0xc3,
	0x01, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x64, 0x6f, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x4d, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x69, 0x64, 0x22, 0x71, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x4d,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x07,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x54, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x41, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x43, 0x47, 0x43, 0x4d,
	0x73, 0x67, 0x4d, 0x65, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x47, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x1a, 0x43, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x65, 0x6d,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d,
	0x65, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x61, 0x67, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x1a, 0x36, 0x0a, 0x08, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x61, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7f, 0x0a, 0x12,
	0x43, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x65, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x53,
	0x65, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x65,
	0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x53, 0x65, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x1a, 0x33, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2b, 0x0a,
	0x15, 0x43, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x65, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x47,
	0x43, 0x4d, 0x73, 0x67, 0x4d, 0x65, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x22, 0xd6, 0x03, 0x0a, 0x1c, 0x43, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x65, 0x6d,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63,
	0x75, 0x72, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x6d, 0x64, 0x5f, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x63, 0x6d, 0x64, 0x47, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6d, 0x64, 0x5f, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6d, 0x64, 0x53, 0x65, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6d, 0x64, 0x5f, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6d, 0x64, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x67, 0x65, 0x74, 0x48, 0x69, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x5f,
	0x6d, 0x69, 0x73, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x65,
	0x74, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x68, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x69, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x79, 0x74, 0x65, 0x73, 0x57, 0x72, 0x69, 0x74, 0x74, 0x65,
	0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x4d, 0x61, 0x78, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x75,
	0x72, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x76, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x0e, 0x43,
	0x47, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x51, 0x4c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x22, 0xc9, 0x03, 0x0a, 0x16, 0x43, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x51, 0x4c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x31, 0x0a,
	0x14, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x12, 0x40, 0x0a, 0x1c, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x64, 0x12, 0x47, 0x0a, 0x20, 0x6e, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1d, 0x6e, 0x6f,
	0x6e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x1d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x69,
	0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x4f, 0x75,
	0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x22, 0x99, 0x01, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x4d, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x65, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x88, 0x01, 0x0a,
	0x1c, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x4d, 0x41, 0x64, 0x64, 0x46, 0x72, 0x65, 0x65, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x13, 0x43, 0x47, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x65, 0x74, 0x49, 0x50, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x07, 0x52, 0x03, 0x69, 0x70, 0x73,
	0x22, 0x22, 0x0a, 0x0e, 0x43, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x49, 0x50, 0x41,
	0x53, 0x4e, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x07, 0x52,
	0x03, 0x69, 0x70, 0x73, 0x22, 0x2e, 0x0a, 0x0a, 0x43, 0x49, 0x50, 0x41, 0x53, 0x4e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x61, 0x73, 0x6e, 0x22, 0x40, 0x0a, 0x16, 0x43, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x65,
	0x74, 0x49, 0x50, 0x41, 0x53, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x49, 0x50, 0x41, 0x53, 0x4e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xe0, 0x03, 0x0a, 0x0f, 0x43, 0x4d, 0x73, 0x67, 0x41,
	0x4d, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x61, 0x0a,
	0x13, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x4d, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x11, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x63, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x63, 0x12, 0x3e, 0x0a,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x4d, 0x53, 0x65, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x1a, 0x52, 0x0a,
	0x10, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x56, 0x0a, 0x1b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x17, 0x43, 0x4d, 0x73,
	0x67, 0x41, 0x4d, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x97,
	0x01, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x7f, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x17, 0x43, 0x4d,
	0x73, 0x67, 0x41, 0x4d, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x65, 0x73, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x65, 0x73,
	0x54, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x61, 0x79, 0x73, 0x5f,
	0x74, 0x6f, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x64, 0x61, 0x79, 0x73, 0x54, 0x6f, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a,
	0x1f, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x4d, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x65, 0x73, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x73, 0x73, 0x65, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x65, 0x73, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65,
	0x64, 0x22, 0x33, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x06, 0x52, 0x08, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x69, 0x64, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x11, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x10, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65,
	0x64, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x06, 0x52, 0x14, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x73, 0x1a, 0x4a,
	0x0a, 0x0b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x15, 0x43, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x68, 0x69, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x5f, 0x6c,
	0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x69, 0x64, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69,
	0x64, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0c, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x22, 0x65, 0x0a, 0x1e, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x68, 0x69, 0x70, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x22, 0xc0, 0x01, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x1d, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x47, 0x0a, 0x21,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x6e, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x50, 0x6c, 0x61,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x06, 0x52, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x73,
	0x12, 0x33, 0x0a, 0x15, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x07, 0x52,
	0x14, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x07, 0x52, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x8f, 0x02, 0x0a,
	0x1b, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x10,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x69,
	0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x39, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x47, 0x43, 0x52, 0x03, 0x64, 0x69,
	0x72, 0x1a, 0x8a, 0x01, 0x0a, 0x05, 0x53, 0x75, 0x62, 0x47, 0x43, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x6f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x6f, 0x78, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x6e,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x63, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x63, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x22, 0x5a,
	0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x47, 0x0a, 0x28, 0x43, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x57, 0x65, 0x62, 0x41, 0x50, 0x49, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x41, 0x0a, 0x25, 0x43, 0x47, 0x43, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x73, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0x86, 0x02, 0x0a, 0x26, 0x43, 0x47, 0x43, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x68, 0x61, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x40,
	0x0a, 0x1d, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x6f, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x68, 0x61, 0x73, 0x4e, 0x6f, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x73,
	0x12, 0x33, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x63, 0x61,
	0x73, 0x68, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x69, 0x73, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x6c,
	0x6c, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x22,
	0xcf, 0x01, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x48, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x56, 0x61, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x61, 0x63,
	0x62, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x63, 0x62, 0x61, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x4e, 0x6f, 0x77, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x69, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x8c, 0x03, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x3d, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x08, 0x66, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x77, 0x65, 0x62, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x61, 0x70, 0x69, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x45, 0x41, 0x4d, 0x49, 0x44, 0x10, 0x02, 0x12,
	0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x42, 0x55, 0x46, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x45,
	0x42, 0x41, 0x50, 0x49, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e,
	0x57, 0x45, 0x42, 0x41, 0x50, 0x49, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x53, 0x54, 0x45,
	0x41, 0x4d, 0x49, 0x44, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x49, 0x44, 0x10, 0x05,
	0x22, 0xed, 0x01, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x57, 0x65, 0x62, 0x41, 0x50, 0x49, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x57,
	0x65, 0x62, 0x41, 0x50, 0x49, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x82, 0x01, 0x0a, 0x05,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a,
	0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x22, 0xc5, 0x01, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x1a, 0x55, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x44, 0x0a, 0x28, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x57, 0x65,
	0x62, 0x41, 0x50, 0x49, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x47,
	0x0a, 0x2b, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe0, 0x03, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4d, 0x73,
	0x67, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x11, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12,
	0x4b, 0x0a, 0x0d, 0x67, 0x63, 0x73, 0x71, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x47, 0x43, 0x53, 0x51, 0x4c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x67, 0x63, 0x73, 0x71, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x34, 0x0a, 0x0c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x22, 0x6e, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x53, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x53,
	0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x41, 0x43, 0x48,
	0x49, 0x45, 0x56, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x56, 0x41, 0x43, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x03, 0x22, 0x46, 0x0a, 0x0c, 0x47, 0x43, 0x53, 0x51, 0x4c, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x43, 0x53, 0x51, 0x4c, 0x5f, 0x56, 0x45, 0x52, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x1a,
	0x0a, 0x16, 0x47, 0x43, 0x53, 0x51, 0x4c, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x42, 0x4f, 0x4f, 0x4c, 0x54, 0x59, 0x50, 0x45, 0x10, 0x02, 0x22, 0x86, 0x03, 0x0a, 0x14, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x48, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x48, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x48, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0b,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x36, 0x0a, 0x0a, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xb5, 0x02, 0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63,
	0x69, 0x6f, 0x75, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x6f, 0x0a, 0x12,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x66, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x11, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x1a, 0x6c, 0x0a,
	0x15, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x06, 0x52, 0x0d, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x73, 0x22, 0x6f, 0x0a, 0x1c, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x48, 0x56, 0x61, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x4d, 0x0a, 0x19,
	0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6c, 0x61, 0x6e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x6e, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x22, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6c, 0x61, 0x6e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xda, 0x02,
	0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x48, 0x41, 0x70, 0x70, 0x43, 0x68, 0x65, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x12, 0x4f, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x48, 0x41, 0x70, 0x70, 0x43, 0x68, 0x65, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x43, 0x68, 0x65, 0x65, 0x72, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x1a, 0x53, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x65, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x65, 0x72,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x81, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x65, 0x72,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x65, 0x72, 0x5f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x68,
	0x65, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x4f, 0x0a, 0x0b, 0x63, 0x68, 0x65,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x48, 0x41, 0x70, 0x70,
	0x43, 0x68, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x43,
	0x68, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a,
	0x63, 0x68, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x1f, 0x43, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x48, 0x41, 0x70, 0x70, 0x43, 0x68, 0x65, 0x65, 0x72, 0x73, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x65, 0x72,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xfd, 0x02, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x48, 0x41, 0x70, 0x70, 0x43, 0x68, 0x65, 0x65, 0x72, 0x73, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x1b, 0x63, 0x68, 0x65, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x17, 0x63, 0x68, 0x65, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x5c, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x48, 0x41, 0x70, 0x70, 0x43, 0x68, 0x65, 0x65, 0x72, 0x73, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x70,
	0x73, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x70, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x8e, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x65, 0x72, 0x52,
	0x65, 0x6d, 0x61, 0x70, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x63, 0x68, 0x65, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x65, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65,
	0x64, 0x5f, 0x63, 0x68, 0x65, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x43, 0x68, 0x65, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x23, 0x43, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x41, 0x64, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6d,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x74,
	0x65, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x55, 0x73, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x75, 0x73,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x6f, 0x77, 0x55, 0x73, 0x64, 0x22, 0x26, 0x0a, 0x24, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x41, 0x64, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70,
	0x0a, 0x24, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x47, 0x65, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x22, 0xc7, 0x02, 0x0a, 0x25, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0xb6, 0x01, 0x0a, 0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2b,
	0x0a, 0x12, 0x6e, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73,
	0x5f, 0x75, 0x73, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6e, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x55, 0x73, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x6e,
	0x65, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x75,
	0x73, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6e, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x77, 0x55, 0x73, 0x64, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x74, 0x61, 0x62, 0x75, 0x66,
	0x66, 0x2f, 0x6d, 0x61, 0x6e, 0x74, 0x61, 0x2f, 0x64, 0x6f, 0x74, 0x61, 0x3b, 0x64, 0x6f, 0x74,
	0x61,
}

var (
	file_steammessages_int_proto_rawDescOnce sync.Once
	file_steammessages_int_proto_rawDescData = file_steammessages_int_proto_rawDesc
)

func file_steammessages_int_proto_rawDescGZIP() []byte {
	file_steammessages_int_proto_rawDescOnce.Do(func() {
		file_steammessages_int_proto_rawDescData = protoimpl.X.CompressGZIP(file_steammessages_int_proto_rawDescData)
	})
	return file_steammessages_int_proto_rawDescData
}

var file_steammessages_int_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_steammessages_int_proto_msgTypes = make([]protoimpl.MessageInfo, 80)
var file_steammessages_int_proto_goTypes = []any{
	(CMsgGCRoutingInfo_RoutingMethod)(0),                               // 0: dota.CMsgGCRoutingInfo.RoutingMethod
	(CMsgGCMsgSetOptions_Option)(0),                                    // 1: dota.CMsgGCMsgSetOptions.Option
	(CMsgGCMsgSetOptions_GCSQLVersion)(0),                              // 2: dota.CMsgGCMsgSetOptions.GCSQLVersion
	(*CMsgWebAPIKey)(nil),                                              // 3: dota.CMsgWebAPIKey
	(*CMsgHttpRequest)(nil),                                            // 4: dota.CMsgHttpRequest
	(*CMsgWebAPIRequest)(nil),                                          // 5: dota.CMsgWebAPIRequest
	(*CMsgHttpResponse)(nil),                                           // 6: dota.CMsgHttpResponse
	(*CMsgAMFindAccounts)(nil),                                         // 7: dota.CMsgAMFindAccounts
	(*CMsgAMFindAccountsResponse)(nil),                                 // 8: dota.CMsgAMFindAccountsResponse
	(*CMsgNotifyWatchdog)(nil),                                         // 9: dota.CMsgNotifyWatchdog
	(*CMsgAMGetLicenses)(nil),                                          // 10: dota.CMsgAMGetLicenses
	(*CMsgPackageLicense)(nil),                                         // 11: dota.CMsgPackageLicense
	(*CMsgAMGetLicensesResponse)(nil),                                  // 12: dota.CMsgAMGetLicensesResponse
	(*CMsgGCGetCommandList)(nil),                                       // 13: dota.CMsgGCGetCommandList
	(*CMsgGCGetCommandListResponse)(nil),                               // 14: dota.CMsgGCGetCommandListResponse
	(*CGCMsgMemCachedGet)(nil),                                         // 15: dota.CGCMsgMemCachedGet
	(*CGCMsgMemCachedGetResponse)(nil),                                 // 16: dota.CGCMsgMemCachedGetResponse
	(*CGCMsgMemCachedSet)(nil),                                         // 17: dota.CGCMsgMemCachedSet
	(*CGCMsgMemCachedDelete)(nil),                                      // 18: dota.CGCMsgMemCachedDelete
	(*CGCMsgMemCachedStats)(nil),                                       // 19: dota.CGCMsgMemCachedStats
	(*CGCMsgMemCachedStatsResponse)(nil),                               // 20: dota.CGCMsgMemCachedStatsResponse
	(*CGCMsgSQLStats)(nil),                                             // 21: dota.CGCMsgSQLStats
	(*CGCMsgSQLStatsResponse)(nil),                                     // 22: dota.CGCMsgSQLStatsResponse
	(*CMsgAMAddFreeLicense)(nil),                                       // 23: dota.CMsgAMAddFreeLicense
	(*CMsgAMAddFreeLicenseResponse)(nil),                               // 24: dota.CMsgAMAddFreeLicenseResponse
	(*CGCMsgGetIPLocation)(nil),                                        // 25: dota.CGCMsgGetIPLocation
	(*CGCMsgGetIPASN)(nil),                                             // 26: dota.CGCMsgGetIPASN
	(*CIPASNInfo)(nil),                                                 // 27: dota.CIPASNInfo
	(*CGCMsgGetIPASNResponse)(nil),                                     // 28: dota.CGCMsgGetIPASNResponse
	(*CMsgAMSendEmail)(nil),                                            // 29: dota.CMsgAMSendEmail
	(*CMsgAMSendEmailResponse)(nil),                                    // 30: dota.CMsgAMSendEmailResponse
	(*CMsgGCGetEmailTemplate)(nil),                                     // 31: dota.CMsgGCGetEmailTemplate
	(*CMsgGCGetEmailTemplateResponse)(nil),                             // 32: dota.CMsgGCGetEmailTemplateResponse
	(*CMsgAMGrantGuestPasses2)(nil),                                    // 33: dota.CMsgAMGrantGuestPasses2
	(*CMsgAMGrantGuestPasses2Response)(nil),                            // 34: dota.CMsgAMGrantGuestPasses2Response
	(*CMsgGCGetPersonaNames)(nil),                                      // 35: dota.CMsgGCGetPersonaNames
	(*CMsgGCGetPersonaNames_Response)(nil),                             // 36: dota.CMsgGCGetPersonaNames_Response
	(*CMsgGCCheckFriendship)(nil),                                      // 37: dota.CMsgGCCheckFriendship
	(*CMsgGCCheckFriendship_Response)(nil),                             // 38: dota.CMsgGCCheckFriendship_Response
	(*CMsgGCGetAppFriendsList)(nil),                                    // 39: dota.CMsgGCGetAppFriendsList
	(*CMsgGCGetAppFriendsList_Response)(nil),                           // 40: dota.CMsgGCGetAppFriendsList_Response
	(*CMsgGCMsgMasterSetDirectory)(nil),                                // 41: dota.CMsgGCMsgMasterSetDirectory
	(*CMsgGCMsgMasterSetDirectory_Response)(nil),                       // 42: dota.CMsgGCMsgMasterSetDirectory_Response
	(*CMsgGCMsgWebAPIJobRequestForwardResponse)(nil),                   // 43: dota.CMsgGCMsgWebAPIJobRequestForwardResponse
	(*CGCSystemMsg_GetPurchaseTrust_Request)(nil),                      // 44: dota.CGCSystemMsg_GetPurchaseTrust_Request
	(*CGCSystemMsg_GetPurchaseTrust_Response)(nil),                     // 45: dota.CGCSystemMsg_GetPurchaseTrust_Response
	(*CMsgGCHAccountVacStatusChange)(nil),                              // 46: dota.CMsgGCHAccountVacStatusChange
	(*CMsgGCRoutingInfo)(nil),                                          // 47: dota.CMsgGCRoutingInfo
	(*CMsgGCMsgMasterSetWebAPIRouting)(nil),                            // 48: dota.CMsgGCMsgMasterSetWebAPIRouting
	(*CMsgGCMsgMasterSetClientMsgRouting)(nil),                         // 49: dota.CMsgGCMsgMasterSetClientMsgRouting
	(*CMsgGCMsgMasterSetWebAPIRouting_Response)(nil),                   // 50: dota.CMsgGCMsgMasterSetWebAPIRouting_Response
	(*CMsgGCMsgMasterSetClientMsgRouting_Response)(nil),                // 51: dota.CMsgGCMsgMasterSetClientMsgRouting_Response
	(*CMsgGCMsgSetOptions)(nil),                                        // 52: dota.CMsgGCMsgSetOptions
	(*CMsgGCHUpdateSession)(nil),                                       // 53: dota.CMsgGCHUpdateSession
	(*CMsgNotificationOfSuspiciousActivity)(nil),                       // 54: dota.CMsgNotificationOfSuspiciousActivity
	(*CMsgGCHVacVerificationChange)(nil),                               // 55: dota.CMsgGCHVacVerificationChange
	(*CMsgGCCheckClanMembership)(nil),                                  // 56: dota.CMsgGCCheckClanMembership
	(*CMsgGCCheckClanMembership_Response)(nil),                         // 57: dota.CMsgGCCheckClanMembership_Response
	(*CMsgGCHAppCheersReceived)(nil),                                   // 58: dota.CMsgGCHAppCheersReceived
	(*CMsgGCHAppCheersGetAllowedTypes)(nil),                            // 59: dota.CMsgGCHAppCheersGetAllowedTypes
	(*CMsgGCHAppCheersGetAllowedTypesResponse)(nil),                    // 60: dota.CMsgGCHAppCheersGetAllowedTypesResponse
	(*CWorkshop_AddSpecialPayment_Request)(nil),                        // 61: dota.CWorkshop_AddSpecialPayment_Request
	(*CWorkshop_AddSpecialPayment_Response)(nil),                       // 62: dota.CWorkshop_AddSpecialPayment_Response
	(*CWorkshop_GetSpecialPayments_Request)(nil),                       // 63: dota.CWorkshop_GetSpecialPayments_Request
	(*CWorkshop_GetSpecialPayments_Response)(nil),                      // 64: dota.CWorkshop_GetSpecialPayments_Response
	(*CMsgHttpRequest_RequestHeader)(nil),                              // 65: dota.CMsgHttpRequest.RequestHeader
	(*CMsgHttpRequest_QueryParam)(nil),                                 // 66: dota.CMsgHttpRequest.QueryParam
	(*CMsgHttpResponse_ResponseHeader)(nil),                            // 67: dota.CMsgHttpResponse.ResponseHeader
	(*CGCMsgMemCachedGetResponse_ValueTag)(nil),                        // 68: dota.CGCMsgMemCachedGetResponse.ValueTag
	(*CGCMsgMemCachedSet_KeyPair)(nil),                                 // 69: dota.CGCMsgMemCachedSet.KeyPair
	(*CMsgAMSendEmail_ReplacementToken)(nil),                           // 70: dota.CMsgAMSendEmail.ReplacementToken
	(*CMsgAMSendEmail_PersonaNameReplacementToken)(nil),                // 71: dota.CMsgAMSendEmail.PersonaNameReplacementToken
	(*CMsgGCGetPersonaNames_Response_PersonaName)(nil),                 // 72: dota.CMsgGCGetPersonaNames_Response.PersonaName
	(*CMsgGCMsgMasterSetDirectory_SubGC)(nil),                          // 73: dota.CMsgGCMsgMasterSetDirectory.SubGC
	(*CMsgGCMsgMasterSetWebAPIRouting_Entry)(nil),                      // 74: dota.CMsgGCMsgMasterSetWebAPIRouting.Entry
	(*CMsgGCMsgMasterSetClientMsgRouting_Entry)(nil),                   // 75: dota.CMsgGCMsgMasterSetClientMsgRouting.Entry
	(*CMsgGCMsgSetOptions_MessageRange)(nil),                           // 76: dota.CMsgGCMsgSetOptions.MessageRange
	(*CMsgGCHUpdateSession_ExtraField)(nil),                            // 77: dota.CMsgGCHUpdateSession.ExtraField
	(*CMsgNotificationOfSuspiciousActivity_MultipleGameInstances)(nil), // 78: dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
	(*CMsgGCHAppCheersReceived_CheerTypeAmount)(nil),                   // 79: dota.CMsgGCHAppCheersReceived.CheerTypeAmount
	(*CMsgGCHAppCheersReceived_CheerTarget)(nil),                       // 80: dota.CMsgGCHAppCheersReceived.CheerTarget
	(*CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps)(nil),        // 81: dota.CMsgGCHAppCheersGetAllowedTypesResponse.CheerRemaps
	(*CWorkshop_GetSpecialPayments_Response_SpecialPayment)(nil),       // 82: dota.CWorkshop_GetSpecialPayments_Response.SpecialPayment
}
var file_steammessages_int_proto_depIdxs = []int32{
	65, // 0: dota.CMsgHttpRequest.headers:type_name -> dota.CMsgHttpRequest.RequestHeader
	66, // 1: dota.CMsgHttpRequest.get_params:type_name -> dota.CMsgHttpRequest.QueryParam
	66, // 2: dota.CMsgHttpRequest.post_params:type_name -> dota.CMsgHttpRequest.QueryParam
	3,  // 3: dota.CMsgWebAPIRequest.api_key:type_name -> dota.CMsgWebAPIKey
	4,  // 4: dota.CMsgWebAPIRequest.request:type_name -> dota.CMsgHttpRequest
	67, // 5: dota.CMsgHttpResponse.headers:type_name -> dota.CMsgHttpResponse.ResponseHeader
	11, // 6: dota.CMsgAMGetLicensesResponse.license:type_name -> dota.CMsgPackageLicense
	68, // 7: dota.CGCMsgMemCachedGetResponse.values:type_name -> dota.CGCMsgMemCachedGetResponse.ValueTag
	69, // 8: dota.CGCMsgMemCachedSet.keys:type_name -> dota.CGCMsgMemCachedSet.KeyPair
	27, // 9: dota.CGCMsgGetIPASNResponse.infos:type_name -> dota.CIPASNInfo
	71, // 10: dota.CMsgAMSendEmail.persona_name_tokens:type_name -> dota.CMsgAMSendEmail.PersonaNameReplacementToken
	70, // 11: dota.CMsgAMSendEmail.tokens:type_name -> dota.CMsgAMSendEmail.ReplacementToken
	72, // 12: dota.CMsgGCGetPersonaNames_Response.succeeded_lookups:type_name -> dota.CMsgGCGetPersonaNames_Response.PersonaName
	73, // 13: dota.CMsgGCMsgMasterSetDirectory.dir:type_name -> dota.CMsgGCMsgMasterSetDirectory.SubGC
	0,  // 14: dota.CMsgGCRoutingInfo.method:type_name -> dota.CMsgGCRoutingInfo.RoutingMethod
	0,  // 15: dota.CMsgGCRoutingInfo.fallback:type_name -> dota.CMsgGCRoutingInfo.RoutingMethod
	74, // 16: dota.CMsgGCMsgMasterSetWebAPIRouting.entries:type_name -> dota.CMsgGCMsgMasterSetWebAPIRouting.Entry
	75, // 17: dota.CMsgGCMsgMasterSetClientMsgRouting.entries:type_name -> dota.CMsgGCMsgMasterSetClientMsgRouting.Entry
	1,  // 18: dota.CMsgGCMsgSetOptions.options:type_name -> dota.CMsgGCMsgSetOptions.Option
	76, // 19: dota.CMsgGCMsgSetOptions.client_msg_ranges:type_name -> dota.CMsgGCMsgSetOptions.MessageRange
	2,  // 20: dota.CMsgGCMsgSetOptions.gcsql_version:type_name -> dota.CMsgGCMsgSetOptions.GCSQLVersion
	77, // 21: dota.CMsgGCHUpdateSession.extra_fields:type_name -> dota.CMsgGCHUpdateSession.ExtraField
	78, // 22: dota.CMsgNotificationOfSuspiciousActivity.multiple_instances:type_name -> dota.CMsgNotificationOfSuspiciousActivity.MultipleGameInstances
	80, // 23: dota.CMsgGCHAppCheersReceived.cheer_targets:type_name -> dota.CMsgGCHAppCheersReceived.CheerTarget
	81, // 24: dota.CMsgGCHAppCheersGetAllowedTypesResponse.cheer_remaps:type_name -> dota.CMsgGCHAppCheersGetAllowedTypesResponse.CheerRemaps
	82, // 25: dota.CWorkshop_GetSpecialPayments_Response.special_payments:type_name -> dota.CWorkshop_GetSpecialPayments_Response.SpecialPayment
	47, // 26: dota.CMsgGCMsgMasterSetWebAPIRouting.Entry.routing:type_name -> dota.CMsgGCRoutingInfo
	47, // 27: dota.CMsgGCMsgMasterSetClientMsgRouting.Entry.routing:type_name -> dota.CMsgGCRoutingInfo
	79, // 28: dota.CMsgGCHAppCheersReceived.CheerTarget.cheer_types:type_name -> dota.CMsgGCHAppCheersReceived.CheerTypeAmount
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_steammessages_int_proto_init() }
func file_steammessages_int_proto_init() {
	if File_steammessages_int_proto != nil {
		return
	}
	file_steammessages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_steammessages_int_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgWebAPIKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgHttpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgWebAPIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgHttpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMFindAccounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMFindAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgNotifyWatchdog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMGetLicenses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgPackageLicense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMGetLicensesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCGetCommandList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCGetCommandListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgMemCachedGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgMemCachedGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgMemCachedSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgMemCachedDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgMemCachedStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgMemCachedStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgSQLStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgSQLStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMAddFreeLicense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMAddFreeLicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgGetIPLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgGetIPASN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CIPASNInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgGetIPASNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMSendEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMSendEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCGetEmailTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCGetEmailTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMGrantGuestPasses2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMGrantGuestPasses2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCGetPersonaNames); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCGetPersonaNames_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCCheckFriendship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCCheckFriendship_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCGetAppFriendsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCGetAppFriendsList_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCMsgMasterSetDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCMsgMasterSetDirectory_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCMsgWebAPIJobRequestForwardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*CGCSystemMsg_GetPurchaseTrust_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*CGCSystemMsg_GetPurchaseTrust_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCHAccountVacStatusChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCRoutingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCMsgMasterSetWebAPIRouting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCMsgMasterSetClientMsgRouting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCMsgMasterSetWebAPIRouting_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCMsgMasterSetClientMsgRouting_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCMsgSetOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCHUpdateSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgNotificationOfSuspiciousActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCHVacVerificationChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCCheckClanMembership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCCheckClanMembership_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCHAppCheersReceived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCHAppCheersGetAllowedTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCHAppCheersGetAllowedTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*CWorkshop_AddSpecialPayment_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*CWorkshop_AddSpecialPayment_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*CWorkshop_GetSpecialPayments_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*CWorkshop_GetSpecialPayments_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgHttpRequest_RequestHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgHttpRequest_QueryParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgHttpResponse_ResponseHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgMemCachedGetResponse_ValueTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*CGCMsgMemCachedSet_KeyPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMSendEmail_ReplacementToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMSendEmail_PersonaNameReplacementToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCGetPersonaNames_Response_PersonaName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCMsgMasterSetDirectory_SubGC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCMsgMasterSetWebAPIRouting_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCMsgMasterSetClientMsgRouting_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCMsgSetOptions_MessageRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCHUpdateSession_ExtraField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgNotificationOfSuspiciousActivity_MultipleGameInstances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCHAppCheersReceived_CheerTypeAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCHAppCheersReceived_CheerTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCHAppCheersGetAllowedTypesResponse_CheerRemaps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_int_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*CWorkshop_GetSpecialPayments_Response_SpecialPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_steammessages_int_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   80,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steammessages_int_proto_goTypes,
		DependencyIndexes: file_steammessages_int_proto_depIdxs,
		EnumInfos:         file_steammessages_int_proto_enumTypes,
		MessageInfos:      file_steammessages_int_proto_msgTypes,
	}.Build()
	File_steammessages_int_proto = out.File
	file_steammessages_int_proto_rawDesc = nil
	file_steammessages_int_proto_goTypes = nil
	file_steammessages_int_proto_depIdxs = nil
}
