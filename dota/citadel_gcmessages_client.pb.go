// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: citadel_gcmessages_client.proto

package dota

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EGCCitadelClientMessages int32

const (
	EGCCitadelClientMessages_k_EMsgClientToGCStartMatchmaking                  EGCCitadelClientMessages = 9010
	EGCCitadelClientMessages_k_EMsgClientToGCStartMatchmakingResponse          EGCCitadelClientMessages = 9011
	EGCCitadelClientMessages_k_EMsgClientToGCStopMatchmaking                   EGCCitadelClientMessages = 9012
	EGCCitadelClientMessages_k_EMsgClientToGCStopMatchmakingResponse           EGCCitadelClientMessages = 9013
	EGCCitadelClientMessages_k_EMsgGCToClientMatchmakingStopped                EGCCitadelClientMessages = 9014
	EGCCitadelClientMessages_k_EMsgClientToGCLeaveLobby                        EGCCitadelClientMessages = 9015
	EGCCitadelClientMessages_k_EMsgClientToGCLeaveLobbyResponse                EGCCitadelClientMessages = 9016
	EGCCitadelClientMessages_k_EMsgClientToGCIsInMatchmaking                   EGCCitadelClientMessages = 9017
	EGCCitadelClientMessages_k_EMsgClientToGCIsInMatchmakingResponse           EGCCitadelClientMessages = 9018
	EGCCitadelClientMessages_k_EMsgGCToClientDevPlaytestStatus                 EGCCitadelClientMessages = 9019
	EGCCitadelClientMessages_k_EMsgClientToGCDevSetMMBias                      EGCCitadelClientMessages = 9023
	EGCCitadelClientMessages_k_EMsgClientToGCGetProfileCard                    EGCCitadelClientMessages = 9024
	EGCCitadelClientMessages_k_EMsgClientToGCGetProfileCardResponse            EGCCitadelClientMessages = 9025
	EGCCitadelClientMessages_k_EMsgClientToGCUpdateRoster                      EGCCitadelClientMessages = 9026
	EGCCitadelClientMessages_k_EMsgClientToGCUpdateRosterResponse              EGCCitadelClientMessages = 9027
	EGCCitadelClientMessages_k_EMsgGCToClientProfileCardUpdated                EGCCitadelClientMessages = 9028
	EGCCitadelClientMessages_k_EMsgGCToClientDevAnnouncements                  EGCCitadelClientMessages = 9029
	EGCCitadelClientMessages_k_EMsgClientToGCModifyDevAnnouncements            EGCCitadelClientMessages = 9030
	EGCCitadelClientMessages_k_EMsgClientToGCModifyDevAnnouncementsResponse    EGCCitadelClientMessages = 9031
	EGCCitadelClientMessages_k_EMsgGCToClientSDRTicket                         EGCCitadelClientMessages = 9100
	EGCCitadelClientMessages_k_EMsgClientToGCReplacementSDRTicket              EGCCitadelClientMessages = 9101
	EGCCitadelClientMessages_k_EMsgClientToGCReplacementSDRTicketResponse      EGCCitadelClientMessages = 9102
	EGCCitadelClientMessages_k_EMsgClientToGCSetServerConVar                   EGCCitadelClientMessages = 9107
	EGCCitadelClientMessages_k_EMsgClientToGCSetServerConVarResponse           EGCCitadelClientMessages = 9108
	EGCCitadelClientMessages_k_EMsgClientToGCSpectateLobby                     EGCCitadelClientMessages = 9109
	EGCCitadelClientMessages_k_EMsgClientToGCSpectateLobbyResponse             EGCCitadelClientMessages = 9110
	EGCCitadelClientMessages_k_EMsgClientToGCPostMatchSurveyResponse           EGCCitadelClientMessages = 9111
	EGCCitadelClientMessages_k_EMsgClientToGCGetMatchHistory                   EGCCitadelClientMessages = 9112
	EGCCitadelClientMessages_k_EMsgClientToGCGetMatchHistoryResponse           EGCCitadelClientMessages = 9113
	EGCCitadelClientMessages_k_EMsgClientToGCSpectateUser                      EGCCitadelClientMessages = 9116
	EGCCitadelClientMessages_k_EMsgClientToGCSpectateUserResponse              EGCCitadelClientMessages = 9117
	EGCCitadelClientMessages_k_EMsgClientToGCPartyCreate                       EGCCitadelClientMessages = 9123
	EGCCitadelClientMessages_k_EMsgClientToGCPartyCreateResponse               EGCCitadelClientMessages = 9124
	EGCCitadelClientMessages_k_EMsgClientToGCPartyLeave                        EGCCitadelClientMessages = 9125
	EGCCitadelClientMessages_k_EMsgClientToGCPartyLeaveResponse                EGCCitadelClientMessages = 9126
	EGCCitadelClientMessages_k_EMsgClientToGCPartyJoin                         EGCCitadelClientMessages = 9127
	EGCCitadelClientMessages_k_EMsgClientToGCPartyJoinResponse                 EGCCitadelClientMessages = 9128
	EGCCitadelClientMessages_k_EMsgClientToGCPartyAction                       EGCCitadelClientMessages = 9129
	EGCCitadelClientMessages_k_EMsgClientToGCPartyActionResponse               EGCCitadelClientMessages = 9130
	EGCCitadelClientMessages_k_EMsgClientToGCPartyStartMatch                   EGCCitadelClientMessages = 9131
	EGCCitadelClientMessages_k_EMsgClientToGCPartyStartMatchResponse           EGCCitadelClientMessages = 9132
	EGCCitadelClientMessages_k_EMsgClientToGCPartyInviteUser                   EGCCitadelClientMessages = 9133
	EGCCitadelClientMessages_k_EMsgClientToGCPartyInviteUserResponse           EGCCitadelClientMessages = 9134
	EGCCitadelClientMessages_k_EMsgGCToClientPartyEvent                        EGCCitadelClientMessages = 9135
	EGCCitadelClientMessages_k_EMsgGCToClientCanRejoinParty                    EGCCitadelClientMessages = 9137
	EGCCitadelClientMessages_k_EMsgClientToGCPartyJoinViaCode                  EGCCitadelClientMessages = 9138
	EGCCitadelClientMessages_k_EMsgClientToGCPartyJoinViaCodeResponse          EGCCitadelClientMessages = 9139
	EGCCitadelClientMessages_k_EMsgClientToGCPartyUpdateRoster                 EGCCitadelClientMessages = 9140
	EGCCitadelClientMessages_k_EMsgClientToGCPartyUpdateRosterResponse         EGCCitadelClientMessages = 9141
	EGCCitadelClientMessages_k_EMsgClientToGCPartySetReadyState                EGCCitadelClientMessages = 9142
	EGCCitadelClientMessages_k_EMsgClientToGCPartySetReadyStateResponse        EGCCitadelClientMessages = 9143
	EGCCitadelClientMessages_k_EMsgClientToGCGetAccountStats                   EGCCitadelClientMessages = 9164
	EGCCitadelClientMessages_k_EMsgClientToGCGetAccountStatsResponse           EGCCitadelClientMessages = 9165
	EGCCitadelClientMessages_k_EMsgGCToClientAccountStatsUpdated               EGCCitadelClientMessages = 9166
	EGCCitadelClientMessages_k_EMsgClientToGCGetMatchMetaData                  EGCCitadelClientMessages = 9167
	EGCCitadelClientMessages_k_EMsgClientToGCGetMatchMetaDataResponse          EGCCitadelClientMessages = 9168
	EGCCitadelClientMessages_k_EMsgClientToGCDevAction                         EGCCitadelClientMessages = 9172
	EGCCitadelClientMessages_k_EMsgClientToGCDevActionResponse                 EGCCitadelClientMessages = 9173
	EGCCitadelClientMessages_k_EMsgClientToGCRecordClientEvents                EGCCitadelClientMessages = 9174
	EGCCitadelClientMessages_k_EMsgClientToGCRecordClientEventsResponse        EGCCitadelClientMessages = 9175
	EGCCitadelClientMessages_k_EMsgClientToGCSetNewPlayerProgress              EGCCitadelClientMessages = 9176
	EGCCitadelClientMessages_k_EMsgClientToGCSetNewPlayerProgressResponse      EGCCitadelClientMessages = 9177
	EGCCitadelClientMessages_k_EMsgClientToGCUpdateAccountSync                 EGCCitadelClientMessages = 9178
	EGCCitadelClientMessages_k_EMsgClientToGCUpdateAccountSyncResponse         EGCCitadelClientMessages = 9179
	EGCCitadelClientMessages_k_EMsgClientToGCGetHeroChoice                     EGCCitadelClientMessages = 9180
	EGCCitadelClientMessages_k_EMsgClientToGCGetHeroChoiceResponse             EGCCitadelClientMessages = 9181
	EGCCitadelClientMessages_k_EMsgClientToGCUnlockHero                        EGCCitadelClientMessages = 9182
	EGCCitadelClientMessages_k_EMsgClientToGCUnlockHeroResponse                EGCCitadelClientMessages = 9183
	EGCCitadelClientMessages_k_EMsgClientToGCBookUnlock                        EGCCitadelClientMessages = 9184
	EGCCitadelClientMessages_k_EMsgClientToGCBookUnlockResponse                EGCCitadelClientMessages = 9185
	EGCCitadelClientMessages_k_EMsgClientToGCGetBook                           EGCCitadelClientMessages = 9186
	EGCCitadelClientMessages_k_EMsgClientToGCGetBookResponse                   EGCCitadelClientMessages = 9187
	EGCCitadelClientMessages_k_EMsgGCToClientBookUpdated                       EGCCitadelClientMessages = 9188
	EGCCitadelClientMessages_k_EMsgClientToGCSubmitPlaytestUser                EGCCitadelClientMessages = 9189
	EGCCitadelClientMessages_k_EMsgClientToGCSubmitPlaytestUserResponse        EGCCitadelClientMessages = 9190
	EGCCitadelClientMessages_k_EMsgClientToGCUpdateHeroBuild                   EGCCitadelClientMessages = 9193
	EGCCitadelClientMessages_k_EMsgClientToGCUpdateHeroBuildResponse           EGCCitadelClientMessages = 9194
	EGCCitadelClientMessages_k_EMsgClientToGCFindHeroBuilds                    EGCCitadelClientMessages = 9195
	EGCCitadelClientMessages_k_EMsgClientToGCFindHeroBuildsResponse            EGCCitadelClientMessages = 9196
	EGCCitadelClientMessages_k_EMsgClientToGCReportPlayerFromMatch             EGCCitadelClientMessages = 9197
	EGCCitadelClientMessages_k_EMsgClientToGCReportPlayerFromMatchResponse     EGCCitadelClientMessages = 9198
	EGCCitadelClientMessages_k_EMsgClientToGCGetAccountMatchReports            EGCCitadelClientMessages = 9199
	EGCCitadelClientMessages_k_EMsgClientToGCGetAccountMatchReportsResponse    EGCCitadelClientMessages = 9200
	EGCCitadelClientMessages_k_EMsgClientToGCDeleteHeroBuild                   EGCCitadelClientMessages = 9201
	EGCCitadelClientMessages_k_EMsgClientToGCDeleteHeroBuildResponse           EGCCitadelClientMessages = 9202
	EGCCitadelClientMessages_k_EMsgClientToGCGetActiveMatches                  EGCCitadelClientMessages = 9203
	EGCCitadelClientMessages_k_EMsgClientToGCGetActiveMatchesResponse          EGCCitadelClientMessages = 9204
	EGCCitadelClientMessages_k_EMsgClientToGCGetDiscordLink                    EGCCitadelClientMessages = 9205
	EGCCitadelClientMessages_k_EMsgClientToGCGetDiscordLinkResponse            EGCCitadelClientMessages = 9206
	EGCCitadelClientMessages_k_EMsgClientToGCPartySetMode                      EGCCitadelClientMessages = 9207
	EGCCitadelClientMessages_k_EMsgClientToGCPartySetModeResponse              EGCCitadelClientMessages = 9208
	EGCCitadelClientMessages_k_EMsgClientToGCGrantForumAccess                  EGCCitadelClientMessages = 9209
	EGCCitadelClientMessages_k_EMsgClientToGCGrantForumAccessResponse          EGCCitadelClientMessages = 9210
	EGCCitadelClientMessages_k_EMsgClientToGCModeratorRequest                  EGCCitadelClientMessages = 9211
	EGCCitadelClientMessages_k_EMsgClientToGCModeratorRequestResponse          EGCCitadelClientMessages = 9212
	EGCCitadelClientMessages_k_EMsgClientToGCGetFriendGameStatus               EGCCitadelClientMessages = 9213
	EGCCitadelClientMessages_k_EMsgClientToGCGetFriendGameStatusResponse       EGCCitadelClientMessages = 9214
	EGCCitadelClientMessages_k_EMsgClientToGCUpdateHeroBuildPreference         EGCCitadelClientMessages = 9215
	EGCCitadelClientMessages_k_EMsgClientToGCUpdateHeroBuildPreferenceResponse EGCCitadelClientMessages = 9216
	EGCCitadelClientMessages_k_EMsgClientToGCGetOldHeroBuildData               EGCCitadelClientMessages = 9217
	EGCCitadelClientMessages_k_EMsgClientToGCGetOldHeroBuildDataResponse       EGCCitadelClientMessages = 9218
	EGCCitadelClientMessages_k_EMsgClientToGCUpdateSpectatorStatus             EGCCitadelClientMessages = 9219
)

// Enum value maps for EGCCitadelClientMessages.
var (
	EGCCitadelClientMessages_name = map[int32]string{
		9010: "k_EMsgClientToGCStartMatchmaking",
		9011: "k_EMsgClientToGCStartMatchmakingResponse",
		9012: "k_EMsgClientToGCStopMatchmaking",
		9013: "k_EMsgClientToGCStopMatchmakingResponse",
		9014: "k_EMsgGCToClientMatchmakingStopped",
		9015: "k_EMsgClientToGCLeaveLobby",
		9016: "k_EMsgClientToGCLeaveLobbyResponse",
		9017: "k_EMsgClientToGCIsInMatchmaking",
		9018: "k_EMsgClientToGCIsInMatchmakingResponse",
		9019: "k_EMsgGCToClientDevPlaytestStatus",
		9023: "k_EMsgClientToGCDevSetMMBias",
		9024: "k_EMsgClientToGCGetProfileCard",
		9025: "k_EMsgClientToGCGetProfileCardResponse",
		9026: "k_EMsgClientToGCUpdateRoster",
		9027: "k_EMsgClientToGCUpdateRosterResponse",
		9028: "k_EMsgGCToClientProfileCardUpdated",
		9029: "k_EMsgGCToClientDevAnnouncements",
		9030: "k_EMsgClientToGCModifyDevAnnouncements",
		9031: "k_EMsgClientToGCModifyDevAnnouncementsResponse",
		9100: "k_EMsgGCToClientSDRTicket",
		9101: "k_EMsgClientToGCReplacementSDRTicket",
		9102: "k_EMsgClientToGCReplacementSDRTicketResponse",
		9107: "k_EMsgClientToGCSetServerConVar",
		9108: "k_EMsgClientToGCSetServerConVarResponse",
		9109: "k_EMsgClientToGCSpectateLobby",
		9110: "k_EMsgClientToGCSpectateLobbyResponse",
		9111: "k_EMsgClientToGCPostMatchSurveyResponse",
		9112: "k_EMsgClientToGCGetMatchHistory",
		9113: "k_EMsgClientToGCGetMatchHistoryResponse",
		9116: "k_EMsgClientToGCSpectateUser",
		9117: "k_EMsgClientToGCSpectateUserResponse",
		9123: "k_EMsgClientToGCPartyCreate",
		9124: "k_EMsgClientToGCPartyCreateResponse",
		9125: "k_EMsgClientToGCPartyLeave",
		9126: "k_EMsgClientToGCPartyLeaveResponse",
		9127: "k_EMsgClientToGCPartyJoin",
		9128: "k_EMsgClientToGCPartyJoinResponse",
		9129: "k_EMsgClientToGCPartyAction",
		9130: "k_EMsgClientToGCPartyActionResponse",
		9131: "k_EMsgClientToGCPartyStartMatch",
		9132: "k_EMsgClientToGCPartyStartMatchResponse",
		9133: "k_EMsgClientToGCPartyInviteUser",
		9134: "k_EMsgClientToGCPartyInviteUserResponse",
		9135: "k_EMsgGCToClientPartyEvent",
		9137: "k_EMsgGCToClientCanRejoinParty",
		9138: "k_EMsgClientToGCPartyJoinViaCode",
		9139: "k_EMsgClientToGCPartyJoinViaCodeResponse",
		9140: "k_EMsgClientToGCPartyUpdateRoster",
		9141: "k_EMsgClientToGCPartyUpdateRosterResponse",
		9142: "k_EMsgClientToGCPartySetReadyState",
		9143: "k_EMsgClientToGCPartySetReadyStateResponse",
		9164: "k_EMsgClientToGCGetAccountStats",
		9165: "k_EMsgClientToGCGetAccountStatsResponse",
		9166: "k_EMsgGCToClientAccountStatsUpdated",
		9167: "k_EMsgClientToGCGetMatchMetaData",
		9168: "k_EMsgClientToGCGetMatchMetaDataResponse",
		9172: "k_EMsgClientToGCDevAction",
		9173: "k_EMsgClientToGCDevActionResponse",
		9174: "k_EMsgClientToGCRecordClientEvents",
		9175: "k_EMsgClientToGCRecordClientEventsResponse",
		9176: "k_EMsgClientToGCSetNewPlayerProgress",
		9177: "k_EMsgClientToGCSetNewPlayerProgressResponse",
		9178: "k_EMsgClientToGCUpdateAccountSync",
		9179: "k_EMsgClientToGCUpdateAccountSyncResponse",
		9180: "k_EMsgClientToGCGetHeroChoice",
		9181: "k_EMsgClientToGCGetHeroChoiceResponse",
		9182: "k_EMsgClientToGCUnlockHero",
		9183: "k_EMsgClientToGCUnlockHeroResponse",
		9184: "k_EMsgClientToGCBookUnlock",
		9185: "k_EMsgClientToGCBookUnlockResponse",
		9186: "k_EMsgClientToGCGetBook",
		9187: "k_EMsgClientToGCGetBookResponse",
		9188: "k_EMsgGCToClientBookUpdated",
		9189: "k_EMsgClientToGCSubmitPlaytestUser",
		9190: "k_EMsgClientToGCSubmitPlaytestUserResponse",
		9193: "k_EMsgClientToGCUpdateHeroBuild",
		9194: "k_EMsgClientToGCUpdateHeroBuildResponse",
		9195: "k_EMsgClientToGCFindHeroBuilds",
		9196: "k_EMsgClientToGCFindHeroBuildsResponse",
		9197: "k_EMsgClientToGCReportPlayerFromMatch",
		9198: "k_EMsgClientToGCReportPlayerFromMatchResponse",
		9199: "k_EMsgClientToGCGetAccountMatchReports",
		9200: "k_EMsgClientToGCGetAccountMatchReportsResponse",
		9201: "k_EMsgClientToGCDeleteHeroBuild",
		9202: "k_EMsgClientToGCDeleteHeroBuildResponse",
		9203: "k_EMsgClientToGCGetActiveMatches",
		9204: "k_EMsgClientToGCGetActiveMatchesResponse",
		9205: "k_EMsgClientToGCGetDiscordLink",
		9206: "k_EMsgClientToGCGetDiscordLinkResponse",
		9207: "k_EMsgClientToGCPartySetMode",
		9208: "k_EMsgClientToGCPartySetModeResponse",
		9209: "k_EMsgClientToGCGrantForumAccess",
		9210: "k_EMsgClientToGCGrantForumAccessResponse",
		9211: "k_EMsgClientToGCModeratorRequest",
		9212: "k_EMsgClientToGCModeratorRequestResponse",
		9213: "k_EMsgClientToGCGetFriendGameStatus",
		9214: "k_EMsgClientToGCGetFriendGameStatusResponse",
		9215: "k_EMsgClientToGCUpdateHeroBuildPreference",
		9216: "k_EMsgClientToGCUpdateHeroBuildPreferenceResponse",
		9217: "k_EMsgClientToGCGetOldHeroBuildData",
		9218: "k_EMsgClientToGCGetOldHeroBuildDataResponse",
		9219: "k_EMsgClientToGCUpdateSpectatorStatus",
	}
	EGCCitadelClientMessages_value = map[string]int32{
		"k_EMsgClientToGCStartMatchmaking":                  9010,
		"k_EMsgClientToGCStartMatchmakingResponse":          9011,
		"k_EMsgClientToGCStopMatchmaking":                   9012,
		"k_EMsgClientToGCStopMatchmakingResponse":           9013,
		"k_EMsgGCToClientMatchmakingStopped":                9014,
		"k_EMsgClientToGCLeaveLobby":                        9015,
		"k_EMsgClientToGCLeaveLobbyResponse":                9016,
		"k_EMsgClientToGCIsInMatchmaking":                   9017,
		"k_EMsgClientToGCIsInMatchmakingResponse":           9018,
		"k_EMsgGCToClientDevPlaytestStatus":                 9019,
		"k_EMsgClientToGCDevSetMMBias":                      9023,
		"k_EMsgClientToGCGetProfileCard":                    9024,
		"k_EMsgClientToGCGetProfileCardResponse":            9025,
		"k_EMsgClientToGCUpdateRoster":                      9026,
		"k_EMsgClientToGCUpdateRosterResponse":              9027,
		"k_EMsgGCToClientProfileCardUpdated":                9028,
		"k_EMsgGCToClientDevAnnouncements":                  9029,
		"k_EMsgClientToGCModifyDevAnnouncements":            9030,
		"k_EMsgClientToGCModifyDevAnnouncementsResponse":    9031,
		"k_EMsgGCToClientSDRTicket":                         9100,
		"k_EMsgClientToGCReplacementSDRTicket":              9101,
		"k_EMsgClientToGCReplacementSDRTicketResponse":      9102,
		"k_EMsgClientToGCSetServerConVar":                   9107,
		"k_EMsgClientToGCSetServerConVarResponse":           9108,
		"k_EMsgClientToGCSpectateLobby":                     9109,
		"k_EMsgClientToGCSpectateLobbyResponse":             9110,
		"k_EMsgClientToGCPostMatchSurveyResponse":           9111,
		"k_EMsgClientToGCGetMatchHistory":                   9112,
		"k_EMsgClientToGCGetMatchHistoryResponse":           9113,
		"k_EMsgClientToGCSpectateUser":                      9116,
		"k_EMsgClientToGCSpectateUserResponse":              9117,
		"k_EMsgClientToGCPartyCreate":                       9123,
		"k_EMsgClientToGCPartyCreateResponse":               9124,
		"k_EMsgClientToGCPartyLeave":                        9125,
		"k_EMsgClientToGCPartyLeaveResponse":                9126,
		"k_EMsgClientToGCPartyJoin":                         9127,
		"k_EMsgClientToGCPartyJoinResponse":                 9128,
		"k_EMsgClientToGCPartyAction":                       9129,
		"k_EMsgClientToGCPartyActionResponse":               9130,
		"k_EMsgClientToGCPartyStartMatch":                   9131,
		"k_EMsgClientToGCPartyStartMatchResponse":           9132,
		"k_EMsgClientToGCPartyInviteUser":                   9133,
		"k_EMsgClientToGCPartyInviteUserResponse":           9134,
		"k_EMsgGCToClientPartyEvent":                        9135,
		"k_EMsgGCToClientCanRejoinParty":                    9137,
		"k_EMsgClientToGCPartyJoinViaCode":                  9138,
		"k_EMsgClientToGCPartyJoinViaCodeResponse":          9139,
		"k_EMsgClientToGCPartyUpdateRoster":                 9140,
		"k_EMsgClientToGCPartyUpdateRosterResponse":         9141,
		"k_EMsgClientToGCPartySetReadyState":                9142,
		"k_EMsgClientToGCPartySetReadyStateResponse":        9143,
		"k_EMsgClientToGCGetAccountStats":                   9164,
		"k_EMsgClientToGCGetAccountStatsResponse":           9165,
		"k_EMsgGCToClientAccountStatsUpdated":               9166,
		"k_EMsgClientToGCGetMatchMetaData":                  9167,
		"k_EMsgClientToGCGetMatchMetaDataResponse":          9168,
		"k_EMsgClientToGCDevAction":                         9172,
		"k_EMsgClientToGCDevActionResponse":                 9173,
		"k_EMsgClientToGCRecordClientEvents":                9174,
		"k_EMsgClientToGCRecordClientEventsResponse":        9175,
		"k_EMsgClientToGCSetNewPlayerProgress":              9176,
		"k_EMsgClientToGCSetNewPlayerProgressResponse":      9177,
		"k_EMsgClientToGCUpdateAccountSync":                 9178,
		"k_EMsgClientToGCUpdateAccountSyncResponse":         9179,
		"k_EMsgClientToGCGetHeroChoice":                     9180,
		"k_EMsgClientToGCGetHeroChoiceResponse":             9181,
		"k_EMsgClientToGCUnlockHero":                        9182,
		"k_EMsgClientToGCUnlockHeroResponse":                9183,
		"k_EMsgClientToGCBookUnlock":                        9184,
		"k_EMsgClientToGCBookUnlockResponse":                9185,
		"k_EMsgClientToGCGetBook":                           9186,
		"k_EMsgClientToGCGetBookResponse":                   9187,
		"k_EMsgGCToClientBookUpdated":                       9188,
		"k_EMsgClientToGCSubmitPlaytestUser":                9189,
		"k_EMsgClientToGCSubmitPlaytestUserResponse":        9190,
		"k_EMsgClientToGCUpdateHeroBuild":                   9193,
		"k_EMsgClientToGCUpdateHeroBuildResponse":           9194,
		"k_EMsgClientToGCFindHeroBuilds":                    9195,
		"k_EMsgClientToGCFindHeroBuildsResponse":            9196,
		"k_EMsgClientToGCReportPlayerFromMatch":             9197,
		"k_EMsgClientToGCReportPlayerFromMatchResponse":     9198,
		"k_EMsgClientToGCGetAccountMatchReports":            9199,
		"k_EMsgClientToGCGetAccountMatchReportsResponse":    9200,
		"k_EMsgClientToGCDeleteHeroBuild":                   9201,
		"k_EMsgClientToGCDeleteHeroBuildResponse":           9202,
		"k_EMsgClientToGCGetActiveMatches":                  9203,
		"k_EMsgClientToGCGetActiveMatchesResponse":          9204,
		"k_EMsgClientToGCGetDiscordLink":                    9205,
		"k_EMsgClientToGCGetDiscordLinkResponse":            9206,
		"k_EMsgClientToGCPartySetMode":                      9207,
		"k_EMsgClientToGCPartySetModeResponse":              9208,
		"k_EMsgClientToGCGrantForumAccess":                  9209,
		"k_EMsgClientToGCGrantForumAccessResponse":          9210,
		"k_EMsgClientToGCModeratorRequest":                  9211,
		"k_EMsgClientToGCModeratorRequestResponse":          9212,
		"k_EMsgClientToGCGetFriendGameStatus":               9213,
		"k_EMsgClientToGCGetFriendGameStatusResponse":       9214,
		"k_EMsgClientToGCUpdateHeroBuildPreference":         9215,
		"k_EMsgClientToGCUpdateHeroBuildPreferenceResponse": 9216,
		"k_EMsgClientToGCGetOldHeroBuildData":               9217,
		"k_EMsgClientToGCGetOldHeroBuildDataResponse":       9218,
		"k_EMsgClientToGCUpdateSpectatorStatus":             9219,
	}
)

func (x EGCCitadelClientMessages) Enum() *EGCCitadelClientMessages {
	p := new(EGCCitadelClientMessages)
	*p = x
	return p
}

func (x EGCCitadelClientMessages) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGCCitadelClientMessages) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[0].Descriptor()
}

func (EGCCitadelClientMessages) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[0]
}

func (x EGCCitadelClientMessages) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EGCCitadelClientMessages) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EGCCitadelClientMessages(num)
	return nil
}

// Deprecated: Use EGCCitadelClientMessages.Descriptor instead.
func (EGCCitadelClientMessages) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{0}
}

type ECitadelAccountPermissionFlag int32

const (
	ECitadelAccountPermissionFlag_k_eAccountPermission_PrivateBot ECitadelAccountPermissionFlag = 1
	ECitadelAccountPermissionFlag_k_eAccountPermission_CoopBot    ECitadelAccountPermissionFlag = 2
	ECitadelAccountPermissionFlag_k_eAccountPermission_Unranked   ECitadelAccountPermissionFlag = 3
)

// Enum value maps for ECitadelAccountPermissionFlag.
var (
	ECitadelAccountPermissionFlag_name = map[int32]string{
		1: "k_eAccountPermission_PrivateBot",
		2: "k_eAccountPermission_CoopBot",
		3: "k_eAccountPermission_Unranked",
	}
	ECitadelAccountPermissionFlag_value = map[string]int32{
		"k_eAccountPermission_PrivateBot": 1,
		"k_eAccountPermission_CoopBot":    2,
		"k_eAccountPermission_Unranked":   3,
	}
)

func (x ECitadelAccountPermissionFlag) Enum() *ECitadelAccountPermissionFlag {
	p := new(ECitadelAccountPermissionFlag)
	*p = x
	return p
}

func (x ECitadelAccountPermissionFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECitadelAccountPermissionFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[1].Descriptor()
}

func (ECitadelAccountPermissionFlag) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[1]
}

func (x ECitadelAccountPermissionFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ECitadelAccountPermissionFlag) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ECitadelAccountPermissionFlag(num)
	return nil
}

// Deprecated: Use ECitadelAccountPermissionFlag.Descriptor instead.
func (ECitadelAccountPermissionFlag) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{1}
}

type ECitadelNewPlayerProgressFlag int32

const (
	ECitadelNewPlayerProgressFlag_k_eNewPlayerProgress_GettingStarted ECitadelNewPlayerProgressFlag = 1
	ECitadelNewPlayerProgressFlag_k_eNewPlayerProgress_HeroTraining   ECitadelNewPlayerProgressFlag = 2
	ECitadelNewPlayerProgressFlag_k_eNewPlayerProgress_LaneTraining   ECitadelNewPlayerProgressFlag = 3
)

// Enum value maps for ECitadelNewPlayerProgressFlag.
var (
	ECitadelNewPlayerProgressFlag_name = map[int32]string{
		1: "k_eNewPlayerProgress_GettingStarted",
		2: "k_eNewPlayerProgress_HeroTraining",
		3: "k_eNewPlayerProgress_LaneTraining",
	}
	ECitadelNewPlayerProgressFlag_value = map[string]int32{
		"k_eNewPlayerProgress_GettingStarted": 1,
		"k_eNewPlayerProgress_HeroTraining":   2,
		"k_eNewPlayerProgress_LaneTraining":   3,
	}
)

func (x ECitadelNewPlayerProgressFlag) Enum() *ECitadelNewPlayerProgressFlag {
	p := new(ECitadelNewPlayerProgressFlag)
	*p = x
	return p
}

func (x ECitadelNewPlayerProgressFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECitadelNewPlayerProgressFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[2].Descriptor()
}

func (ECitadelNewPlayerProgressFlag) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[2]
}

func (x ECitadelNewPlayerProgressFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ECitadelNewPlayerProgressFlag) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ECitadelNewPlayerProgressFlag(num)
	return nil
}

// Deprecated: Use ECitadelNewPlayerProgressFlag.Descriptor instead.
func (ECitadelNewPlayerProgressFlag) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{2}
}

type EProfileCardSlotType int32

const (
	EProfileCardSlotType_k_EProfileCardSlotType_Empty EProfileCardSlotType = 0
	EProfileCardSlotType_k_EProfileCardSlotType_Stat  EProfileCardSlotType = 1
	EProfileCardSlotType_k_EProfileCardSlotType_Hero  EProfileCardSlotType = 2
)

// Enum value maps for EProfileCardSlotType.
var (
	EProfileCardSlotType_name = map[int32]string{
		0: "k_EProfileCardSlotType_Empty",
		1: "k_EProfileCardSlotType_Stat",
		2: "k_EProfileCardSlotType_Hero",
	}
	EProfileCardSlotType_value = map[string]int32{
		"k_EProfileCardSlotType_Empty": 0,
		"k_EProfileCardSlotType_Stat":  1,
		"k_EProfileCardSlotType_Hero":  2,
	}
)

func (x EProfileCardSlotType) Enum() *EProfileCardSlotType {
	p := new(EProfileCardSlotType)
	*p = x
	return p
}

func (x EProfileCardSlotType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EProfileCardSlotType) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[3].Descriptor()
}

func (EProfileCardSlotType) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[3]
}

func (x EProfileCardSlotType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EProfileCardSlotType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EProfileCardSlotType(num)
	return nil
}

// Deprecated: Use EProfileCardSlotType.Descriptor instead.
func (EProfileCardSlotType) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{3}
}

type ECitadelClientAccountEvent int32

const (
	ECitadelClientAccountEvent_k_eLaunchedHeroTest          ECitadelClientAccountEvent = 1
	ECitadelClientAccountEvent_k_eViewedProfile             ECitadelClientAccountEvent = 2
	ECitadelClientAccountEvent_k_eViewedSocial              ECitadelClientAccountEvent = 3
	ECitadelClientAccountEvent_k_eViewedHeroes              ECitadelClientAccountEvent = 4
	ECitadelClientAccountEvent_k_eViewedHeroDetails         ECitadelClientAccountEvent = 5
	ECitadelClientAccountEvent_k_eViewedPatchNotes          ECitadelClientAccountEvent = 6
	ECitadelClientAccountEvent_k_eViewedEvents              ECitadelClientAccountEvent = 7
	ECitadelClientAccountEvent_k_eViewedGettingStarted      ECitadelClientAccountEvent = 8
	ECitadelClientAccountEvent_k_eViewedGuidePage           ECitadelClientAccountEvent = 9
	ECitadelClientAccountEvent_k_eLaunchedClient            ECitadelClientAccountEvent = 10
	ECitadelClientAccountEvent_k_eEditRoster                ECitadelClientAccountEvent = 11
	ECitadelClientAccountEvent_k_eViewedWatch               ECitadelClientAccountEvent = 12
	ECitadelClientAccountEvent_k_eCreatedParty              ECitadelClientAccountEvent = 13
	ECitadelClientAccountEvent_k_eCreatedPartyWithInvite    ECitadelClientAccountEvent = 14
	ECitadelClientAccountEvent_k_eViewedSelfProfile         ECitadelClientAccountEvent = 15
	ECitadelClientAccountEvent_k_eJoinedPartyCode           ECitadelClientAccountEvent = 16
	ECitadelClientAccountEvent_k_eSentPartyInvite           ECitadelClientAccountEvent = 17
	ECitadelClientAccountEvent_k_eAcceptPartyInvite         ECitadelClientAccountEvent = 18
	ECitadelClientAccountEvent_k_eRejectPartyInvite         ECitadelClientAccountEvent = 19
	ECitadelClientAccountEvent_k_eSpectateUser              ECitadelClientAccountEvent = 20
	ECitadelClientAccountEvent_k_eSpectateMatch             ECitadelClientAccountEvent = 21
	ECitadelClientAccountEvent_k_eEnteredMatchMaking        ECitadelClientAccountEvent = 22
	ECitadelClientAccountEvent_k_eLeftMatchMaking           ECitadelClientAccountEvent = 23
	ECitadelClientAccountEvent_k_eEnteredPartyMatchMaking   ECitadelClientAccountEvent = 24
	ECitadelClientAccountEvent_k_eLeftPartyMatchMaking      ECitadelClientAccountEvent = 25
	ECitadelClientAccountEvent_k_eDownloadedReplay          ECitadelClientAccountEvent = 26
	ECitadelClientAccountEvent_k_eWatchedReplay             ECitadelClientAccountEvent = 27
	ECitadelClientAccountEvent_k_eViewMatchDetails          ECitadelClientAccountEvent = 28
	ECitadelClientAccountEvent_k_eMatchDetailsTab           ECitadelClientAccountEvent = 29
	ECitadelClientAccountEvent_k_eDeleteReplay              ECitadelClientAccountEvent = 30
	ECitadelClientAccountEvent_k_eBotMatch_Guided           ECitadelClientAccountEvent = 31
	ECitadelClientAccountEvent_k_eBotMatch_Easy             ECitadelClientAccountEvent = 32
	ECitadelClientAccountEvent_k_eBotMatch_Hard             ECitadelClientAccountEvent = 33
	ECitadelClientAccountEvent_k_eLiveUpdatedRoster         ECitadelClientAccountEvent = 34
	ECitadelClientAccountEvent_k_eMatchMakingIdle_Displayed ECitadelClientAccountEvent = 35
	ECitadelClientAccountEvent_k_eMatchMakingIdle_Stopped   ECitadelClientAccountEvent = 36
	ECitadelClientAccountEvent_k_eConnectReacquireTicket    ECitadelClientAccountEvent = 37
	ECitadelClientAccountEvent_k_eConnectAttemptReconnect   ECitadelClientAccountEvent = 38
	ECitadelClientAccountEvent_k_eDisconnectPresentedPrompt ECitadelClientAccountEvent = 39
	ECitadelClientAccountEvent_k_eDisconnectConfirmed       ECitadelClientAccountEvent = 40
	ECitadelClientAccountEvent_k_eViewedSettings_Options    ECitadelClientAccountEvent = 41
	ECitadelClientAccountEvent_k_eViewedSettings_Video      ECitadelClientAccountEvent = 42
	ECitadelClientAccountEvent_k_eViewedSettings_Audio      ECitadelClientAccountEvent = 43
	ECitadelClientAccountEvent_k_eViewedSettings_HotKey     ECitadelClientAccountEvent = 44
	ECitadelClientAccountEvent_k_eViewedSettings_ChatWheel  ECitadelClientAccountEvent = 45
	ECitadelClientAccountEvent_k_eViewedSettings_About      ECitadelClientAccountEvent = 46
	ECitadelClientAccountEvent_k_eOpenedSubmitFeedback      ECitadelClientAccountEvent = 47
	ECitadelClientAccountEvent_k_eTutorialSkip_Pressed      ECitadelClientAccountEvent = 48
	ECitadelClientAccountEvent_k_eTutorialSkip_Confirmed    ECitadelClientAccountEvent = 49
	ECitadelClientAccountEvent_k_eViewedGuidePage_5s        ECitadelClientAccountEvent = 50
	ECitadelClientAccountEvent_k_eViewedGuidePage_15s       ECitadelClientAccountEvent = 51
	ECitadelClientAccountEvent_k_eViewedGuidePage_30s       ECitadelClientAccountEvent = 52
	ECitadelClientAccountEvent_k_eViewedGuidePage_60s       ECitadelClientAccountEvent = 53
	ECitadelClientAccountEvent_k_eOpenedBookTest            ECitadelClientAccountEvent = 54
	ECitadelClientAccountEvent_k_eSandboxViaHeroPage        ECitadelClientAccountEvent = 55
)

// Enum value maps for ECitadelClientAccountEvent.
var (
	ECitadelClientAccountEvent_name = map[int32]string{
		1:  "k_eLaunchedHeroTest",
		2:  "k_eViewedProfile",
		3:  "k_eViewedSocial",
		4:  "k_eViewedHeroes",
		5:  "k_eViewedHeroDetails",
		6:  "k_eViewedPatchNotes",
		7:  "k_eViewedEvents",
		8:  "k_eViewedGettingStarted",
		9:  "k_eViewedGuidePage",
		10: "k_eLaunchedClient",
		11: "k_eEditRoster",
		12: "k_eViewedWatch",
		13: "k_eCreatedParty",
		14: "k_eCreatedPartyWithInvite",
		15: "k_eViewedSelfProfile",
		16: "k_eJoinedPartyCode",
		17: "k_eSentPartyInvite",
		18: "k_eAcceptPartyInvite",
		19: "k_eRejectPartyInvite",
		20: "k_eSpectateUser",
		21: "k_eSpectateMatch",
		22: "k_eEnteredMatchMaking",
		23: "k_eLeftMatchMaking",
		24: "k_eEnteredPartyMatchMaking",
		25: "k_eLeftPartyMatchMaking",
		26: "k_eDownloadedReplay",
		27: "k_eWatchedReplay",
		28: "k_eViewMatchDetails",
		29: "k_eMatchDetailsTab",
		30: "k_eDeleteReplay",
		31: "k_eBotMatch_Guided",
		32: "k_eBotMatch_Easy",
		33: "k_eBotMatch_Hard",
		34: "k_eLiveUpdatedRoster",
		35: "k_eMatchMakingIdle_Displayed",
		36: "k_eMatchMakingIdle_Stopped",
		37: "k_eConnectReacquireTicket",
		38: "k_eConnectAttemptReconnect",
		39: "k_eDisconnectPresentedPrompt",
		40: "k_eDisconnectConfirmed",
		41: "k_eViewedSettings_Options",
		42: "k_eViewedSettings_Video",
		43: "k_eViewedSettings_Audio",
		44: "k_eViewedSettings_HotKey",
		45: "k_eViewedSettings_ChatWheel",
		46: "k_eViewedSettings_About",
		47: "k_eOpenedSubmitFeedback",
		48: "k_eTutorialSkip_Pressed",
		49: "k_eTutorialSkip_Confirmed",
		50: "k_eViewedGuidePage_5s",
		51: "k_eViewedGuidePage_15s",
		52: "k_eViewedGuidePage_30s",
		53: "k_eViewedGuidePage_60s",
		54: "k_eOpenedBookTest",
		55: "k_eSandboxViaHeroPage",
	}
	ECitadelClientAccountEvent_value = map[string]int32{
		"k_eLaunchedHeroTest":          1,
		"k_eViewedProfile":             2,
		"k_eViewedSocial":              3,
		"k_eViewedHeroes":              4,
		"k_eViewedHeroDetails":         5,
		"k_eViewedPatchNotes":          6,
		"k_eViewedEvents":              7,
		"k_eViewedGettingStarted":      8,
		"k_eViewedGuidePage":           9,
		"k_eLaunchedClient":            10,
		"k_eEditRoster":                11,
		"k_eViewedWatch":               12,
		"k_eCreatedParty":              13,
		"k_eCreatedPartyWithInvite":    14,
		"k_eViewedSelfProfile":         15,
		"k_eJoinedPartyCode":           16,
		"k_eSentPartyInvite":           17,
		"k_eAcceptPartyInvite":         18,
		"k_eRejectPartyInvite":         19,
		"k_eSpectateUser":              20,
		"k_eSpectateMatch":             21,
		"k_eEnteredMatchMaking":        22,
		"k_eLeftMatchMaking":           23,
		"k_eEnteredPartyMatchMaking":   24,
		"k_eLeftPartyMatchMaking":      25,
		"k_eDownloadedReplay":          26,
		"k_eWatchedReplay":             27,
		"k_eViewMatchDetails":          28,
		"k_eMatchDetailsTab":           29,
		"k_eDeleteReplay":              30,
		"k_eBotMatch_Guided":           31,
		"k_eBotMatch_Easy":             32,
		"k_eBotMatch_Hard":             33,
		"k_eLiveUpdatedRoster":         34,
		"k_eMatchMakingIdle_Displayed": 35,
		"k_eMatchMakingIdle_Stopped":   36,
		"k_eConnectReacquireTicket":    37,
		"k_eConnectAttemptReconnect":   38,
		"k_eDisconnectPresentedPrompt": 39,
		"k_eDisconnectConfirmed":       40,
		"k_eViewedSettings_Options":    41,
		"k_eViewedSettings_Video":      42,
		"k_eViewedSettings_Audio":      43,
		"k_eViewedSettings_HotKey":     44,
		"k_eViewedSettings_ChatWheel":  45,
		"k_eViewedSettings_About":      46,
		"k_eOpenedSubmitFeedback":      47,
		"k_eTutorialSkip_Pressed":      48,
		"k_eTutorialSkip_Confirmed":    49,
		"k_eViewedGuidePage_5s":        50,
		"k_eViewedGuidePage_15s":       51,
		"k_eViewedGuidePage_30s":       52,
		"k_eViewedGuidePage_60s":       53,
		"k_eOpenedBookTest":            54,
		"k_eSandboxViaHeroPage":        55,
	}
)

func (x ECitadelClientAccountEvent) Enum() *ECitadelClientAccountEvent {
	p := new(ECitadelClientAccountEvent)
	*p = x
	return p
}

func (x ECitadelClientAccountEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECitadelClientAccountEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[4].Descriptor()
}

func (ECitadelClientAccountEvent) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[4]
}

func (x ECitadelClientAccountEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ECitadelClientAccountEvent) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ECitadelClientAccountEvent(num)
	return nil
}

// Deprecated: Use ECitadelClientAccountEvent.Descriptor instead.
func (ECitadelClientAccountEvent) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{4}
}

type CSOGameAccountClient_EFlags int32

const (
	CSOGameAccountClient_k_eDeveloper          CSOGameAccountClient_EFlags = 1
	CSOGameAccountClient_k_eExternalModerator  CSOGameAccountClient_EFlags = 2
	CSOGameAccountClient_k_eGotInitialHeroes   CSOGameAccountClient_EFlags = 4
	CSOGameAccountClient_k_eClaimedDiscordLink CSOGameAccountClient_EFlags = 16
	CSOGameAccountClient_k_eClaimedForum       CSOGameAccountClient_EFlags = 32
	CSOGameAccountClient_k_eAccountBanned      CSOGameAccountClient_EFlags = 64
)

// Enum value maps for CSOGameAccountClient_EFlags.
var (
	CSOGameAccountClient_EFlags_name = map[int32]string{
		1:  "k_eDeveloper",
		2:  "k_eExternalModerator",
		4:  "k_eGotInitialHeroes",
		16: "k_eClaimedDiscordLink",
		32: "k_eClaimedForum",
		64: "k_eAccountBanned",
	}
	CSOGameAccountClient_EFlags_value = map[string]int32{
		"k_eDeveloper":          1,
		"k_eExternalModerator":  2,
		"k_eGotInitialHeroes":   4,
		"k_eClaimedDiscordLink": 16,
		"k_eClaimedForum":       32,
		"k_eAccountBanned":      64,
	}
)

func (x CSOGameAccountClient_EFlags) Enum() *CSOGameAccountClient_EFlags {
	p := new(CSOGameAccountClient_EFlags)
	*p = x
	return p
}

func (x CSOGameAccountClient_EFlags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CSOGameAccountClient_EFlags) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[5].Descriptor()
}

func (CSOGameAccountClient_EFlags) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[5]
}

func (x CSOGameAccountClient_EFlags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CSOGameAccountClient_EFlags) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CSOGameAccountClient_EFlags(num)
	return nil
}

// Deprecated: Use CSOGameAccountClient_EFlags.Descriptor instead.
func (CSOGameAccountClient_EFlags) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{0, 0}
}

type CSOAccountHeroInfo_EHeroStatus int32

const (
	CSOAccountHeroInfo_k_eLocked CSOAccountHeroInfo_EHeroStatus = 0
	CSOAccountHeroInfo_k_eOwned  CSOAccountHeroInfo_EHeroStatus = 1
)

// Enum value maps for CSOAccountHeroInfo_EHeroStatus.
var (
	CSOAccountHeroInfo_EHeroStatus_name = map[int32]string{
		0: "k_eLocked",
		1: "k_eOwned",
	}
	CSOAccountHeroInfo_EHeroStatus_value = map[string]int32{
		"k_eLocked": 0,
		"k_eOwned":  1,
	}
)

func (x CSOAccountHeroInfo_EHeroStatus) Enum() *CSOAccountHeroInfo_EHeroStatus {
	p := new(CSOAccountHeroInfo_EHeroStatus)
	*p = x
	return p
}

func (x CSOAccountHeroInfo_EHeroStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CSOAccountHeroInfo_EHeroStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[6].Descriptor()
}

func (CSOAccountHeroInfo_EHeroStatus) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[6]
}

func (x CSOAccountHeroInfo_EHeroStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CSOAccountHeroInfo_EHeroStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CSOAccountHeroInfo_EHeroStatus(num)
	return nil
}

// Deprecated: Use CSOAccountHeroInfo_EHeroStatus.Descriptor instead.
func (CSOAccountHeroInfo_EHeroStatus) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{2, 0}
}

type CMsgClientToGCStartMatchmakingResponse_EResultCode int32

const (
	CMsgClientToGCStartMatchmakingResponse_k_EResult_OK                     CMsgClientToGCStartMatchmakingResponse_EResultCode = 0
	CMsgClientToGCStartMatchmakingResponse_k_EResult_AlreadyFindingMatch    CMsgClientToGCStartMatchmakingResponse_EResultCode = 1
	CMsgClientToGCStartMatchmakingResponse_k_EResult_PartyMemberInLobby     CMsgClientToGCStartMatchmakingResponse_EResultCode = 2
	CMsgClientToGCStartMatchmakingResponse_k_EResult_InvalidClientVersion   CMsgClientToGCStartMatchmakingResponse_EResultCode = 3
	CMsgClientToGCStartMatchmakingResponse_k_EResult_MatchmakingDisabled    CMsgClientToGCStartMatchmakingResponse_EResultCode = 4
	CMsgClientToGCStartMatchmakingResponse_k_EResult_MatchmakingTooBusy     CMsgClientToGCStartMatchmakingResponse_EResultCode = 5
	CMsgClientToGCStartMatchmakingResponse_k_EResult_InternalError          CMsgClientToGCStartMatchmakingResponse_EResultCode = 6
	CMsgClientToGCStartMatchmakingResponse_k_EResult_NoRegionPings          CMsgClientToGCStartMatchmakingResponse_EResultCode = 7
	CMsgClientToGCStartMatchmakingResponse_k_EResult_InParty                CMsgClientToGCStartMatchmakingResponse_EResultCode = 8
	CMsgClientToGCStartMatchmakingResponse_k_EResult_ModeLocked             CMsgClientToGCStartMatchmakingResponse_EResultCode = 9
	CMsgClientToGCStartMatchmakingResponse_k_EResult_ModeBanned             CMsgClientToGCStartMatchmakingResponse_EResultCode = 10
	CMsgClientToGCStartMatchmakingResponse_k_EResult_RegionInfoNotProvided  CMsgClientToGCStartMatchmakingResponse_EResultCode = 11
	CMsgClientToGCStartMatchmakingResponse_k_EResult_DurationControlBlocked CMsgClientToGCStartMatchmakingResponse_EResultCode = 12
	CMsgClientToGCStartMatchmakingResponse_k_EResult_InvalidHeroSelection   CMsgClientToGCStartMatchmakingResponse_EResultCode = 13
	CMsgClientToGCStartMatchmakingResponse_k_EResult_HeroesNotUnlocked      CMsgClientToGCStartMatchmakingResponse_EResultCode = 14
	CMsgClientToGCStartMatchmakingResponse_k_EResult_PermanentBan           CMsgClientToGCStartMatchmakingResponse_EResultCode = 15
)

// Enum value maps for CMsgClientToGCStartMatchmakingResponse_EResultCode.
var (
	CMsgClientToGCStartMatchmakingResponse_EResultCode_name = map[int32]string{
		0:  "k_EResult_OK",
		1:  "k_EResult_AlreadyFindingMatch",
		2:  "k_EResult_PartyMemberInLobby",
		3:  "k_EResult_InvalidClientVersion",
		4:  "k_EResult_MatchmakingDisabled",
		5:  "k_EResult_MatchmakingTooBusy",
		6:  "k_EResult_InternalError",
		7:  "k_EResult_NoRegionPings",
		8:  "k_EResult_InParty",
		9:  "k_EResult_ModeLocked",
		10: "k_EResult_ModeBanned",
		11: "k_EResult_RegionInfoNotProvided",
		12: "k_EResult_DurationControlBlocked",
		13: "k_EResult_InvalidHeroSelection",
		14: "k_EResult_HeroesNotUnlocked",
		15: "k_EResult_PermanentBan",
	}
	CMsgClientToGCStartMatchmakingResponse_EResultCode_value = map[string]int32{
		"k_EResult_OK":                     0,
		"k_EResult_AlreadyFindingMatch":    1,
		"k_EResult_PartyMemberInLobby":     2,
		"k_EResult_InvalidClientVersion":   3,
		"k_EResult_MatchmakingDisabled":    4,
		"k_EResult_MatchmakingTooBusy":     5,
		"k_EResult_InternalError":          6,
		"k_EResult_NoRegionPings":          7,
		"k_EResult_InParty":                8,
		"k_EResult_ModeLocked":             9,
		"k_EResult_ModeBanned":             10,
		"k_EResult_RegionInfoNotProvided":  11,
		"k_EResult_DurationControlBlocked": 12,
		"k_EResult_InvalidHeroSelection":   13,
		"k_EResult_HeroesNotUnlocked":      14,
		"k_EResult_PermanentBan":           15,
	}
)

func (x CMsgClientToGCStartMatchmakingResponse_EResultCode) Enum() *CMsgClientToGCStartMatchmakingResponse_EResultCode {
	p := new(CMsgClientToGCStartMatchmakingResponse_EResultCode)
	*p = x
	return p
}

func (x CMsgClientToGCStartMatchmakingResponse_EResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCStartMatchmakingResponse_EResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[7].Descriptor()
}

func (CMsgClientToGCStartMatchmakingResponse_EResultCode) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[7]
}

func (x CMsgClientToGCStartMatchmakingResponse_EResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCStartMatchmakingResponse_EResultCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCStartMatchmakingResponse_EResultCode(num)
	return nil
}

// Deprecated: Use CMsgClientToGCStartMatchmakingResponse_EResultCode.Descriptor instead.
func (CMsgClientToGCStartMatchmakingResponse_EResultCode) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{5, 0}
}

type CMsgGCToClientMatchmakingStopped_EReason int32

const (
	CMsgGCToClientMatchmakingStopped_k_EResult_Unspecified    CMsgGCToClientMatchmakingStopped_EReason = 0
	CMsgGCToClientMatchmakingStopped_k_EResult_VersionUpdated CMsgGCToClientMatchmakingStopped_EReason = 1
	CMsgGCToClientMatchmakingStopped_k_EResult_FailedReadyUp  CMsgGCToClientMatchmakingStopped_EReason = 2
)

// Enum value maps for CMsgGCToClientMatchmakingStopped_EReason.
var (
	CMsgGCToClientMatchmakingStopped_EReason_name = map[int32]string{
		0: "k_EResult_Unspecified",
		1: "k_EResult_VersionUpdated",
		2: "k_EResult_FailedReadyUp",
	}
	CMsgGCToClientMatchmakingStopped_EReason_value = map[string]int32{
		"k_EResult_Unspecified":    0,
		"k_EResult_VersionUpdated": 1,
		"k_EResult_FailedReadyUp":  2,
	}
)

func (x CMsgGCToClientMatchmakingStopped_EReason) Enum() *CMsgGCToClientMatchmakingStopped_EReason {
	p := new(CMsgGCToClientMatchmakingStopped_EReason)
	*p = x
	return p
}

func (x CMsgGCToClientMatchmakingStopped_EReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgGCToClientMatchmakingStopped_EReason) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[8].Descriptor()
}

func (CMsgGCToClientMatchmakingStopped_EReason) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[8]
}

func (x CMsgGCToClientMatchmakingStopped_EReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgGCToClientMatchmakingStopped_EReason) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgGCToClientMatchmakingStopped_EReason(num)
	return nil
}

// Deprecated: Use CMsgGCToClientMatchmakingStopped_EReason.Descriptor instead.
func (CMsgGCToClientMatchmakingStopped_EReason) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{8, 0}
}

type CMsgClientToGCPartyCreateResponse_EResponse int32

const (
	CMsgClientToGCPartyCreateResponse_k_eInternalError          CMsgClientToGCPartyCreateResponse_EResponse = 0
	CMsgClientToGCPartyCreateResponse_k_eSuccess                CMsgClientToGCPartyCreateResponse_EResponse = 1
	CMsgClientToGCPartyCreateResponse_k_eAlreadyInParty         CMsgClientToGCPartyCreateResponse_EResponse = 2
	CMsgClientToGCPartyCreateResponse_k_eDisabled               CMsgClientToGCPartyCreateResponse_EResponse = 3
	CMsgClientToGCPartyCreateResponse_k_eInvalidVersion         CMsgClientToGCPartyCreateResponse_EResponse = 4
	CMsgClientToGCPartyCreateResponse_k_eNoRegionPings          CMsgClientToGCPartyCreateResponse_EResponse = 5
	CMsgClientToGCPartyCreateResponse_k_eTooBusy                CMsgClientToGCPartyCreateResponse_EResponse = 6
	CMsgClientToGCPartyCreateResponse_k_eRateLimited            CMsgClientToGCPartyCreateResponse_EResponse = 7
	CMsgClientToGCPartyCreateResponse_k_eNotFriends             CMsgClientToGCPartyCreateResponse_EResponse = 8
	CMsgClientToGCPartyCreateResponse_k_eRegionInfoNotProvided  CMsgClientToGCPartyCreateResponse_EResponse = 9
	CMsgClientToGCPartyCreateResponse_k_eDurationControlBlocked CMsgClientToGCPartyCreateResponse_EResponse = 10
	CMsgClientToGCPartyCreateResponse_k_eInMatchmaking          CMsgClientToGCPartyCreateResponse_EResponse = 11
	CMsgClientToGCPartyCreateResponse_k_ePlayerDoesntHaveGame   CMsgClientToGCPartyCreateResponse_EResponse = 12
)

// Enum value maps for CMsgClientToGCPartyCreateResponse_EResponse.
var (
	CMsgClientToGCPartyCreateResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eAlreadyInParty",
		3:  "k_eDisabled",
		4:  "k_eInvalidVersion",
		5:  "k_eNoRegionPings",
		6:  "k_eTooBusy",
		7:  "k_eRateLimited",
		8:  "k_eNotFriends",
		9:  "k_eRegionInfoNotProvided",
		10: "k_eDurationControlBlocked",
		11: "k_eInMatchmaking",
		12: "k_ePlayerDoesntHaveGame",
	}
	CMsgClientToGCPartyCreateResponse_EResponse_value = map[string]int32{
		"k_eInternalError":          0,
		"k_eSuccess":                1,
		"k_eAlreadyInParty":         2,
		"k_eDisabled":               3,
		"k_eInvalidVersion":         4,
		"k_eNoRegionPings":          5,
		"k_eTooBusy":                6,
		"k_eRateLimited":            7,
		"k_eNotFriends":             8,
		"k_eRegionInfoNotProvided":  9,
		"k_eDurationControlBlocked": 10,
		"k_eInMatchmaking":          11,
		"k_ePlayerDoesntHaveGame":   12,
	}
)

func (x CMsgClientToGCPartyCreateResponse_EResponse) Enum() *CMsgClientToGCPartyCreateResponse_EResponse {
	p := new(CMsgClientToGCPartyCreateResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCPartyCreateResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCPartyCreateResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[9].Descriptor()
}

func (CMsgClientToGCPartyCreateResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[9]
}

func (x CMsgClientToGCPartyCreateResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCPartyCreateResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCPartyCreateResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCPartyCreateResponse_EResponse.Descriptor instead.
func (CMsgClientToGCPartyCreateResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{24, 0}
}

type CMsgClientToGCPartyLeaveResponse_EResponse int32

const (
	CMsgClientToGCPartyLeaveResponse_k_eInternalError CMsgClientToGCPartyLeaveResponse_EResponse = 0
	CMsgClientToGCPartyLeaveResponse_k_eSuccess       CMsgClientToGCPartyLeaveResponse_EResponse = 1
	CMsgClientToGCPartyLeaveResponse_k_eNotInParty    CMsgClientToGCPartyLeaveResponse_EResponse = 2
	CMsgClientToGCPartyLeaveResponse_k_eInMatchMaking CMsgClientToGCPartyLeaveResponse_EResponse = 3
)

// Enum value maps for CMsgClientToGCPartyLeaveResponse_EResponse.
var (
	CMsgClientToGCPartyLeaveResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eNotInParty",
		3: "k_eInMatchMaking",
	}
	CMsgClientToGCPartyLeaveResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eNotInParty":    2,
		"k_eInMatchMaking": 3,
	}
)

func (x CMsgClientToGCPartyLeaveResponse_EResponse) Enum() *CMsgClientToGCPartyLeaveResponse_EResponse {
	p := new(CMsgClientToGCPartyLeaveResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCPartyLeaveResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCPartyLeaveResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[10].Descriptor()
}

func (CMsgClientToGCPartyLeaveResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[10]
}

func (x CMsgClientToGCPartyLeaveResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCPartyLeaveResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCPartyLeaveResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCPartyLeaveResponse_EResponse.Descriptor instead.
func (CMsgClientToGCPartyLeaveResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{26, 0}
}

type CMsgClientToGCPartyJoinResponse_EResponse int32

const (
	CMsgClientToGCPartyJoinResponse_k_eInternalError          CMsgClientToGCPartyJoinResponse_EResponse = 0
	CMsgClientToGCPartyJoinResponse_k_eSuccess                CMsgClientToGCPartyJoinResponse_EResponse = 1
	CMsgClientToGCPartyJoinResponse_k_eAlreadyInParty         CMsgClientToGCPartyJoinResponse_EResponse = 2
	CMsgClientToGCPartyJoinResponse_k_eDisabled               CMsgClientToGCPartyJoinResponse_EResponse = 3
	CMsgClientToGCPartyJoinResponse_k_eInvalidPartyID         CMsgClientToGCPartyJoinResponse_EResponse = 4
	CMsgClientToGCPartyJoinResponse_k_eInvalidPermissions     CMsgClientToGCPartyJoinResponse_EResponse = 5
	CMsgClientToGCPartyJoinResponse_k_eInvalidVersion         CMsgClientToGCPartyJoinResponse_EResponse = 6
	CMsgClientToGCPartyJoinResponse_k_eNoRegionPings          CMsgClientToGCPartyJoinResponse_EResponse = 7
	CMsgClientToGCPartyJoinResponse_k_eTooBusy                CMsgClientToGCPartyJoinResponse_EResponse = 8
	CMsgClientToGCPartyJoinResponse_k_eInvalidCode            CMsgClientToGCPartyJoinResponse_EResponse = 9
	CMsgClientToGCPartyJoinResponse_k_eRateLimited            CMsgClientToGCPartyJoinResponse_EResponse = 10
	CMsgClientToGCPartyJoinResponse_k_eRegionInfoNotProvided  CMsgClientToGCPartyJoinResponse_EResponse = 11
	CMsgClientToGCPartyJoinResponse_k_eDurationControlBlocked CMsgClientToGCPartyJoinResponse_EResponse = 12
	CMsgClientToGCPartyJoinResponse_k_ePartyInMatchMaking     CMsgClientToGCPartyJoinResponse_EResponse = 13
	CMsgClientToGCPartyJoinResponse_k_eInMatchmaking          CMsgClientToGCPartyJoinResponse_EResponse = 14
)

// Enum value maps for CMsgClientToGCPartyJoinResponse_EResponse.
var (
	CMsgClientToGCPartyJoinResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eAlreadyInParty",
		3:  "k_eDisabled",
		4:  "k_eInvalidPartyID",
		5:  "k_eInvalidPermissions",
		6:  "k_eInvalidVersion",
		7:  "k_eNoRegionPings",
		8:  "k_eTooBusy",
		9:  "k_eInvalidCode",
		10: "k_eRateLimited",
		11: "k_eRegionInfoNotProvided",
		12: "k_eDurationControlBlocked",
		13: "k_ePartyInMatchMaking",
		14: "k_eInMatchmaking",
	}
	CMsgClientToGCPartyJoinResponse_EResponse_value = map[string]int32{
		"k_eInternalError":          0,
		"k_eSuccess":                1,
		"k_eAlreadyInParty":         2,
		"k_eDisabled":               3,
		"k_eInvalidPartyID":         4,
		"k_eInvalidPermissions":     5,
		"k_eInvalidVersion":         6,
		"k_eNoRegionPings":          7,
		"k_eTooBusy":                8,
		"k_eInvalidCode":            9,
		"k_eRateLimited":            10,
		"k_eRegionInfoNotProvided":  11,
		"k_eDurationControlBlocked": 12,
		"k_ePartyInMatchMaking":     13,
		"k_eInMatchmaking":          14,
	}
)

func (x CMsgClientToGCPartyJoinResponse_EResponse) Enum() *CMsgClientToGCPartyJoinResponse_EResponse {
	p := new(CMsgClientToGCPartyJoinResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCPartyJoinResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCPartyJoinResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[11].Descriptor()
}

func (CMsgClientToGCPartyJoinResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[11]
}

func (x CMsgClientToGCPartyJoinResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCPartyJoinResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCPartyJoinResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCPartyJoinResponse_EResponse.Descriptor instead.
func (CMsgClientToGCPartyJoinResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{28, 0}
}

type CMsgClientToGCPartyAction_EAction int32

const (
	CMsgClientToGCPartyAction_k_eKickUser        CMsgClientToGCPartyAction_EAction = 1
	CMsgClientToGCPartyAction_k_eCancelInvite    CMsgClientToGCPartyAction_EAction = 2
	CMsgClientToGCPartyAction_k_eCancelFindMatch CMsgClientToGCPartyAction_EAction = 3
	CMsgClientToGCPartyAction_k_eSetPlayerType   CMsgClientToGCPartyAction_EAction = 5
	CMsgClientToGCPartyAction_k_eEnablePartyCode CMsgClientToGCPartyAction_EAction = 7
	CMsgClientToGCPartyAction_k_eSetMemberTeam   CMsgClientToGCPartyAction_EAction = 8
	CMsgClientToGCPartyAction_k_eSetChatMode     CMsgClientToGCPartyAction_EAction = 9
)

// Enum value maps for CMsgClientToGCPartyAction_EAction.
var (
	CMsgClientToGCPartyAction_EAction_name = map[int32]string{
		1: "k_eKickUser",
		2: "k_eCancelInvite",
		3: "k_eCancelFindMatch",
		5: "k_eSetPlayerType",
		7: "k_eEnablePartyCode",
		8: "k_eSetMemberTeam",
		9: "k_eSetChatMode",
	}
	CMsgClientToGCPartyAction_EAction_value = map[string]int32{
		"k_eKickUser":        1,
		"k_eCancelInvite":    2,
		"k_eCancelFindMatch": 3,
		"k_eSetPlayerType":   5,
		"k_eEnablePartyCode": 7,
		"k_eSetMemberTeam":   8,
		"k_eSetChatMode":     9,
	}
)

func (x CMsgClientToGCPartyAction_EAction) Enum() *CMsgClientToGCPartyAction_EAction {
	p := new(CMsgClientToGCPartyAction_EAction)
	*p = x
	return p
}

func (x CMsgClientToGCPartyAction_EAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCPartyAction_EAction) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[12].Descriptor()
}

func (CMsgClientToGCPartyAction_EAction) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[12]
}

func (x CMsgClientToGCPartyAction_EAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCPartyAction_EAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCPartyAction_EAction(num)
	return nil
}

// Deprecated: Use CMsgClientToGCPartyAction_EAction.Descriptor instead.
func (CMsgClientToGCPartyAction_EAction) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{29, 0}
}

type CMsgClientToGCPartyActionResponse_EResponse int32

const (
	CMsgClientToGCPartyActionResponse_k_eInternalError          CMsgClientToGCPartyActionResponse_EResponse = 0
	CMsgClientToGCPartyActionResponse_k_eSuccess                CMsgClientToGCPartyActionResponse_EResponse = 1
	CMsgClientToGCPartyActionResponse_k_eInvalidPartyID         CMsgClientToGCPartyActionResponse_EResponse = 2
	CMsgClientToGCPartyActionResponse_k_eInvalidPermissions     CMsgClientToGCPartyActionResponse_EResponse = 3
	CMsgClientToGCPartyActionResponse_k_eInvalidTarget          CMsgClientToGCPartyActionResponse_EResponse = 4
	CMsgClientToGCPartyActionResponse_k_eInvalidValue           CMsgClientToGCPartyActionResponse_EResponse = 5
	CMsgClientToGCPartyActionResponse_k_eInMatchMaking          CMsgClientToGCPartyActionResponse_EResponse = 6
	CMsgClientToGCPartyActionResponse_k_eInMatch                CMsgClientToGCPartyActionResponse_EResponse = 7
	CMsgClientToGCPartyActionResponse_k_eDisabled               CMsgClientToGCPartyActionResponse_EResponse = 8
	CMsgClientToGCPartyActionResponse_k_eTooBusy                CMsgClientToGCPartyActionResponse_EResponse = 9
	CMsgClientToGCPartyActionResponse_k_eRateLimited            CMsgClientToGCPartyActionResponse_EResponse = 10
	CMsgClientToGCPartyActionResponse_k_eCannotChangeWhileReady CMsgClientToGCPartyActionResponse_EResponse = 12
)

// Enum value maps for CMsgClientToGCPartyActionResponse_EResponse.
var (
	CMsgClientToGCPartyActionResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eInvalidPartyID",
		3:  "k_eInvalidPermissions",
		4:  "k_eInvalidTarget",
		5:  "k_eInvalidValue",
		6:  "k_eInMatchMaking",
		7:  "k_eInMatch",
		8:  "k_eDisabled",
		9:  "k_eTooBusy",
		10: "k_eRateLimited",
		12: "k_eCannotChangeWhileReady",
	}
	CMsgClientToGCPartyActionResponse_EResponse_value = map[string]int32{
		"k_eInternalError":          0,
		"k_eSuccess":                1,
		"k_eInvalidPartyID":         2,
		"k_eInvalidPermissions":     3,
		"k_eInvalidTarget":          4,
		"k_eInvalidValue":           5,
		"k_eInMatchMaking":          6,
		"k_eInMatch":                7,
		"k_eDisabled":               8,
		"k_eTooBusy":                9,
		"k_eRateLimited":            10,
		"k_eCannotChangeWhileReady": 12,
	}
)

func (x CMsgClientToGCPartyActionResponse_EResponse) Enum() *CMsgClientToGCPartyActionResponse_EResponse {
	p := new(CMsgClientToGCPartyActionResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCPartyActionResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCPartyActionResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[13].Descriptor()
}

func (CMsgClientToGCPartyActionResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[13]
}

func (x CMsgClientToGCPartyActionResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCPartyActionResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCPartyActionResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCPartyActionResponse_EResponse.Descriptor instead.
func (CMsgClientToGCPartyActionResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{30, 0}
}

type CMsgClientToGCPartySetModeResponse_EResponse int32

const (
	CMsgClientToGCPartySetModeResponse_k_eInternalError          CMsgClientToGCPartySetModeResponse_EResponse = 0
	CMsgClientToGCPartySetModeResponse_k_eSuccess                CMsgClientToGCPartySetModeResponse_EResponse = 1
	CMsgClientToGCPartySetModeResponse_k_eInvalidPartyID         CMsgClientToGCPartySetModeResponse_EResponse = 2
	CMsgClientToGCPartySetModeResponse_k_eInvalidPermissions     CMsgClientToGCPartySetModeResponse_EResponse = 3
	CMsgClientToGCPartySetModeResponse_k_ePlayerPermanentBanned  CMsgClientToGCPartySetModeResponse_EResponse = 4
	CMsgClientToGCPartySetModeResponse_k_eInvalidValue           CMsgClientToGCPartySetModeResponse_EResponse = 5
	CMsgClientToGCPartySetModeResponse_k_eInMatchMaking          CMsgClientToGCPartySetModeResponse_EResponse = 6
	CMsgClientToGCPartySetModeResponse_k_eInMatch                CMsgClientToGCPartySetModeResponse_EResponse = 7
	CMsgClientToGCPartySetModeResponse_k_eDisabled               CMsgClientToGCPartySetModeResponse_EResponse = 8
	CMsgClientToGCPartySetModeResponse_k_eTooBusy                CMsgClientToGCPartySetModeResponse_EResponse = 9
	CMsgClientToGCPartySetModeResponse_k_eRateLimited            CMsgClientToGCPartySetModeResponse_EResponse = 10
	CMsgClientToGCPartySetModeResponse_k_eAlreadyDrafting        CMsgClientToGCPartySetModeResponse_EResponse = 11
	CMsgClientToGCPartySetModeResponse_k_eCannotChangeWhileReady CMsgClientToGCPartySetModeResponse_EResponse = 12
	CMsgClientToGCPartySetModeResponse_k_eTooFewPlayers          CMsgClientToGCPartySetModeResponse_EResponse = 13
	CMsgClientToGCPartySetModeResponse_k_eTooManyPlayers         CMsgClientToGCPartySetModeResponse_EResponse = 14
	CMsgClientToGCPartySetModeResponse_k_ePlayerBanned           CMsgClientToGCPartySetModeResponse_EResponse = 15
	CMsgClientToGCPartySetModeResponse_k_eTooManyHighMMR         CMsgClientToGCPartySetModeResponse_EResponse = 16
)

// Enum value maps for CMsgClientToGCPartySetModeResponse_EResponse.
var (
	CMsgClientToGCPartySetModeResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eInvalidPartyID",
		3:  "k_eInvalidPermissions",
		4:  "k_ePlayerPermanentBanned",
		5:  "k_eInvalidValue",
		6:  "k_eInMatchMaking",
		7:  "k_eInMatch",
		8:  "k_eDisabled",
		9:  "k_eTooBusy",
		10: "k_eRateLimited",
		11: "k_eAlreadyDrafting",
		12: "k_eCannotChangeWhileReady",
		13: "k_eTooFewPlayers",
		14: "k_eTooManyPlayers",
		15: "k_ePlayerBanned",
		16: "k_eTooManyHighMMR",
	}
	CMsgClientToGCPartySetModeResponse_EResponse_value = map[string]int32{
		"k_eInternalError":          0,
		"k_eSuccess":                1,
		"k_eInvalidPartyID":         2,
		"k_eInvalidPermissions":     3,
		"k_ePlayerPermanentBanned":  4,
		"k_eInvalidValue":           5,
		"k_eInMatchMaking":          6,
		"k_eInMatch":                7,
		"k_eDisabled":               8,
		"k_eTooBusy":                9,
		"k_eRateLimited":            10,
		"k_eAlreadyDrafting":        11,
		"k_eCannotChangeWhileReady": 12,
		"k_eTooFewPlayers":          13,
		"k_eTooManyPlayers":         14,
		"k_ePlayerBanned":           15,
		"k_eTooManyHighMMR":         16,
	}
)

func (x CMsgClientToGCPartySetModeResponse_EResponse) Enum() *CMsgClientToGCPartySetModeResponse_EResponse {
	p := new(CMsgClientToGCPartySetModeResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCPartySetModeResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCPartySetModeResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[14].Descriptor()
}

func (CMsgClientToGCPartySetModeResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[14]
}

func (x CMsgClientToGCPartySetModeResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCPartySetModeResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCPartySetModeResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCPartySetModeResponse_EResponse.Descriptor instead.
func (CMsgClientToGCPartySetModeResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{32, 0}
}

type CMsgClientToGCPartyStartMatchResponse_EResponse int32

const (
	CMsgClientToGCPartyStartMatchResponse_k_eInternalError               CMsgClientToGCPartyStartMatchResponse_EResponse = 0
	CMsgClientToGCPartyStartMatchResponse_k_eSuccess                     CMsgClientToGCPartyStartMatchResponse_EResponse = 1
	CMsgClientToGCPartyStartMatchResponse_k_eDisabled                    CMsgClientToGCPartyStartMatchResponse_EResponse = 2
	CMsgClientToGCPartyStartMatchResponse_k_eInvalidPartyID              CMsgClientToGCPartyStartMatchResponse_EResponse = 3
	CMsgClientToGCPartyStartMatchResponse_k_eInvalidPermissions          CMsgClientToGCPartyStartMatchResponse_EResponse = 4
	CMsgClientToGCPartyStartMatchResponse_k_eTooBusy                     CMsgClientToGCPartyStartMatchResponse_EResponse = 5
	CMsgClientToGCPartyStartMatchResponse_k_eInMatchmaking               CMsgClientToGCPartyStartMatchResponse_EResponse = 6
	CMsgClientToGCPartyStartMatchResponse_k_eInMatch                     CMsgClientToGCPartyStartMatchResponse_EResponse = 7
	CMsgClientToGCPartyStartMatchResponse_k_eInvalidVersion              CMsgClientToGCPartyStartMatchResponse_EResponse = 10
	CMsgClientToGCPartyStartMatchResponse_k_ePlayersNotReady             CMsgClientToGCPartyStartMatchResponse_EResponse = 11
	CMsgClientToGCPartyStartMatchResponse_k_eCannotSelectRegion          CMsgClientToGCPartyStartMatchResponse_EResponse = 12
	CMsgClientToGCPartyStartMatchResponse_k_eNotAllPlayersAvailable      CMsgClientToGCPartyStartMatchResponse_EResponse = 13
	CMsgClientToGCPartyStartMatchResponse_k_eTooManyPlayersForMM         CMsgClientToGCPartyStartMatchResponse_EResponse = 14
	CMsgClientToGCPartyStartMatchResponse_k_eTooManyPlayersForPrivate    CMsgClientToGCPartyStartMatchResponse_EResponse = 15
	CMsgClientToGCPartyStartMatchResponse_k_eTooManySpectatorsForMM      CMsgClientToGCPartyStartMatchResponse_EResponse = 16
	CMsgClientToGCPartyStartMatchResponse_k_eTooManySpectatorsForPrivate CMsgClientToGCPartyStartMatchResponse_EResponse = 17
	CMsgClientToGCPartyStartMatchResponse_k_eTooFewPlayersForMM          CMsgClientToGCPartyStartMatchResponse_EResponse = 18
	CMsgClientToGCPartyStartMatchResponse_k_eTooFewPlayersForPrivate     CMsgClientToGCPartyStartMatchResponse_EResponse = 19
	CMsgClientToGCPartyStartMatchResponse_k_eMismatchedVersions          CMsgClientToGCPartyStartMatchResponse_EResponse = 20
	CMsgClientToGCPartyStartMatchResponse_k_eInvalidPartyMatchMode       CMsgClientToGCPartyStartMatchResponse_EResponse = 21
	CMsgClientToGCPartyStartMatchResponse_k_ePlayerBannedFromMode        CMsgClientToGCPartyStartMatchResponse_EResponse = 22
	CMsgClientToGCPartyStartMatchResponse_k_eTooManyPlayersOnTeam        CMsgClientToGCPartyStartMatchResponse_EResponse = 23
	CMsgClientToGCPartyStartMatchResponse_k_eInvalidTeam                 CMsgClientToGCPartyStartMatchResponse_EResponse = 24
	CMsgClientToGCPartyStartMatchResponse_k_eInvalidHeroLineup           CMsgClientToGCPartyStartMatchResponse_EResponse = 25
	CMsgClientToGCPartyStartMatchResponse_k_eInvalidGroupHeroLineup      CMsgClientToGCPartyStartMatchResponse_EResponse = 26
)

// Enum value maps for CMsgClientToGCPartyStartMatchResponse_EResponse.
var (
	CMsgClientToGCPartyStartMatchResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eDisabled",
		3:  "k_eInvalidPartyID",
		4:  "k_eInvalidPermissions",
		5:  "k_eTooBusy",
		6:  "k_eInMatchmaking",
		7:  "k_eInMatch",
		10: "k_eInvalidVersion",
		11: "k_ePlayersNotReady",
		12: "k_eCannotSelectRegion",
		13: "k_eNotAllPlayersAvailable",
		14: "k_eTooManyPlayersForMM",
		15: "k_eTooManyPlayersForPrivate",
		16: "k_eTooManySpectatorsForMM",
		17: "k_eTooManySpectatorsForPrivate",
		18: "k_eTooFewPlayersForMM",
		19: "k_eTooFewPlayersForPrivate",
		20: "k_eMismatchedVersions",
		21: "k_eInvalidPartyMatchMode",
		22: "k_ePlayerBannedFromMode",
		23: "k_eTooManyPlayersOnTeam",
		24: "k_eInvalidTeam",
		25: "k_eInvalidHeroLineup",
		26: "k_eInvalidGroupHeroLineup",
	}
	CMsgClientToGCPartyStartMatchResponse_EResponse_value = map[string]int32{
		"k_eInternalError":               0,
		"k_eSuccess":                     1,
		"k_eDisabled":                    2,
		"k_eInvalidPartyID":              3,
		"k_eInvalidPermissions":          4,
		"k_eTooBusy":                     5,
		"k_eInMatchmaking":               6,
		"k_eInMatch":                     7,
		"k_eInvalidVersion":              10,
		"k_ePlayersNotReady":             11,
		"k_eCannotSelectRegion":          12,
		"k_eNotAllPlayersAvailable":      13,
		"k_eTooManyPlayersForMM":         14,
		"k_eTooManyPlayersForPrivate":    15,
		"k_eTooManySpectatorsForMM":      16,
		"k_eTooManySpectatorsForPrivate": 17,
		"k_eTooFewPlayersForMM":          18,
		"k_eTooFewPlayersForPrivate":     19,
		"k_eMismatchedVersions":          20,
		"k_eInvalidPartyMatchMode":       21,
		"k_ePlayerBannedFromMode":        22,
		"k_eTooManyPlayersOnTeam":        23,
		"k_eInvalidTeam":                 24,
		"k_eInvalidHeroLineup":           25,
		"k_eInvalidGroupHeroLineup":      26,
	}
)

func (x CMsgClientToGCPartyStartMatchResponse_EResponse) Enum() *CMsgClientToGCPartyStartMatchResponse_EResponse {
	p := new(CMsgClientToGCPartyStartMatchResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCPartyStartMatchResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCPartyStartMatchResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[15].Descriptor()
}

func (CMsgClientToGCPartyStartMatchResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[15]
}

func (x CMsgClientToGCPartyStartMatchResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCPartyStartMatchResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCPartyStartMatchResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCPartyStartMatchResponse_EResponse.Descriptor instead.
func (CMsgClientToGCPartyStartMatchResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{34, 0}
}

type CMsgClientToGCPartyInviteUserResponse_EResponse int32

const (
	CMsgClientToGCPartyInviteUserResponse_k_eInternalError        CMsgClientToGCPartyInviteUserResponse_EResponse = 0
	CMsgClientToGCPartyInviteUserResponse_k_eSuccess              CMsgClientToGCPartyInviteUserResponse_EResponse = 1
	CMsgClientToGCPartyInviteUserResponse_k_eAlreadyInvited       CMsgClientToGCPartyInviteUserResponse_EResponse = 2
	CMsgClientToGCPartyInviteUserResponse_k_eInvalidPermissions   CMsgClientToGCPartyInviteUserResponse_EResponse = 3
	CMsgClientToGCPartyInviteUserResponse_k_eInvalidPartyID       CMsgClientToGCPartyInviteUserResponse_EResponse = 4
	CMsgClientToGCPartyInviteUserResponse_k_eDisabled             CMsgClientToGCPartyInviteUserResponse_EResponse = 5
	CMsgClientToGCPartyInviteUserResponse_k_eTooManyInvites       CMsgClientToGCPartyInviteUserResponse_EResponse = 6
	CMsgClientToGCPartyInviteUserResponse_k_eNotFriends           CMsgClientToGCPartyInviteUserResponse_EResponse = 7
	CMsgClientToGCPartyInviteUserResponse_k_eTooBusy              CMsgClientToGCPartyInviteUserResponse_EResponse = 8
	CMsgClientToGCPartyInviteUserResponse_k_eRateLimited          CMsgClientToGCPartyInviteUserResponse_EResponse = 9
	CMsgClientToGCPartyInviteUserResponse_k_eInvalidPartyMode     CMsgClientToGCPartyInviteUserResponse_EResponse = 10
	CMsgClientToGCPartyInviteUserResponse_k_ePlayerDoesntHaveGame CMsgClientToGCPartyInviteUserResponse_EResponse = 11
)

// Enum value maps for CMsgClientToGCPartyInviteUserResponse_EResponse.
var (
	CMsgClientToGCPartyInviteUserResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eAlreadyInvited",
		3:  "k_eInvalidPermissions",
		4:  "k_eInvalidPartyID",
		5:  "k_eDisabled",
		6:  "k_eTooManyInvites",
		7:  "k_eNotFriends",
		8:  "k_eTooBusy",
		9:  "k_eRateLimited",
		10: "k_eInvalidPartyMode",
		11: "k_ePlayerDoesntHaveGame",
	}
	CMsgClientToGCPartyInviteUserResponse_EResponse_value = map[string]int32{
		"k_eInternalError":        0,
		"k_eSuccess":              1,
		"k_eAlreadyInvited":       2,
		"k_eInvalidPermissions":   3,
		"k_eInvalidPartyID":       4,
		"k_eDisabled":             5,
		"k_eTooManyInvites":       6,
		"k_eNotFriends":           7,
		"k_eTooBusy":              8,
		"k_eRateLimited":          9,
		"k_eInvalidPartyMode":     10,
		"k_ePlayerDoesntHaveGame": 11,
	}
)

func (x CMsgClientToGCPartyInviteUserResponse_EResponse) Enum() *CMsgClientToGCPartyInviteUserResponse_EResponse {
	p := new(CMsgClientToGCPartyInviteUserResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCPartyInviteUserResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCPartyInviteUserResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[16].Descriptor()
}

func (CMsgClientToGCPartyInviteUserResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[16]
}

func (x CMsgClientToGCPartyInviteUserResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCPartyInviteUserResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCPartyInviteUserResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCPartyInviteUserResponse_EResponse.Descriptor instead.
func (CMsgClientToGCPartyInviteUserResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{36, 0}
}

type CMsgGCToClientPartyEvent_EEvent int32

const (
	CMsgGCToClientPartyEvent_k_ePlayerKicked                      CMsgGCToClientPartyEvent_EEvent = 1
	CMsgGCToClientPartyEvent_k_eJoinedParty                       CMsgGCToClientPartyEvent_EEvent = 3
	CMsgGCToClientPartyEvent_k_eMatchCompleted                    CMsgGCToClientPartyEvent_EEvent = 4
	CMsgGCToClientPartyEvent_k_eMatchMakingStopped_User           CMsgGCToClientPartyEvent_EEvent = 5
	CMsgGCToClientPartyEvent_k_eMatchMakingStopped_Version        CMsgGCToClientPartyEvent_EEvent = 6
	CMsgGCToClientPartyEvent_k_eMatchMakingStopped_NoServerRegion CMsgGCToClientPartyEvent_EEvent = 7
	CMsgGCToClientPartyEvent_k_eLeftParty                         CMsgGCToClientPartyEvent_EEvent = 8
	CMsgGCToClientPartyEvent_k_eDeclinedInvite                    CMsgGCToClientPartyEvent_EEvent = 9
	CMsgGCToClientPartyEvent_k_eMatchMakingStopped_FailedOther    CMsgGCToClientPartyEvent_EEvent = 10
	CMsgGCToClientPartyEvent_k_eDraftEnded_User                   CMsgGCToClientPartyEvent_EEvent = 11
	CMsgGCToClientPartyEvent_k_eStartDraftMMFailed                CMsgGCToClientPartyEvent_EEvent = 12
	CMsgGCToClientPartyEvent_k_eMatchMakingStopped_Cancelled      CMsgGCToClientPartyEvent_EEvent = 13
)

// Enum value maps for CMsgGCToClientPartyEvent_EEvent.
var (
	CMsgGCToClientPartyEvent_EEvent_name = map[int32]string{
		1:  "k_ePlayerKicked",
		3:  "k_eJoinedParty",
		4:  "k_eMatchCompleted",
		5:  "k_eMatchMakingStopped_User",
		6:  "k_eMatchMakingStopped_Version",
		7:  "k_eMatchMakingStopped_NoServerRegion",
		8:  "k_eLeftParty",
		9:  "k_eDeclinedInvite",
		10: "k_eMatchMakingStopped_FailedOther",
		11: "k_eDraftEnded_User",
		12: "k_eStartDraftMMFailed",
		13: "k_eMatchMakingStopped_Cancelled",
	}
	CMsgGCToClientPartyEvent_EEvent_value = map[string]int32{
		"k_ePlayerKicked":                      1,
		"k_eJoinedParty":                       3,
		"k_eMatchCompleted":                    4,
		"k_eMatchMakingStopped_User":           5,
		"k_eMatchMakingStopped_Version":        6,
		"k_eMatchMakingStopped_NoServerRegion": 7,
		"k_eLeftParty":                         8,
		"k_eDeclinedInvite":                    9,
		"k_eMatchMakingStopped_FailedOther":    10,
		"k_eDraftEnded_User":                   11,
		"k_eStartDraftMMFailed":                12,
		"k_eMatchMakingStopped_Cancelled":      13,
	}
)

func (x CMsgGCToClientPartyEvent_EEvent) Enum() *CMsgGCToClientPartyEvent_EEvent {
	p := new(CMsgGCToClientPartyEvent_EEvent)
	*p = x
	return p
}

func (x CMsgGCToClientPartyEvent_EEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgGCToClientPartyEvent_EEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[17].Descriptor()
}

func (CMsgGCToClientPartyEvent_EEvent) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[17]
}

func (x CMsgGCToClientPartyEvent_EEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgGCToClientPartyEvent_EEvent) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgGCToClientPartyEvent_EEvent(num)
	return nil
}

// Deprecated: Use CMsgGCToClientPartyEvent_EEvent.Descriptor instead.
func (CMsgGCToClientPartyEvent_EEvent) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{37, 0}
}

type CMsgClientToGCPartyUpdateRosterResponse_EResponse int32

const (
	CMsgClientToGCPartyUpdateRosterResponse_k_eInternalError      CMsgClientToGCPartyUpdateRosterResponse_EResponse = 0
	CMsgClientToGCPartyUpdateRosterResponse_k_eSuccess            CMsgClientToGCPartyUpdateRosterResponse_EResponse = 1
	CMsgClientToGCPartyUpdateRosterResponse_k_eInvalidPermissions CMsgClientToGCPartyUpdateRosterResponse_EResponse = 2
	CMsgClientToGCPartyUpdateRosterResponse_k_eDisabled           CMsgClientToGCPartyUpdateRosterResponse_EResponse = 3
	CMsgClientToGCPartyUpdateRosterResponse_k_eTooBusy            CMsgClientToGCPartyUpdateRosterResponse_EResponse = 4
	CMsgClientToGCPartyUpdateRosterResponse_k_eRateLimited        CMsgClientToGCPartyUpdateRosterResponse_EResponse = 5
	CMsgClientToGCPartyUpdateRosterResponse_k_eInvalidRoster      CMsgClientToGCPartyUpdateRosterResponse_EResponse = 6
	CMsgClientToGCPartyUpdateRosterResponse_k_eMatchForming       CMsgClientToGCPartyUpdateRosterResponse_EResponse = 7
	CMsgClientToGCPartyUpdateRosterResponse_k_eInvalidGroupRoster CMsgClientToGCPartyUpdateRosterResponse_EResponse = 8
	CMsgClientToGCPartyUpdateRosterResponse_k_eHeroesNotUnlocked  CMsgClientToGCPartyUpdateRosterResponse_EResponse = 9
)

// Enum value maps for CMsgClientToGCPartyUpdateRosterResponse_EResponse.
var (
	CMsgClientToGCPartyUpdateRosterResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eInvalidPermissions",
		3: "k_eDisabled",
		4: "k_eTooBusy",
		5: "k_eRateLimited",
		6: "k_eInvalidRoster",
		7: "k_eMatchForming",
		8: "k_eInvalidGroupRoster",
		9: "k_eHeroesNotUnlocked",
	}
	CMsgClientToGCPartyUpdateRosterResponse_EResponse_value = map[string]int32{
		"k_eInternalError":      0,
		"k_eSuccess":            1,
		"k_eInvalidPermissions": 2,
		"k_eDisabled":           3,
		"k_eTooBusy":            4,
		"k_eRateLimited":        5,
		"k_eInvalidRoster":      6,
		"k_eMatchForming":       7,
		"k_eInvalidGroupRoster": 8,
		"k_eHeroesNotUnlocked":  9,
	}
)

func (x CMsgClientToGCPartyUpdateRosterResponse_EResponse) Enum() *CMsgClientToGCPartyUpdateRosterResponse_EResponse {
	p := new(CMsgClientToGCPartyUpdateRosterResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCPartyUpdateRosterResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCPartyUpdateRosterResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[18].Descriptor()
}

func (CMsgClientToGCPartyUpdateRosterResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[18]
}

func (x CMsgClientToGCPartyUpdateRosterResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCPartyUpdateRosterResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCPartyUpdateRosterResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCPartyUpdateRosterResponse_EResponse.Descriptor instead.
func (CMsgClientToGCPartyUpdateRosterResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{42, 0}
}

type CMsgClientToGCPartySetReadyStateResponse_EResponse int32

const (
	CMsgClientToGCPartySetReadyStateResponse_k_eInternalError      CMsgClientToGCPartySetReadyStateResponse_EResponse = 0
	CMsgClientToGCPartySetReadyStateResponse_k_eSuccess            CMsgClientToGCPartySetReadyStateResponse_EResponse = 1
	CMsgClientToGCPartySetReadyStateResponse_k_eInvalidPermissions CMsgClientToGCPartySetReadyStateResponse_EResponse = 2
	CMsgClientToGCPartySetReadyStateResponse_k_eDisabled           CMsgClientToGCPartySetReadyStateResponse_EResponse = 3
	CMsgClientToGCPartySetReadyStateResponse_k_eTooBusy            CMsgClientToGCPartySetReadyStateResponse_EResponse = 4
	CMsgClientToGCPartySetReadyStateResponse_k_eRateLimited        CMsgClientToGCPartySetReadyStateResponse_EResponse = 5
	CMsgClientToGCPartySetReadyStateResponse_k_eInvalidRoster      CMsgClientToGCPartySetReadyStateResponse_EResponse = 6
	CMsgClientToGCPartySetReadyStateResponse_k_eMatchForming       CMsgClientToGCPartySetReadyStateResponse_EResponse = 7
	CMsgClientToGCPartySetReadyStateResponse_k_eInvalidGroupRoster CMsgClientToGCPartySetReadyStateResponse_EResponse = 8
	CMsgClientToGCPartySetReadyStateResponse_k_eInMatch            CMsgClientToGCPartySetReadyStateResponse_EResponse = 9
	CMsgClientToGCPartySetReadyStateResponse_k_eHeroesNotUnlocked  CMsgClientToGCPartySetReadyStateResponse_EResponse = 10
	CMsgClientToGCPartySetReadyStateResponse_k_eModeLocked         CMsgClientToGCPartySetReadyStateResponse_EResponse = 11
	CMsgClientToGCPartySetReadyStateResponse_k_eModeBanned         CMsgClientToGCPartySetReadyStateResponse_EResponse = 12
)

// Enum value maps for CMsgClientToGCPartySetReadyStateResponse_EResponse.
var (
	CMsgClientToGCPartySetReadyStateResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eInvalidPermissions",
		3:  "k_eDisabled",
		4:  "k_eTooBusy",
		5:  "k_eRateLimited",
		6:  "k_eInvalidRoster",
		7:  "k_eMatchForming",
		8:  "k_eInvalidGroupRoster",
		9:  "k_eInMatch",
		10: "k_eHeroesNotUnlocked",
		11: "k_eModeLocked",
		12: "k_eModeBanned",
	}
	CMsgClientToGCPartySetReadyStateResponse_EResponse_value = map[string]int32{
		"k_eInternalError":      0,
		"k_eSuccess":            1,
		"k_eInvalidPermissions": 2,
		"k_eDisabled":           3,
		"k_eTooBusy":            4,
		"k_eRateLimited":        5,
		"k_eInvalidRoster":      6,
		"k_eMatchForming":       7,
		"k_eInvalidGroupRoster": 8,
		"k_eInMatch":            9,
		"k_eHeroesNotUnlocked":  10,
		"k_eModeLocked":         11,
		"k_eModeBanned":         12,
	}
)

func (x CMsgClientToGCPartySetReadyStateResponse_EResponse) Enum() *CMsgClientToGCPartySetReadyStateResponse_EResponse {
	p := new(CMsgClientToGCPartySetReadyStateResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCPartySetReadyStateResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCPartySetReadyStateResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[19].Descriptor()
}

func (CMsgClientToGCPartySetReadyStateResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[19]
}

func (x CMsgClientToGCPartySetReadyStateResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCPartySetReadyStateResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCPartySetReadyStateResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCPartySetReadyStateResponse_EResponse.Descriptor instead.
func (CMsgClientToGCPartySetReadyStateResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{44, 0}
}

type CMsgClientToGCGetMatchHistoryResponse_EResult int32

const (
	CMsgClientToGCGetMatchHistoryResponse_k_eResult_InternalError       CMsgClientToGCGetMatchHistoryResponse_EResult = 0
	CMsgClientToGCGetMatchHistoryResponse_k_eResult_Success             CMsgClientToGCGetMatchHistoryResponse_EResult = 1
	CMsgClientToGCGetMatchHistoryResponse_k_eResult_InvalidPermission   CMsgClientToGCGetMatchHistoryResponse_EResult = 2
	CMsgClientToGCGetMatchHistoryResponse_k_eResult_TemporarilyDisabled CMsgClientToGCGetMatchHistoryResponse_EResult = 3
	CMsgClientToGCGetMatchHistoryResponse_k_eResult_TooBusy             CMsgClientToGCGetMatchHistoryResponse_EResult = 4
	CMsgClientToGCGetMatchHistoryResponse_k_eResult_RateLimited         CMsgClientToGCGetMatchHistoryResponse_EResult = 5
)

// Enum value maps for CMsgClientToGCGetMatchHistoryResponse_EResult.
var (
	CMsgClientToGCGetMatchHistoryResponse_EResult_name = map[int32]string{
		0: "k_eResult_InternalError",
		1: "k_eResult_Success",
		2: "k_eResult_InvalidPermission",
		3: "k_eResult_TemporarilyDisabled",
		4: "k_eResult_TooBusy",
		5: "k_eResult_RateLimited",
	}
	CMsgClientToGCGetMatchHistoryResponse_EResult_value = map[string]int32{
		"k_eResult_InternalError":       0,
		"k_eResult_Success":             1,
		"k_eResult_InvalidPermission":   2,
		"k_eResult_TemporarilyDisabled": 3,
		"k_eResult_TooBusy":             4,
		"k_eResult_RateLimited":         5,
	}
)

func (x CMsgClientToGCGetMatchHistoryResponse_EResult) Enum() *CMsgClientToGCGetMatchHistoryResponse_EResult {
	p := new(CMsgClientToGCGetMatchHistoryResponse_EResult)
	*p = x
	return p
}

func (x CMsgClientToGCGetMatchHistoryResponse_EResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetMatchHistoryResponse_EResult) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[20].Descriptor()
}

func (CMsgClientToGCGetMatchHistoryResponse_EResult) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[20]
}

func (x CMsgClientToGCGetMatchHistoryResponse_EResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetMatchHistoryResponse_EResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetMatchHistoryResponse_EResult(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetMatchHistoryResponse_EResult.Descriptor instead.
func (CMsgClientToGCGetMatchHistoryResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{47, 0}
}

type CMsgClientToGCSpectateUserResponse_EResponse int32

const (
	CMsgClientToGCSpectateUserResponse_k_eInternalError          CMsgClientToGCSpectateUserResponse_EResponse = 0
	CMsgClientToGCSpectateUserResponse_k_eSuccess                CMsgClientToGCSpectateUserResponse_EResponse = 1
	CMsgClientToGCSpectateUserResponse_k_eDisabled               CMsgClientToGCSpectateUserResponse_EResponse = 2
	CMsgClientToGCSpectateUserResponse_k_eTooBusy                CMsgClientToGCSpectateUserResponse_EResponse = 3
	CMsgClientToGCSpectateUserResponse_k_eRateLimited            CMsgClientToGCSpectateUserResponse_EResponse = 4
	CMsgClientToGCSpectateUserResponse_k_eNotInGame              CMsgClientToGCSpectateUserResponse_EResponse = 5
	CMsgClientToGCSpectateUserResponse_k_eDisabledForGame        CMsgClientToGCSpectateUserResponse_EResponse = 6
	CMsgClientToGCSpectateUserResponse_k_eServerFull             CMsgClientToGCSpectateUserResponse_EResponse = 7
	CMsgClientToGCSpectateUserResponse_k_eNotFriends             CMsgClientToGCSpectateUserResponse_EResponse = 8
	CMsgClientToGCSpectateUserResponse_k_eRegionInfoNotProvided  CMsgClientToGCSpectateUserResponse_EResponse = 9
	CMsgClientToGCSpectateUserResponse_k_eDurationControlBlocked CMsgClientToGCSpectateUserResponse_EResponse = 10
	CMsgClientToGCSpectateUserResponse_k_eInvalidClientVersion   CMsgClientToGCSpectateUserResponse_EResponse = 11
	CMsgClientToGCSpectateUserResponse_k_eInvalidRegion          CMsgClientToGCSpectateUserResponse_EResponse = 12
)

// Enum value maps for CMsgClientToGCSpectateUserResponse_EResponse.
var (
	CMsgClientToGCSpectateUserResponse_EResponse_name = map[int32]string{
		0:  "k_eInternalError",
		1:  "k_eSuccess",
		2:  "k_eDisabled",
		3:  "k_eTooBusy",
		4:  "k_eRateLimited",
		5:  "k_eNotInGame",
		6:  "k_eDisabledForGame",
		7:  "k_eServerFull",
		8:  "k_eNotFriends",
		9:  "k_eRegionInfoNotProvided",
		10: "k_eDurationControlBlocked",
		11: "k_eInvalidClientVersion",
		12: "k_eInvalidRegion",
	}
	CMsgClientToGCSpectateUserResponse_EResponse_value = map[string]int32{
		"k_eInternalError":          0,
		"k_eSuccess":                1,
		"k_eDisabled":               2,
		"k_eTooBusy":                3,
		"k_eRateLimited":            4,
		"k_eNotInGame":              5,
		"k_eDisabledForGame":        6,
		"k_eServerFull":             7,
		"k_eNotFriends":             8,
		"k_eRegionInfoNotProvided":  9,
		"k_eDurationControlBlocked": 10,
		"k_eInvalidClientVersion":   11,
		"k_eInvalidRegion":          12,
	}
)

func (x CMsgClientToGCSpectateUserResponse_EResponse) Enum() *CMsgClientToGCSpectateUserResponse_EResponse {
	p := new(CMsgClientToGCSpectateUserResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCSpectateUserResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCSpectateUserResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[21].Descriptor()
}

func (CMsgClientToGCSpectateUserResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[21]
}

func (x CMsgClientToGCSpectateUserResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCSpectateUserResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCSpectateUserResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCSpectateUserResponse_EResponse.Descriptor instead.
func (CMsgClientToGCSpectateUserResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{49, 0}
}

type CMsgCitadelProfileCard_EStatID int32

const (
	CMsgCitadelProfileCard_k_eStat_Invalid     CMsgCitadelProfileCard_EStatID = 0
	CMsgCitadelProfileCard_k_eStat_Wins        CMsgCitadelProfileCard_EStatID = 1
	CMsgCitadelProfileCard_k_eStat_Kills       CMsgCitadelProfileCard_EStatID = 2
	CMsgCitadelProfileCard_k_eStat_GamesPlayed CMsgCitadelProfileCard_EStatID = 3
)

// Enum value maps for CMsgCitadelProfileCard_EStatID.
var (
	CMsgCitadelProfileCard_EStatID_name = map[int32]string{
		0: "k_eStat_Invalid",
		1: "k_eStat_Wins",
		2: "k_eStat_Kills",
		3: "k_eStat_GamesPlayed",
	}
	CMsgCitadelProfileCard_EStatID_value = map[string]int32{
		"k_eStat_Invalid":     0,
		"k_eStat_Wins":        1,
		"k_eStat_Kills":       2,
		"k_eStat_GamesPlayed": 3,
	}
)

func (x CMsgCitadelProfileCard_EStatID) Enum() *CMsgCitadelProfileCard_EStatID {
	p := new(CMsgCitadelProfileCard_EStatID)
	*p = x
	return p
}

func (x CMsgCitadelProfileCard_EStatID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgCitadelProfileCard_EStatID) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[22].Descriptor()
}

func (CMsgCitadelProfileCard_EStatID) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[22]
}

func (x CMsgCitadelProfileCard_EStatID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgCitadelProfileCard_EStatID) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgCitadelProfileCard_EStatID(num)
	return nil
}

// Deprecated: Use CMsgCitadelProfileCard_EStatID.Descriptor instead.
func (CMsgCitadelProfileCard_EStatID) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{53, 0}
}

type CMsgClientToGCUpdateRosterResponse_EResponse int32

const (
	CMsgClientToGCUpdateRosterResponse_k_eInternalError        CMsgClientToGCUpdateRosterResponse_EResponse = 0
	CMsgClientToGCUpdateRosterResponse_k_eSuccess              CMsgClientToGCUpdateRosterResponse_EResponse = 1
	CMsgClientToGCUpdateRosterResponse_k_eDisabled             CMsgClientToGCUpdateRosterResponse_EResponse = 2
	CMsgClientToGCUpdateRosterResponse_k_eTooBusy              CMsgClientToGCUpdateRosterResponse_EResponse = 3
	CMsgClientToGCUpdateRosterResponse_k_eRateLimited          CMsgClientToGCUpdateRosterResponse_EResponse = 4
	CMsgClientToGCUpdateRosterResponse_k_eMMBusy               CMsgClientToGCUpdateRosterResponse_EResponse = 5
	CMsgClientToGCUpdateRosterResponse_k_eInvalidHeroSelection CMsgClientToGCUpdateRosterResponse_EResponse = 6
	CMsgClientToGCUpdateRosterResponse_k_eHeroesNotUnlocked    CMsgClientToGCUpdateRosterResponse_EResponse = 7
)

// Enum value maps for CMsgClientToGCUpdateRosterResponse_EResponse.
var (
	CMsgClientToGCUpdateRosterResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eDisabled",
		3: "k_eTooBusy",
		4: "k_eRateLimited",
		5: "k_eMMBusy",
		6: "k_eInvalidHeroSelection",
		7: "k_eHeroesNotUnlocked",
	}
	CMsgClientToGCUpdateRosterResponse_EResponse_value = map[string]int32{
		"k_eInternalError":        0,
		"k_eSuccess":              1,
		"k_eDisabled":             2,
		"k_eTooBusy":              3,
		"k_eRateLimited":          4,
		"k_eMMBusy":               5,
		"k_eInvalidHeroSelection": 6,
		"k_eHeroesNotUnlocked":    7,
	}
)

func (x CMsgClientToGCUpdateRosterResponse_EResponse) Enum() *CMsgClientToGCUpdateRosterResponse_EResponse {
	p := new(CMsgClientToGCUpdateRosterResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCUpdateRosterResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCUpdateRosterResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[23].Descriptor()
}

func (CMsgClientToGCUpdateRosterResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[23]
}

func (x CMsgClientToGCUpdateRosterResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCUpdateRosterResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCUpdateRosterResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCUpdateRosterResponse_EResponse.Descriptor instead.
func (CMsgClientToGCUpdateRosterResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{55, 0}
}

type CMsgClientToGCGetAccountStatsResponse_EResult int32

const (
	CMsgClientToGCGetAccountStatsResponse_k_eInternalError      CMsgClientToGCGetAccountStatsResponse_EResult = 0
	CMsgClientToGCGetAccountStatsResponse_k_eSuccess            CMsgClientToGCGetAccountStatsResponse_EResult = 1
	CMsgClientToGCGetAccountStatsResponse_k_eDisabled           CMsgClientToGCGetAccountStatsResponse_EResult = 2
	CMsgClientToGCGetAccountStatsResponse_k_eTooBusy            CMsgClientToGCGetAccountStatsResponse_EResult = 3
	CMsgClientToGCGetAccountStatsResponse_k_eRateLimited        CMsgClientToGCGetAccountStatsResponse_EResult = 4
	CMsgClientToGCGetAccountStatsResponse_k_eInvalidPermissions CMsgClientToGCGetAccountStatsResponse_EResult = 5
)

// Enum value maps for CMsgClientToGCGetAccountStatsResponse_EResult.
var (
	CMsgClientToGCGetAccountStatsResponse_EResult_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eDisabled",
		3: "k_eTooBusy",
		4: "k_eRateLimited",
		5: "k_eInvalidPermissions",
	}
	CMsgClientToGCGetAccountStatsResponse_EResult_value = map[string]int32{
		"k_eInternalError":      0,
		"k_eSuccess":            1,
		"k_eDisabled":           2,
		"k_eTooBusy":            3,
		"k_eRateLimited":        4,
		"k_eInvalidPermissions": 5,
	}
)

func (x CMsgClientToGCGetAccountStatsResponse_EResult) Enum() *CMsgClientToGCGetAccountStatsResponse_EResult {
	p := new(CMsgClientToGCGetAccountStatsResponse_EResult)
	*p = x
	return p
}

func (x CMsgClientToGCGetAccountStatsResponse_EResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetAccountStatsResponse_EResult) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[24].Descriptor()
}

func (CMsgClientToGCGetAccountStatsResponse_EResult) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[24]
}

func (x CMsgClientToGCGetAccountStatsResponse_EResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetAccountStatsResponse_EResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetAccountStatsResponse_EResult(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetAccountStatsResponse_EResult.Descriptor instead.
func (CMsgClientToGCGetAccountStatsResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{57, 0}
}

type CMsgClientToGCGetMatchMetaDataResponse_EResult int32

const (
	CMsgClientToGCGetMatchMetaDataResponse_k_eResult_InternalError       CMsgClientToGCGetMatchMetaDataResponse_EResult = 0
	CMsgClientToGCGetMatchMetaDataResponse_k_eResult_Success             CMsgClientToGCGetMatchMetaDataResponse_EResult = 1
	CMsgClientToGCGetMatchMetaDataResponse_k_eResult_InvalidPermission   CMsgClientToGCGetMatchMetaDataResponse_EResult = 2
	CMsgClientToGCGetMatchMetaDataResponse_k_eResult_TemporarilyDisabled CMsgClientToGCGetMatchMetaDataResponse_EResult = 3
	CMsgClientToGCGetMatchMetaDataResponse_k_eResult_TooBusy             CMsgClientToGCGetMatchMetaDataResponse_EResult = 4
	CMsgClientToGCGetMatchMetaDataResponse_k_eResult_RateLimited         CMsgClientToGCGetMatchMetaDataResponse_EResult = 5
	CMsgClientToGCGetMatchMetaDataResponse_k_eResult_InvalidMatch        CMsgClientToGCGetMatchMetaDataResponse_EResult = 6
	CMsgClientToGCGetMatchMetaDataResponse_k_eResult_MatchInFlight       CMsgClientToGCGetMatchMetaDataResponse_EResult = 7
)

// Enum value maps for CMsgClientToGCGetMatchMetaDataResponse_EResult.
var (
	CMsgClientToGCGetMatchMetaDataResponse_EResult_name = map[int32]string{
		0: "k_eResult_InternalError",
		1: "k_eResult_Success",
		2: "k_eResult_InvalidPermission",
		3: "k_eResult_TemporarilyDisabled",
		4: "k_eResult_TooBusy",
		5: "k_eResult_RateLimited",
		6: "k_eResult_InvalidMatch",
		7: "k_eResult_MatchInFlight",
	}
	CMsgClientToGCGetMatchMetaDataResponse_EResult_value = map[string]int32{
		"k_eResult_InternalError":       0,
		"k_eResult_Success":             1,
		"k_eResult_InvalidPermission":   2,
		"k_eResult_TemporarilyDisabled": 3,
		"k_eResult_TooBusy":             4,
		"k_eResult_RateLimited":         5,
		"k_eResult_InvalidMatch":        6,
		"k_eResult_MatchInFlight":       7,
	}
)

func (x CMsgClientToGCGetMatchMetaDataResponse_EResult) Enum() *CMsgClientToGCGetMatchMetaDataResponse_EResult {
	p := new(CMsgClientToGCGetMatchMetaDataResponse_EResult)
	*p = x
	return p
}

func (x CMsgClientToGCGetMatchMetaDataResponse_EResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetMatchMetaDataResponse_EResult) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[25].Descriptor()
}

func (CMsgClientToGCGetMatchMetaDataResponse_EResult) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[25]
}

func (x CMsgClientToGCGetMatchMetaDataResponse_EResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetMatchMetaDataResponse_EResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetMatchMetaDataResponse_EResult(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetMatchMetaDataResponse_EResult.Descriptor instead.
func (CMsgClientToGCGetMatchMetaDataResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{59, 0}
}

type CMsgClientToGCModifyDevAnnouncements_EOperation int32

const (
	CMsgClientToGCModifyDevAnnouncements_k_eCreate CMsgClientToGCModifyDevAnnouncements_EOperation = 0
	CMsgClientToGCModifyDevAnnouncements_k_eUpdate CMsgClientToGCModifyDevAnnouncements_EOperation = 1
	CMsgClientToGCModifyDevAnnouncements_k_eDelete CMsgClientToGCModifyDevAnnouncements_EOperation = 2
)

// Enum value maps for CMsgClientToGCModifyDevAnnouncements_EOperation.
var (
	CMsgClientToGCModifyDevAnnouncements_EOperation_name = map[int32]string{
		0: "k_eCreate",
		1: "k_eUpdate",
		2: "k_eDelete",
	}
	CMsgClientToGCModifyDevAnnouncements_EOperation_value = map[string]int32{
		"k_eCreate": 0,
		"k_eUpdate": 1,
		"k_eDelete": 2,
	}
)

func (x CMsgClientToGCModifyDevAnnouncements_EOperation) Enum() *CMsgClientToGCModifyDevAnnouncements_EOperation {
	p := new(CMsgClientToGCModifyDevAnnouncements_EOperation)
	*p = x
	return p
}

func (x CMsgClientToGCModifyDevAnnouncements_EOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCModifyDevAnnouncements_EOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[26].Descriptor()
}

func (CMsgClientToGCModifyDevAnnouncements_EOperation) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[26]
}

func (x CMsgClientToGCModifyDevAnnouncements_EOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCModifyDevAnnouncements_EOperation) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCModifyDevAnnouncements_EOperation(num)
	return nil
}

// Deprecated: Use CMsgClientToGCModifyDevAnnouncements_EOperation.Descriptor instead.
func (CMsgClientToGCModifyDevAnnouncements_EOperation) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{61, 0}
}

type CMsgClientToGCModifyDevAnnouncementsResponse_EResult int32

const (
	CMsgClientToGCModifyDevAnnouncementsResponse_k_eSuccess           CMsgClientToGCModifyDevAnnouncementsResponse_EResult = 0
	CMsgClientToGCModifyDevAnnouncementsResponse_k_eInvalidPermission CMsgClientToGCModifyDevAnnouncementsResponse_EResult = 1
	CMsgClientToGCModifyDevAnnouncementsResponse_k_eInvalidTarget     CMsgClientToGCModifyDevAnnouncementsResponse_EResult = 2
	CMsgClientToGCModifyDevAnnouncementsResponse_k_eInternalError     CMsgClientToGCModifyDevAnnouncementsResponse_EResult = 3
)

// Enum value maps for CMsgClientToGCModifyDevAnnouncementsResponse_EResult.
var (
	CMsgClientToGCModifyDevAnnouncementsResponse_EResult_name = map[int32]string{
		0: "k_eSuccess",
		1: "k_eInvalidPermission",
		2: "k_eInvalidTarget",
		3: "k_eInternalError",
	}
	CMsgClientToGCModifyDevAnnouncementsResponse_EResult_value = map[string]int32{
		"k_eSuccess":           0,
		"k_eInvalidPermission": 1,
		"k_eInvalidTarget":     2,
		"k_eInternalError":     3,
	}
)

func (x CMsgClientToGCModifyDevAnnouncementsResponse_EResult) Enum() *CMsgClientToGCModifyDevAnnouncementsResponse_EResult {
	p := new(CMsgClientToGCModifyDevAnnouncementsResponse_EResult)
	*p = x
	return p
}

func (x CMsgClientToGCModifyDevAnnouncementsResponse_EResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCModifyDevAnnouncementsResponse_EResult) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[27].Descriptor()
}

func (CMsgClientToGCModifyDevAnnouncementsResponse_EResult) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[27]
}

func (x CMsgClientToGCModifyDevAnnouncementsResponse_EResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCModifyDevAnnouncementsResponse_EResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCModifyDevAnnouncementsResponse_EResult(num)
	return nil
}

// Deprecated: Use CMsgClientToGCModifyDevAnnouncementsResponse_EResult.Descriptor instead.
func (CMsgClientToGCModifyDevAnnouncementsResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{62, 0}
}

type CMsgClientToGCDevAction_EAction int32

const (
	CMsgClientToGCDevAction_k_eSetDeveloper         CMsgClientToGCDevAction_EAction = 1
	CMsgClientToGCDevAction_k_eSetMMR               CMsgClientToGCDevAction_EAction = 2
	CMsgClientToGCDevAction_k_eSetMMRUncertainty    CMsgClientToGCDevAction_EAction = 3
	CMsgClientToGCDevAction_k_eSetHeroStatus        CMsgClientToGCDevAction_EAction = 4
	CMsgClientToGCDevAction_k_eSetPermission        CMsgClientToGCDevAction_EAction = 5
	CMsgClientToGCDevAction_k_eSetNewPlayerProgress CMsgClientToGCDevAction_EAction = 6
	CMsgClientToGCDevAction_k_eForceAccountStorage  CMsgClientToGCDevAction_EAction = 7
	CMsgClientToGCDevAction_k_eBookReset            CMsgClientToGCDevAction_EAction = 9
	CMsgClientToGCDevAction_k_eBookXPGrant          CMsgClientToGCDevAction_EAction = 10
	CMsgClientToGCDevAction_k_eBanAccount           CMsgClientToGCDevAction_EAction = 11
)

// Enum value maps for CMsgClientToGCDevAction_EAction.
var (
	CMsgClientToGCDevAction_EAction_name = map[int32]string{
		1:  "k_eSetDeveloper",
		2:  "k_eSetMMR",
		3:  "k_eSetMMRUncertainty",
		4:  "k_eSetHeroStatus",
		5:  "k_eSetPermission",
		6:  "k_eSetNewPlayerProgress",
		7:  "k_eForceAccountStorage",
		9:  "k_eBookReset",
		10: "k_eBookXPGrant",
		11: "k_eBanAccount",
	}
	CMsgClientToGCDevAction_EAction_value = map[string]int32{
		"k_eSetDeveloper":         1,
		"k_eSetMMR":               2,
		"k_eSetMMRUncertainty":    3,
		"k_eSetHeroStatus":        4,
		"k_eSetPermission":        5,
		"k_eSetNewPlayerProgress": 6,
		"k_eForceAccountStorage":  7,
		"k_eBookReset":            9,
		"k_eBookXPGrant":          10,
		"k_eBanAccount":           11,
	}
)

func (x CMsgClientToGCDevAction_EAction) Enum() *CMsgClientToGCDevAction_EAction {
	p := new(CMsgClientToGCDevAction_EAction)
	*p = x
	return p
}

func (x CMsgClientToGCDevAction_EAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCDevAction_EAction) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[28].Descriptor()
}

func (CMsgClientToGCDevAction_EAction) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[28]
}

func (x CMsgClientToGCDevAction_EAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCDevAction_EAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCDevAction_EAction(num)
	return nil
}

// Deprecated: Use CMsgClientToGCDevAction_EAction.Descriptor instead.
func (CMsgClientToGCDevAction_EAction) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{63, 0}
}

type CMsgClientToGCDevActionResponse_EResult int32

const (
	CMsgClientToGCDevActionResponse_k_eSuccess           CMsgClientToGCDevActionResponse_EResult = 0
	CMsgClientToGCDevActionResponse_k_eInvalidPermission CMsgClientToGCDevActionResponse_EResult = 1
	CMsgClientToGCDevActionResponse_k_eInvalidTarget     CMsgClientToGCDevActionResponse_EResult = 2
	CMsgClientToGCDevActionResponse_k_eInternalError     CMsgClientToGCDevActionResponse_EResult = 3
)

// Enum value maps for CMsgClientToGCDevActionResponse_EResult.
var (
	CMsgClientToGCDevActionResponse_EResult_name = map[int32]string{
		0: "k_eSuccess",
		1: "k_eInvalidPermission",
		2: "k_eInvalidTarget",
		3: "k_eInternalError",
	}
	CMsgClientToGCDevActionResponse_EResult_value = map[string]int32{
		"k_eSuccess":           0,
		"k_eInvalidPermission": 1,
		"k_eInvalidTarget":     2,
		"k_eInternalError":     3,
	}
)

func (x CMsgClientToGCDevActionResponse_EResult) Enum() *CMsgClientToGCDevActionResponse_EResult {
	p := new(CMsgClientToGCDevActionResponse_EResult)
	*p = x
	return p
}

func (x CMsgClientToGCDevActionResponse_EResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCDevActionResponse_EResult) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[29].Descriptor()
}

func (CMsgClientToGCDevActionResponse_EResult) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[29]
}

func (x CMsgClientToGCDevActionResponse_EResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCDevActionResponse_EResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCDevActionResponse_EResult(num)
	return nil
}

// Deprecated: Use CMsgClientToGCDevActionResponse_EResult.Descriptor instead.
func (CMsgClientToGCDevActionResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{64, 0}
}

type CMsgClientToGCUpdateAccountSyncResponse_EResponse int32

const (
	CMsgClientToGCUpdateAccountSyncResponse_k_eInternalError  CMsgClientToGCUpdateAccountSyncResponse_EResponse = 0
	CMsgClientToGCUpdateAccountSyncResponse_k_eSuccess        CMsgClientToGCUpdateAccountSyncResponse_EResponse = 1
	CMsgClientToGCUpdateAccountSyncResponse_k_eDisabled       CMsgClientToGCUpdateAccountSyncResponse_EResponse = 2
	CMsgClientToGCUpdateAccountSyncResponse_k_eTooBusy        CMsgClientToGCUpdateAccountSyncResponse_EResponse = 3
	CMsgClientToGCUpdateAccountSyncResponse_k_eInvalidMessage CMsgClientToGCUpdateAccountSyncResponse_EResponse = 4
)

// Enum value maps for CMsgClientToGCUpdateAccountSyncResponse_EResponse.
var (
	CMsgClientToGCUpdateAccountSyncResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eDisabled",
		3: "k_eTooBusy",
		4: "k_eInvalidMessage",
	}
	CMsgClientToGCUpdateAccountSyncResponse_EResponse_value = map[string]int32{
		"k_eInternalError":  0,
		"k_eSuccess":        1,
		"k_eDisabled":       2,
		"k_eTooBusy":        3,
		"k_eInvalidMessage": 4,
	}
)

func (x CMsgClientToGCUpdateAccountSyncResponse_EResponse) Enum() *CMsgClientToGCUpdateAccountSyncResponse_EResponse {
	p := new(CMsgClientToGCUpdateAccountSyncResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCUpdateAccountSyncResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCUpdateAccountSyncResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[30].Descriptor()
}

func (CMsgClientToGCUpdateAccountSyncResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[30]
}

func (x CMsgClientToGCUpdateAccountSyncResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCUpdateAccountSyncResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCUpdateAccountSyncResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCUpdateAccountSyncResponse_EResponse.Descriptor instead.
func (CMsgClientToGCUpdateAccountSyncResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{70, 0}
}

type CMsgClientToGCGetHeroChoiceResponse_EResult int32

const (
	CMsgClientToGCGetHeroChoiceResponse_k_eSuccess       CMsgClientToGCGetHeroChoiceResponse_EResult = 0
	CMsgClientToGCGetHeroChoiceResponse_k_eNoChoices     CMsgClientToGCGetHeroChoiceResponse_EResult = 1
	CMsgClientToGCGetHeroChoiceResponse_k_eInvalidTarget CMsgClientToGCGetHeroChoiceResponse_EResult = 2
	CMsgClientToGCGetHeroChoiceResponse_k_eInternalError CMsgClientToGCGetHeroChoiceResponse_EResult = 3
	CMsgClientToGCGetHeroChoiceResponse_k_eDisabled      CMsgClientToGCGetHeroChoiceResponse_EResult = 4
	CMsgClientToGCGetHeroChoiceResponse_k_eTooBusy       CMsgClientToGCGetHeroChoiceResponse_EResult = 5
	CMsgClientToGCGetHeroChoiceResponse_k_eChoiceClosed  CMsgClientToGCGetHeroChoiceResponse_EResult = 6
)

// Enum value maps for CMsgClientToGCGetHeroChoiceResponse_EResult.
var (
	CMsgClientToGCGetHeroChoiceResponse_EResult_name = map[int32]string{
		0: "k_eSuccess",
		1: "k_eNoChoices",
		2: "k_eInvalidTarget",
		3: "k_eInternalError",
		4: "k_eDisabled",
		5: "k_eTooBusy",
		6: "k_eChoiceClosed",
	}
	CMsgClientToGCGetHeroChoiceResponse_EResult_value = map[string]int32{
		"k_eSuccess":       0,
		"k_eNoChoices":     1,
		"k_eInvalidTarget": 2,
		"k_eInternalError": 3,
		"k_eDisabled":      4,
		"k_eTooBusy":       5,
		"k_eChoiceClosed":  6,
	}
)

func (x CMsgClientToGCGetHeroChoiceResponse_EResult) Enum() *CMsgClientToGCGetHeroChoiceResponse_EResult {
	p := new(CMsgClientToGCGetHeroChoiceResponse_EResult)
	*p = x
	return p
}

func (x CMsgClientToGCGetHeroChoiceResponse_EResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetHeroChoiceResponse_EResult) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[31].Descriptor()
}

func (CMsgClientToGCGetHeroChoiceResponse_EResult) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[31]
}

func (x CMsgClientToGCGetHeroChoiceResponse_EResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetHeroChoiceResponse_EResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetHeroChoiceResponse_EResult(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetHeroChoiceResponse_EResult.Descriptor instead.
func (CMsgClientToGCGetHeroChoiceResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{72, 0}
}

type CMsgClientToGCUnlockHeroResponse_EResult int32

const (
	CMsgClientToGCUnlockHeroResponse_k_eSuccess       CMsgClientToGCUnlockHeroResponse_EResult = 0
	CMsgClientToGCUnlockHeroResponse_k_eInternalError CMsgClientToGCUnlockHeroResponse_EResult = 1
	CMsgClientToGCUnlockHeroResponse_k_eInvalidHero   CMsgClientToGCUnlockHeroResponse_EResult = 2
	CMsgClientToGCUnlockHeroResponse_k_eOutOfSync     CMsgClientToGCUnlockHeroResponse_EResult = 3
	CMsgClientToGCUnlockHeroResponse_k_eDisabled      CMsgClientToGCUnlockHeroResponse_EResult = 4
	CMsgClientToGCUnlockHeroResponse_k_eTooBusy       CMsgClientToGCUnlockHeroResponse_EResult = 5
)

// Enum value maps for CMsgClientToGCUnlockHeroResponse_EResult.
var (
	CMsgClientToGCUnlockHeroResponse_EResult_name = map[int32]string{
		0: "k_eSuccess",
		1: "k_eInternalError",
		2: "k_eInvalidHero",
		3: "k_eOutOfSync",
		4: "k_eDisabled",
		5: "k_eTooBusy",
	}
	CMsgClientToGCUnlockHeroResponse_EResult_value = map[string]int32{
		"k_eSuccess":       0,
		"k_eInternalError": 1,
		"k_eInvalidHero":   2,
		"k_eOutOfSync":     3,
		"k_eDisabled":      4,
		"k_eTooBusy":       5,
	}
)

func (x CMsgClientToGCUnlockHeroResponse_EResult) Enum() *CMsgClientToGCUnlockHeroResponse_EResult {
	p := new(CMsgClientToGCUnlockHeroResponse_EResult)
	*p = x
	return p
}

func (x CMsgClientToGCUnlockHeroResponse_EResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCUnlockHeroResponse_EResult) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[32].Descriptor()
}

func (CMsgClientToGCUnlockHeroResponse_EResult) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[32]
}

func (x CMsgClientToGCUnlockHeroResponse_EResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCUnlockHeroResponse_EResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCUnlockHeroResponse_EResult(num)
	return nil
}

// Deprecated: Use CMsgClientToGCUnlockHeroResponse_EResult.Descriptor instead.
func (CMsgClientToGCUnlockHeroResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{74, 0}
}

type CMsgClientToGCBookUnlockResponse_EResult int32

const (
	CMsgClientToGCBookUnlockResponse_k_eSuccess         CMsgClientToGCBookUnlockResponse_EResult = 0
	CMsgClientToGCBookUnlockResponse_k_eInternalError   CMsgClientToGCBookUnlockResponse_EResult = 1
	CMsgClientToGCBookUnlockResponse_k_eOutOfDateClient CMsgClientToGCBookUnlockResponse_EResult = 2
	CMsgClientToGCBookUnlockResponse_k_eInvalidFunds    CMsgClientToGCBookUnlockResponse_EResult = 3
	CMsgClientToGCBookUnlockResponse_k_eDisabled        CMsgClientToGCBookUnlockResponse_EResult = 4
	CMsgClientToGCBookUnlockResponse_k_eTooBusy         CMsgClientToGCBookUnlockResponse_EResult = 5
	CMsgClientToGCBookUnlockResponse_k_eAlreadyUnlocked CMsgClientToGCBookUnlockResponse_EResult = 6
)

// Enum value maps for CMsgClientToGCBookUnlockResponse_EResult.
var (
	CMsgClientToGCBookUnlockResponse_EResult_name = map[int32]string{
		0: "k_eSuccess",
		1: "k_eInternalError",
		2: "k_eOutOfDateClient",
		3: "k_eInvalidFunds",
		4: "k_eDisabled",
		5: "k_eTooBusy",
		6: "k_eAlreadyUnlocked",
	}
	CMsgClientToGCBookUnlockResponse_EResult_value = map[string]int32{
		"k_eSuccess":         0,
		"k_eInternalError":   1,
		"k_eOutOfDateClient": 2,
		"k_eInvalidFunds":    3,
		"k_eDisabled":        4,
		"k_eTooBusy":         5,
		"k_eAlreadyUnlocked": 6,
	}
)

func (x CMsgClientToGCBookUnlockResponse_EResult) Enum() *CMsgClientToGCBookUnlockResponse_EResult {
	p := new(CMsgClientToGCBookUnlockResponse_EResult)
	*p = x
	return p
}

func (x CMsgClientToGCBookUnlockResponse_EResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCBookUnlockResponse_EResult) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[33].Descriptor()
}

func (CMsgClientToGCBookUnlockResponse_EResult) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[33]
}

func (x CMsgClientToGCBookUnlockResponse_EResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCBookUnlockResponse_EResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCBookUnlockResponse_EResult(num)
	return nil
}

// Deprecated: Use CMsgClientToGCBookUnlockResponse_EResult.Descriptor instead.
func (CMsgClientToGCBookUnlockResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{77, 0}
}

type CMsgClientToGCGetBookResponse_EResult int32

const (
	CMsgClientToGCGetBookResponse_k_eSuccess       CMsgClientToGCGetBookResponse_EResult = 0
	CMsgClientToGCGetBookResponse_k_eInternalError CMsgClientToGCGetBookResponse_EResult = 1
	CMsgClientToGCGetBookResponse_k_eInvalidBook   CMsgClientToGCGetBookResponse_EResult = 2
	CMsgClientToGCGetBookResponse_k_eDisabled      CMsgClientToGCGetBookResponse_EResult = 3
	CMsgClientToGCGetBookResponse_k_eTooBusy       CMsgClientToGCGetBookResponse_EResult = 4
)

// Enum value maps for CMsgClientToGCGetBookResponse_EResult.
var (
	CMsgClientToGCGetBookResponse_EResult_name = map[int32]string{
		0: "k_eSuccess",
		1: "k_eInternalError",
		2: "k_eInvalidBook",
		3: "k_eDisabled",
		4: "k_eTooBusy",
	}
	CMsgClientToGCGetBookResponse_EResult_value = map[string]int32{
		"k_eSuccess":       0,
		"k_eInternalError": 1,
		"k_eInvalidBook":   2,
		"k_eDisabled":      3,
		"k_eTooBusy":       4,
	}
)

func (x CMsgClientToGCGetBookResponse_EResult) Enum() *CMsgClientToGCGetBookResponse_EResult {
	p := new(CMsgClientToGCGetBookResponse_EResult)
	*p = x
	return p
}

func (x CMsgClientToGCGetBookResponse_EResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetBookResponse_EResult) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[34].Descriptor()
}

func (CMsgClientToGCGetBookResponse_EResult) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[34]
}

func (x CMsgClientToGCGetBookResponse_EResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetBookResponse_EResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetBookResponse_EResult(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetBookResponse_EResult.Descriptor instead.
func (CMsgClientToGCGetBookResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{79, 0}
}

type CMsgClientToGCSubmitPlaytestUserResponse_EResponse int32

const (
	CMsgClientToGCSubmitPlaytestUserResponse_eResponse_Success              CMsgClientToGCSubmitPlaytestUserResponse_EResponse = 0
	CMsgClientToGCSubmitPlaytestUserResponse_eResponse_InternalError        CMsgClientToGCSubmitPlaytestUserResponse_EResponse = 1
	CMsgClientToGCSubmitPlaytestUserResponse_eResponse_InvalidFriend        CMsgClientToGCSubmitPlaytestUserResponse_EResponse = 3
	CMsgClientToGCSubmitPlaytestUserResponse_eResponse_NotFriendsLongEnough CMsgClientToGCSubmitPlaytestUserResponse_EResponse = 4
	CMsgClientToGCSubmitPlaytestUserResponse_eResponse_AlreadyHasGame       CMsgClientToGCSubmitPlaytestUserResponse_EResponse = 5
	CMsgClientToGCSubmitPlaytestUserResponse_eResponse_LimitedUser          CMsgClientToGCSubmitPlaytestUserResponse_EResponse = 6
	CMsgClientToGCSubmitPlaytestUserResponse_eResponse_InviteLimitReached   CMsgClientToGCSubmitPlaytestUserResponse_EResponse = 7
)

// Enum value maps for CMsgClientToGCSubmitPlaytestUserResponse_EResponse.
var (
	CMsgClientToGCSubmitPlaytestUserResponse_EResponse_name = map[int32]string{
		0: "eResponse_Success",
		1: "eResponse_InternalError",
		3: "eResponse_InvalidFriend",
		4: "eResponse_NotFriendsLongEnough",
		5: "eResponse_AlreadyHasGame",
		6: "eResponse_LimitedUser",
		7: "eResponse_InviteLimitReached",
	}
	CMsgClientToGCSubmitPlaytestUserResponse_EResponse_value = map[string]int32{
		"eResponse_Success":              0,
		"eResponse_InternalError":        1,
		"eResponse_InvalidFriend":        3,
		"eResponse_NotFriendsLongEnough": 4,
		"eResponse_AlreadyHasGame":       5,
		"eResponse_LimitedUser":          6,
		"eResponse_InviteLimitReached":   7,
	}
)

func (x CMsgClientToGCSubmitPlaytestUserResponse_EResponse) Enum() *CMsgClientToGCSubmitPlaytestUserResponse_EResponse {
	p := new(CMsgClientToGCSubmitPlaytestUserResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCSubmitPlaytestUserResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCSubmitPlaytestUserResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[35].Descriptor()
}

func (CMsgClientToGCSubmitPlaytestUserResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[35]
}

func (x CMsgClientToGCSubmitPlaytestUserResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCSubmitPlaytestUserResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCSubmitPlaytestUserResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCSubmitPlaytestUserResponse_EResponse.Descriptor instead.
func (CMsgClientToGCSubmitPlaytestUserResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{82, 0}
}

type CMsgClientToGCUpdateHeroBuildResponse_EResponse int32

const (
	CMsgClientToGCUpdateHeroBuildResponse_k_eInternalError CMsgClientToGCUpdateHeroBuildResponse_EResponse = 0
	CMsgClientToGCUpdateHeroBuildResponse_k_eSuccess       CMsgClientToGCUpdateHeroBuildResponse_EResponse = 1
)

// Enum value maps for CMsgClientToGCUpdateHeroBuildResponse_EResponse.
var (
	CMsgClientToGCUpdateHeroBuildResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
	}
	CMsgClientToGCUpdateHeroBuildResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
	}
)

func (x CMsgClientToGCUpdateHeroBuildResponse_EResponse) Enum() *CMsgClientToGCUpdateHeroBuildResponse_EResponse {
	p := new(CMsgClientToGCUpdateHeroBuildResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCUpdateHeroBuildResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCUpdateHeroBuildResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[36].Descriptor()
}

func (CMsgClientToGCUpdateHeroBuildResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[36]
}

func (x CMsgClientToGCUpdateHeroBuildResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCUpdateHeroBuildResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCUpdateHeroBuildResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCUpdateHeroBuildResponse_EResponse.Descriptor instead.
func (CMsgClientToGCUpdateHeroBuildResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{85, 0}
}

type CMsgClientToGCFindHeroBuildsResponse_EResponse int32

const (
	CMsgClientToGCFindHeroBuildsResponse_k_eInternalError CMsgClientToGCFindHeroBuildsResponse_EResponse = 0
	CMsgClientToGCFindHeroBuildsResponse_k_eSuccess       CMsgClientToGCFindHeroBuildsResponse_EResponse = 1
)

// Enum value maps for CMsgClientToGCFindHeroBuildsResponse_EResponse.
var (
	CMsgClientToGCFindHeroBuildsResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
	}
	CMsgClientToGCFindHeroBuildsResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
	}
)

func (x CMsgClientToGCFindHeroBuildsResponse_EResponse) Enum() *CMsgClientToGCFindHeroBuildsResponse_EResponse {
	p := new(CMsgClientToGCFindHeroBuildsResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCFindHeroBuildsResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCFindHeroBuildsResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[37].Descriptor()
}

func (CMsgClientToGCFindHeroBuildsResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[37]
}

func (x CMsgClientToGCFindHeroBuildsResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCFindHeroBuildsResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCFindHeroBuildsResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCFindHeroBuildsResponse_EResponse.Descriptor instead.
func (CMsgClientToGCFindHeroBuildsResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{88, 0}
}

type CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse int32

const (
	CMsgClientToGCUpdateHeroBuildPreferenceResponse_k_eInternalError CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse = 0
	CMsgClientToGCUpdateHeroBuildPreferenceResponse_k_eSuccess       CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse = 1
)

// Enum value maps for CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse.
var (
	CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
	}
	CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
	}
)

func (x CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse) Enum() *CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse {
	p := new(CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[38].Descriptor()
}

func (CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[38]
}

func (x CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse.Descriptor instead.
func (CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{90, 0}
}

type CMsgClientToGCGetOldHeroBuildDataResponse_EResponse int32

const (
	CMsgClientToGCGetOldHeroBuildDataResponse_k_eInternalError CMsgClientToGCGetOldHeroBuildDataResponse_EResponse = 0
	CMsgClientToGCGetOldHeroBuildDataResponse_k_eSuccess       CMsgClientToGCGetOldHeroBuildDataResponse_EResponse = 1
)

// Enum value maps for CMsgClientToGCGetOldHeroBuildDataResponse_EResponse.
var (
	CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
	}
	CMsgClientToGCGetOldHeroBuildDataResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
	}
)

func (x CMsgClientToGCGetOldHeroBuildDataResponse_EResponse) Enum() *CMsgClientToGCGetOldHeroBuildDataResponse_EResponse {
	p := new(CMsgClientToGCGetOldHeroBuildDataResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGetOldHeroBuildDataResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetOldHeroBuildDataResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[39].Descriptor()
}

func (CMsgClientToGCGetOldHeroBuildDataResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[39]
}

func (x CMsgClientToGCGetOldHeroBuildDataResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetOldHeroBuildDataResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetOldHeroBuildDataResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetOldHeroBuildDataResponse_EResponse.Descriptor instead.
func (CMsgClientToGCGetOldHeroBuildDataResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{92, 0}
}

type CMsgClientToGCReportPlayerFromMatch_EReportType int32

const (
	CMsgClientToGCReportPlayerFromMatch_k_eReport_None        CMsgClientToGCReportPlayerFromMatch_EReportType = 0
	CMsgClientToGCReportPlayerFromMatch_k_eReport_VoiceChat   CMsgClientToGCReportPlayerFromMatch_EReportType = 1
	CMsgClientToGCReportPlayerFromMatch_k_eReport_Griefing    CMsgClientToGCReportPlayerFromMatch_EReportType = 2
	CMsgClientToGCReportPlayerFromMatch_k_eReport_LeftMatch   CMsgClientToGCReportPlayerFromMatch_EReportType = 3
	CMsgClientToGCReportPlayerFromMatch_k_eReport_Matchmaking CMsgClientToGCReportPlayerFromMatch_EReportType = 4
)

// Enum value maps for CMsgClientToGCReportPlayerFromMatch_EReportType.
var (
	CMsgClientToGCReportPlayerFromMatch_EReportType_name = map[int32]string{
		0: "k_eReport_None",
		1: "k_eReport_VoiceChat",
		2: "k_eReport_Griefing",
		3: "k_eReport_LeftMatch",
		4: "k_eReport_Matchmaking",
	}
	CMsgClientToGCReportPlayerFromMatch_EReportType_value = map[string]int32{
		"k_eReport_None":        0,
		"k_eReport_VoiceChat":   1,
		"k_eReport_Griefing":    2,
		"k_eReport_LeftMatch":   3,
		"k_eReport_Matchmaking": 4,
	}
)

func (x CMsgClientToGCReportPlayerFromMatch_EReportType) Enum() *CMsgClientToGCReportPlayerFromMatch_EReportType {
	p := new(CMsgClientToGCReportPlayerFromMatch_EReportType)
	*p = x
	return p
}

func (x CMsgClientToGCReportPlayerFromMatch_EReportType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCReportPlayerFromMatch_EReportType) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[40].Descriptor()
}

func (CMsgClientToGCReportPlayerFromMatch_EReportType) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[40]
}

func (x CMsgClientToGCReportPlayerFromMatch_EReportType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCReportPlayerFromMatch_EReportType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCReportPlayerFromMatch_EReportType(num)
	return nil
}

// Deprecated: Use CMsgClientToGCReportPlayerFromMatch_EReportType.Descriptor instead.
func (CMsgClientToGCReportPlayerFromMatch_EReportType) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{93, 0}
}

type CMsgClientToGCReportPlayerFromMatchResponse_EResponse int32

const (
	CMsgClientToGCReportPlayerFromMatchResponse_k_eInternalError          CMsgClientToGCReportPlayerFromMatchResponse_EResponse = 0
	CMsgClientToGCReportPlayerFromMatchResponse_k_eSuccess                CMsgClientToGCReportPlayerFromMatchResponse_EResponse = 1
	CMsgClientToGCReportPlayerFromMatchResponse_k_eRateLimited            CMsgClientToGCReportPlayerFromMatchResponse_EResponse = 2
	CMsgClientToGCReportPlayerFromMatchResponse_k_eAlreadyReported        CMsgClientToGCReportPlayerFromMatchResponse_EResponse = 3
	CMsgClientToGCReportPlayerFromMatchResponse_k_eDisabled               CMsgClientToGCReportPlayerFromMatchResponse_EResponse = 4
	CMsgClientToGCReportPlayerFromMatchResponse_k_eInvalidPermissions     CMsgClientToGCReportPlayerFromMatchResponse_EResponse = 5
	CMsgClientToGCReportPlayerFromMatchResponse_k_eReportingWindowExpired CMsgClientToGCReportPlayerFromMatchResponse_EResponse = 6
	CMsgClientToGCReportPlayerFromMatchResponse_k_eTooBusy                CMsgClientToGCReportPlayerFromMatchResponse_EResponse = 7
)

// Enum value maps for CMsgClientToGCReportPlayerFromMatchResponse_EResponse.
var (
	CMsgClientToGCReportPlayerFromMatchResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eRateLimited",
		3: "k_eAlreadyReported",
		4: "k_eDisabled",
		5: "k_eInvalidPermissions",
		6: "k_eReportingWindowExpired",
		7: "k_eTooBusy",
	}
	CMsgClientToGCReportPlayerFromMatchResponse_EResponse_value = map[string]int32{
		"k_eInternalError":          0,
		"k_eSuccess":                1,
		"k_eRateLimited":            2,
		"k_eAlreadyReported":        3,
		"k_eDisabled":               4,
		"k_eInvalidPermissions":     5,
		"k_eReportingWindowExpired": 6,
		"k_eTooBusy":                7,
	}
)

func (x CMsgClientToGCReportPlayerFromMatchResponse_EResponse) Enum() *CMsgClientToGCReportPlayerFromMatchResponse_EResponse {
	p := new(CMsgClientToGCReportPlayerFromMatchResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCReportPlayerFromMatchResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCReportPlayerFromMatchResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[41].Descriptor()
}

func (CMsgClientToGCReportPlayerFromMatchResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[41]
}

func (x CMsgClientToGCReportPlayerFromMatchResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCReportPlayerFromMatchResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCReportPlayerFromMatchResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCReportPlayerFromMatchResponse_EResponse.Descriptor instead.
func (CMsgClientToGCReportPlayerFromMatchResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{94, 0}
}

type CMsgClientToGCGetAccountMatchReportsResponse_EResponse int32

const (
	CMsgClientToGCGetAccountMatchReportsResponse_k_eInternalError CMsgClientToGCGetAccountMatchReportsResponse_EResponse = 0
	CMsgClientToGCGetAccountMatchReportsResponse_k_eSuccess       CMsgClientToGCGetAccountMatchReportsResponse_EResponse = 1
	CMsgClientToGCGetAccountMatchReportsResponse_k_eDisabled      CMsgClientToGCGetAccountMatchReportsResponse_EResponse = 4
	CMsgClientToGCGetAccountMatchReportsResponse_k_eTooBusy       CMsgClientToGCGetAccountMatchReportsResponse_EResponse = 7
)

// Enum value maps for CMsgClientToGCGetAccountMatchReportsResponse_EResponse.
var (
	CMsgClientToGCGetAccountMatchReportsResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		4: "k_eDisabled",
		7: "k_eTooBusy",
	}
	CMsgClientToGCGetAccountMatchReportsResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eDisabled":      4,
		"k_eTooBusy":       7,
	}
)

func (x CMsgClientToGCGetAccountMatchReportsResponse_EResponse) Enum() *CMsgClientToGCGetAccountMatchReportsResponse_EResponse {
	p := new(CMsgClientToGCGetAccountMatchReportsResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGetAccountMatchReportsResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetAccountMatchReportsResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[42].Descriptor()
}

func (CMsgClientToGCGetAccountMatchReportsResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[42]
}

func (x CMsgClientToGCGetAccountMatchReportsResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetAccountMatchReportsResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetAccountMatchReportsResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetAccountMatchReportsResponse_EResponse.Descriptor instead.
func (CMsgClientToGCGetAccountMatchReportsResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{96, 0}
}

type CMsgClientToGCDeleteHeroBuildResponse_EResponse int32

const (
	CMsgClientToGCDeleteHeroBuildResponse_k_eInternalError CMsgClientToGCDeleteHeroBuildResponse_EResponse = 0
	CMsgClientToGCDeleteHeroBuildResponse_k_eSuccess       CMsgClientToGCDeleteHeroBuildResponse_EResponse = 1
)

// Enum value maps for CMsgClientToGCDeleteHeroBuildResponse_EResponse.
var (
	CMsgClientToGCDeleteHeroBuildResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
	}
	CMsgClientToGCDeleteHeroBuildResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
	}
)

func (x CMsgClientToGCDeleteHeroBuildResponse_EResponse) Enum() *CMsgClientToGCDeleteHeroBuildResponse_EResponse {
	p := new(CMsgClientToGCDeleteHeroBuildResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCDeleteHeroBuildResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCDeleteHeroBuildResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[43].Descriptor()
}

func (CMsgClientToGCDeleteHeroBuildResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[43]
}

func (x CMsgClientToGCDeleteHeroBuildResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCDeleteHeroBuildResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCDeleteHeroBuildResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCDeleteHeroBuildResponse_EResponse.Descriptor instead.
func (CMsgClientToGCDeleteHeroBuildResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{98, 0}
}

type CMsgClientToGCGetDiscordLinkResponse_EResponse int32

const (
	CMsgClientToGCGetDiscordLinkResponse_k_eInternalError  CMsgClientToGCGetDiscordLinkResponse_EResponse = 0
	CMsgClientToGCGetDiscordLinkResponse_k_eSuccess        CMsgClientToGCGetDiscordLinkResponse_EResponse = 1
	CMsgClientToGCGetDiscordLinkResponse_k_eDiscordTooBusy CMsgClientToGCGetDiscordLinkResponse_EResponse = 2
	CMsgClientToGCGetDiscordLinkResponse_k_eAlreadyClaimed CMsgClientToGCGetDiscordLinkResponse_EResponse = 3
	CMsgClientToGCGetDiscordLinkResponse_k_eDisabled       CMsgClientToGCGetDiscordLinkResponse_EResponse = 4
)

// Enum value maps for CMsgClientToGCGetDiscordLinkResponse_EResponse.
var (
	CMsgClientToGCGetDiscordLinkResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eDiscordTooBusy",
		3: "k_eAlreadyClaimed",
		4: "k_eDisabled",
	}
	CMsgClientToGCGetDiscordLinkResponse_EResponse_value = map[string]int32{
		"k_eInternalError":  0,
		"k_eSuccess":        1,
		"k_eDiscordTooBusy": 2,
		"k_eAlreadyClaimed": 3,
		"k_eDisabled":       4,
	}
)

func (x CMsgClientToGCGetDiscordLinkResponse_EResponse) Enum() *CMsgClientToGCGetDiscordLinkResponse_EResponse {
	p := new(CMsgClientToGCGetDiscordLinkResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGetDiscordLinkResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetDiscordLinkResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[44].Descriptor()
}

func (CMsgClientToGCGetDiscordLinkResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[44]
}

func (x CMsgClientToGCGetDiscordLinkResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetDiscordLinkResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetDiscordLinkResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetDiscordLinkResponse_EResponse.Descriptor instead.
func (CMsgClientToGCGetDiscordLinkResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{102, 0}
}

type CMsgClientToGCGrantForumAccessResponse_EResponse int32

const (
	CMsgClientToGCGrantForumAccessResponse_k_eInternalError  CMsgClientToGCGrantForumAccessResponse_EResponse = 0
	CMsgClientToGCGrantForumAccessResponse_k_eSuccess        CMsgClientToGCGrantForumAccessResponse_EResponse = 1
	CMsgClientToGCGrantForumAccessResponse_k_eAlreadyClaimed CMsgClientToGCGrantForumAccessResponse_EResponse = 2
	CMsgClientToGCGrantForumAccessResponse_k_eDisabled       CMsgClientToGCGrantForumAccessResponse_EResponse = 3
	CMsgClientToGCGrantForumAccessResponse_k_eEmailUsed      CMsgClientToGCGrantForumAccessResponse_EResponse = 4
)

// Enum value maps for CMsgClientToGCGrantForumAccessResponse_EResponse.
var (
	CMsgClientToGCGrantForumAccessResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eAlreadyClaimed",
		3: "k_eDisabled",
		4: "k_eEmailUsed",
	}
	CMsgClientToGCGrantForumAccessResponse_EResponse_value = map[string]int32{
		"k_eInternalError":  0,
		"k_eSuccess":        1,
		"k_eAlreadyClaimed": 2,
		"k_eDisabled":       3,
		"k_eEmailUsed":      4,
	}
)

func (x CMsgClientToGCGrantForumAccessResponse_EResponse) Enum() *CMsgClientToGCGrantForumAccessResponse_EResponse {
	p := new(CMsgClientToGCGrantForumAccessResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGrantForumAccessResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGrantForumAccessResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[45].Descriptor()
}

func (CMsgClientToGCGrantForumAccessResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[45]
}

func (x CMsgClientToGCGrantForumAccessResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGrantForumAccessResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGrantForumAccessResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGrantForumAccessResponse_EResponse.Descriptor instead.
func (CMsgClientToGCGrantForumAccessResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{104, 0}
}

type CMsgClientToGCGetFriendGameStatusResponse_EResponse int32

const (
	CMsgClientToGCGetFriendGameStatusResponse_k_eInternalError CMsgClientToGCGetFriendGameStatusResponse_EResponse = 0
	CMsgClientToGCGetFriendGameStatusResponse_k_eSuccess       CMsgClientToGCGetFriendGameStatusResponse_EResponse = 1
	CMsgClientToGCGetFriendGameStatusResponse_k_eTooBusy       CMsgClientToGCGetFriendGameStatusResponse_EResponse = 2
	CMsgClientToGCGetFriendGameStatusResponse_k_eDisabled      CMsgClientToGCGetFriendGameStatusResponse_EResponse = 3
)

// Enum value maps for CMsgClientToGCGetFriendGameStatusResponse_EResponse.
var (
	CMsgClientToGCGetFriendGameStatusResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
	}
	CMsgClientToGCGetFriendGameStatusResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
	}
)

func (x CMsgClientToGCGetFriendGameStatusResponse_EResponse) Enum() *CMsgClientToGCGetFriendGameStatusResponse_EResponse {
	p := new(CMsgClientToGCGetFriendGameStatusResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGetFriendGameStatusResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetFriendGameStatusResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_citadel_gcmessages_client_proto_enumTypes[46].Descriptor()
}

func (CMsgClientToGCGetFriendGameStatusResponse_EResponse) Type() protoreflect.EnumType {
	return &file_citadel_gcmessages_client_proto_enumTypes[46]
}

func (x CMsgClientToGCGetFriendGameStatusResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetFriendGameStatusResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetFriendGameStatusResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetFriendGameStatusResponse_EResponse.Descriptor instead.
func (CMsgClientToGCGetFriendGameStatusResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{108, 0}
}

type CSOGameAccountClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId         *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Flags             *uint64 `protobuf:"varint,2,opt,name=flags" json:"flags,omitempty"`
	Wins              *uint32 `protobuf:"varint,3,opt,name=wins" json:"wins,omitempty"`
	Losses            *uint32 `protobuf:"varint,4,opt,name=losses" json:"losses,omitempty"`
	Kills             *uint32 `protobuf:"varint,5,opt,name=kills" json:"kills,omitempty"`
	MostPlayedHeroId  *uint32 `protobuf:"varint,6,opt,name=most_played_hero_id,json=mostPlayedHeroId" json:"most_played_hero_id,omitempty"`
	Permissions       *uint64 `protobuf:"varint,7,opt,name=permissions" json:"permissions,omitempty"`
	NewPlayerProgress *uint64 `protobuf:"varint,8,opt,name=new_player_progress,json=newPlayerProgress" json:"new_player_progress,omitempty"`
	HeroUnlockCredits *uint32 `protobuf:"varint,9,opt,name=hero_unlock_credits,json=heroUnlockCredits" json:"hero_unlock_credits,omitempty"`
}

func (x *CSOGameAccountClient) Reset() {
	*x = CSOGameAccountClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOGameAccountClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOGameAccountClient) ProtoMessage() {}

func (x *CSOGameAccountClient) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOGameAccountClient.ProtoReflect.Descriptor instead.
func (*CSOGameAccountClient) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{0}
}

func (x *CSOGameAccountClient) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CSOGameAccountClient) GetFlags() uint64 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CSOGameAccountClient) GetWins() uint32 {
	if x != nil && x.Wins != nil {
		return *x.Wins
	}
	return 0
}

func (x *CSOGameAccountClient) GetLosses() uint32 {
	if x != nil && x.Losses != nil {
		return *x.Losses
	}
	return 0
}

func (x *CSOGameAccountClient) GetKills() uint32 {
	if x != nil && x.Kills != nil {
		return *x.Kills
	}
	return 0
}

func (x *CSOGameAccountClient) GetMostPlayedHeroId() uint32 {
	if x != nil && x.MostPlayedHeroId != nil {
		return *x.MostPlayedHeroId
	}
	return 0
}

func (x *CSOGameAccountClient) GetPermissions() uint64 {
	if x != nil && x.Permissions != nil {
		return *x.Permissions
	}
	return 0
}

func (x *CSOGameAccountClient) GetNewPlayerProgress() uint64 {
	if x != nil && x.NewPlayerProgress != nil {
		return *x.NewPlayerProgress
	}
	return 0
}

func (x *CSOGameAccountClient) GetHeroUnlockCredits() uint32 {
	if x != nil && x.HeroUnlockCredits != nil {
		return *x.HeroUnlockCredits
	}
	return 0
}

type CSOAccountSyncStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id        *uint32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Value     *uint32 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
}

func (x *CSOAccountSyncStorage) Reset() {
	*x = CSOAccountSyncStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOAccountSyncStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOAccountSyncStorage) ProtoMessage() {}

func (x *CSOAccountSyncStorage) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOAccountSyncStorage.ProtoReflect.Descriptor instead.
func (*CSOAccountSyncStorage) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{1}
}

func (x *CSOAccountSyncStorage) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CSOAccountSyncStorage) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CSOAccountSyncStorage) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type CSOAccountHeroInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32                         `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	HeroId    *uint32                         `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Status    *CSOAccountHeroInfo_EHeroStatus `protobuf:"varint,3,opt,name=status,enum=dota.CSOAccountHeroInfo_EHeroStatus" json:"status,omitempty"`
	Wins      *uint32                         `protobuf:"varint,4,opt,name=wins" json:"wins,omitempty"`
	Kills     *uint32                         `protobuf:"varint,5,opt,name=kills" json:"kills,omitempty"`
}

func (x *CSOAccountHeroInfo) Reset() {
	*x = CSOAccountHeroInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOAccountHeroInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOAccountHeroInfo) ProtoMessage() {}

func (x *CSOAccountHeroInfo) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOAccountHeroInfo.ProtoReflect.Descriptor instead.
func (*CSOAccountHeroInfo) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{2}
}

func (x *CSOAccountHeroInfo) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CSOAccountHeroInfo) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CSOAccountHeroInfo) GetStatus() CSOAccountHeroInfo_EHeroStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return CSOAccountHeroInfo_k_eLocked
}

func (x *CSOAccountHeroInfo) GetWins() uint32 {
	if x != nil && x.Wins != nil {
		return *x.Wins
	}
	return 0
}

func (x *CSOAccountHeroInfo) GetKills() uint32 {
	if x != nil && x.Kills != nil {
		return *x.Kills
	}
	return 0
}

type CMsgCitadelClientHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionMode *ECitadelRegionMode `protobuf:"varint,1,opt,name=region_mode,json=regionMode,enum=dota.ECitadelRegionMode" json:"region_mode,omitempty"`
}

func (x *CMsgCitadelClientHello) Reset() {
	*x = CMsgCitadelClientHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCitadelClientHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCitadelClientHello) ProtoMessage() {}

func (x *CMsgCitadelClientHello) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCitadelClientHello.ProtoReflect.Descriptor instead.
func (*CMsgCitadelClientHello) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgCitadelClientHello) GetRegionMode() ECitadelRegionMode {
	if x != nil && x.RegionMode != nil {
		return *x.RegionMode
	}
	return ECitadelRegionMode_k_ECitadelRegionMode_ROW
}

type CMsgClientToGCStartMatchmaking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientVersion  *uint32                     `protobuf:"varint,1,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	ClientPlatform *EGCPlatform                `protobuf:"varint,2,opt,name=client_platform,json=clientPlatform,enum=dota.EGCPlatform" json:"client_platform,omitempty"`
	MatchInfo      *CMsgStartFindingMatchInfo  `protobuf:"bytes,3,opt,name=match_info,json=matchInfo" json:"match_info,omitempty"`
	PingTimes      *CMsgRegionPingTimesClient  `protobuf:"bytes,4,opt,name=ping_times,json=pingTimes" json:"ping_times,omitempty"`
	Heroes         *CMsgHeroSelectionMatchInfo `protobuf:"bytes,5,opt,name=heroes" json:"heroes,omitempty"`
}

func (x *CMsgClientToGCStartMatchmaking) Reset() {
	*x = CMsgClientToGCStartMatchmaking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCStartMatchmaking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCStartMatchmaking) ProtoMessage() {}

func (x *CMsgClientToGCStartMatchmaking) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCStartMatchmaking.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCStartMatchmaking) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgClientToGCStartMatchmaking) GetClientVersion() uint32 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return 0
}

func (x *CMsgClientToGCStartMatchmaking) GetClientPlatform() EGCPlatform {
	if x != nil && x.ClientPlatform != nil {
		return *x.ClientPlatform
	}
	return EGCPlatform_k_eGCPlatform_None
}

func (x *CMsgClientToGCStartMatchmaking) GetMatchInfo() *CMsgStartFindingMatchInfo {
	if x != nil {
		return x.MatchInfo
	}
	return nil
}

func (x *CMsgClientToGCStartMatchmaking) GetPingTimes() *CMsgRegionPingTimesClient {
	if x != nil {
		return x.PingTimes
	}
	return nil
}

func (x *CMsgClientToGCStartMatchmaking) GetHeroes() *CMsgHeroSelectionMatchInfo {
	if x != nil {
		return x.Heroes
	}
	return nil
}

type CMsgClientToGCStartMatchmakingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       *CMsgClientToGCStartMatchmakingResponse_EResultCode `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCStartMatchmakingResponse_EResultCode" json:"result,omitempty"`
	TimeStamp    *uint32                                             `protobuf:"varint,2,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	DebugMessage *string                                             `protobuf:"bytes,3,opt,name=debug_message,json=debugMessage" json:"debug_message,omitempty"`
}

func (x *CMsgClientToGCStartMatchmakingResponse) Reset() {
	*x = CMsgClientToGCStartMatchmakingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCStartMatchmakingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCStartMatchmakingResponse) ProtoMessage() {}

func (x *CMsgClientToGCStartMatchmakingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCStartMatchmakingResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCStartMatchmakingResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgClientToGCStartMatchmakingResponse) GetResult() CMsgClientToGCStartMatchmakingResponse_EResultCode {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCStartMatchmakingResponse_k_EResult_OK
}

func (x *CMsgClientToGCStartMatchmakingResponse) GetTimeStamp() uint32 {
	if x != nil && x.TimeStamp != nil {
		return *x.TimeStamp
	}
	return 0
}

func (x *CMsgClientToGCStartMatchmakingResponse) GetDebugMessage() string {
	if x != nil && x.DebugMessage != nil {
		return *x.DebugMessage
	}
	return ""
}

type CMsgClientToGCStopMatchmaking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientToGCStopMatchmaking) Reset() {
	*x = CMsgClientToGCStopMatchmaking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCStopMatchmaking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCStopMatchmaking) ProtoMessage() {}

func (x *CMsgClientToGCStopMatchmaking) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCStopMatchmaking.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCStopMatchmaking) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{6}
}

type CMsgClientToGCStopMatchmakingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (x *CMsgClientToGCStopMatchmakingResponse) Reset() {
	*x = CMsgClientToGCStopMatchmakingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCStopMatchmakingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCStopMatchmakingResponse) ProtoMessage() {}

func (x *CMsgClientToGCStopMatchmakingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCStopMatchmakingResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCStopMatchmakingResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgClientToGCStopMatchmakingResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type CMsgGCToClientMatchmakingStopped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason *CMsgGCToClientMatchmakingStopped_EReason `protobuf:"varint,1,opt,name=reason,enum=dota.CMsgGCToClientMatchmakingStopped_EReason" json:"reason,omitempty"`
}

func (x *CMsgGCToClientMatchmakingStopped) Reset() {
	*x = CMsgGCToClientMatchmakingStopped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientMatchmakingStopped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientMatchmakingStopped) ProtoMessage() {}

func (x *CMsgGCToClientMatchmakingStopped) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientMatchmakingStopped.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientMatchmakingStopped) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgGCToClientMatchmakingStopped) GetReason() CMsgGCToClientMatchmakingStopped_EReason {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return CMsgGCToClientMatchmakingStopped_k_EResult_Unspecified
}

type CMsgClientToGCLeaveLobby struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyId *uint64 `protobuf:"varint,1,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
}

func (x *CMsgClientToGCLeaveLobby) Reset() {
	*x = CMsgClientToGCLeaveLobby{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCLeaveLobby) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCLeaveLobby) ProtoMessage() {}

func (x *CMsgClientToGCLeaveLobby) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCLeaveLobby.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCLeaveLobby) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgClientToGCLeaveLobby) GetLobbyId() uint64 {
	if x != nil && x.LobbyId != nil {
		return *x.LobbyId
	}
	return 0
}

type CMsgClientToGCLeaveLobbyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientToGCLeaveLobbyResponse) Reset() {
	*x = CMsgClientToGCLeaveLobbyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCLeaveLobbyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCLeaveLobbyResponse) ProtoMessage() {}

func (x *CMsgClientToGCLeaveLobbyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCLeaveLobbyResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCLeaveLobbyResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{10}
}

type CMsgClientWelcomeCitadel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency             *uint32             `protobuf:"varint,1,opt,name=currency" json:"currency,omitempty"`
	ExtraMessages        []*CExtraMsgBlock   `protobuf:"bytes,2,rep,name=extra_messages,json=extraMessages" json:"extra_messages,omitempty"`
	CompatibilityVersion *uint32             `protobuf:"varint,3,opt,name=compatibility_version,json=compatibilityVersion" json:"compatibility_version,omitempty"`
	RegionMode           *ECitadelRegionMode `protobuf:"varint,4,opt,name=region_mode,json=regionMode,enum=dota.ECitadelRegionMode" json:"region_mode,omitempty"`
}

func (x *CMsgClientWelcomeCitadel) Reset() {
	*x = CMsgClientWelcomeCitadel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientWelcomeCitadel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientWelcomeCitadel) ProtoMessage() {}

func (x *CMsgClientWelcomeCitadel) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientWelcomeCitadel.ProtoReflect.Descriptor instead.
func (*CMsgClientWelcomeCitadel) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgClientWelcomeCitadel) GetCurrency() uint32 {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return 0
}

func (x *CMsgClientWelcomeCitadel) GetExtraMessages() []*CExtraMsgBlock {
	if x != nil {
		return x.ExtraMessages
	}
	return nil
}

func (x *CMsgClientWelcomeCitadel) GetCompatibilityVersion() uint32 {
	if x != nil && x.CompatibilityVersion != nil {
		return *x.CompatibilityVersion
	}
	return 0
}

func (x *CMsgClientWelcomeCitadel) GetRegionMode() ECitadelRegionMode {
	if x != nil && x.RegionMode != nil {
		return *x.RegionMode
	}
	return ECitadelRegionMode_k_ECitadelRegionMode_ROW
}

type CMsgClientToGCIsInMatchmaking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientToGCIsInMatchmaking) Reset() {
	*x = CMsgClientToGCIsInMatchmaking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCIsInMatchmaking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCIsInMatchmaking) ProtoMessage() {}

func (x *CMsgClientToGCIsInMatchmaking) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCIsInMatchmaking.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCIsInMatchmaking) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{12}
}

type CMsgClientToGCIsInMatchmakingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InMatchmaking *bool `protobuf:"varint,1,opt,name=in_matchmaking,json=inMatchmaking" json:"in_matchmaking,omitempty"`
}

func (x *CMsgClientToGCIsInMatchmakingResponse) Reset() {
	*x = CMsgClientToGCIsInMatchmakingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCIsInMatchmakingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCIsInMatchmakingResponse) ProtoMessage() {}

func (x *CMsgClientToGCIsInMatchmakingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCIsInMatchmakingResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCIsInMatchmakingResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgClientToGCIsInMatchmakingResponse) GetInMatchmaking() bool {
	if x != nil && x.InMatchmaking != nil {
		return *x.InMatchmaking
	}
	return false
}

type CMsgDevMatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime           *uint32                         `protobuf:"varint,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	WinningTeam         *ECitadelLobbyTeam              `protobuf:"varint,2,opt,name=winning_team,json=winningTeam,enum=dota.ECitadelLobbyTeam" json:"winning_team,omitempty"`
	MatchId             *uint64                         `protobuf:"varint,3,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Players             []*CMsgDevMatchInfo_MatchPlayer `protobuf:"bytes,4,rep,name=players" json:"players,omitempty"`
	LobbyId             *uint64                         `protobuf:"fixed64,5,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	NetWorthTeam_0      *uint32                         `protobuf:"varint,9,opt,name=net_worth_team_0,json=netWorthTeam0" json:"net_worth_team_0,omitempty"`
	NetWorthTeam_1      *uint32                         `protobuf:"varint,10,opt,name=net_worth_team_1,json=netWorthTeam1" json:"net_worth_team_1,omitempty"`
	DurationS           *uint32                         `protobuf:"varint,11,opt,name=duration_s,json=durationS" json:"duration_s,omitempty"`
	Spectators          *uint32                         `protobuf:"varint,12,opt,name=spectators" json:"spectators,omitempty"`
	OpenSpectatorSlots  *uint32                         `protobuf:"varint,13,opt,name=open_spectator_slots,json=openSpectatorSlots" json:"open_spectator_slots,omitempty"`
	ObjectivesMaskTeam0 *uint64                         `protobuf:"varint,14,opt,name=objectives_mask_team0,json=objectivesMaskTeam0" json:"objectives_mask_team0,omitempty"`
	ObjectivesMaskTeam1 *uint64                         `protobuf:"varint,15,opt,name=objectives_mask_team1,json=objectivesMaskTeam1" json:"objectives_mask_team1,omitempty"`
	MatchMode           *ECitadelMatchMode              `protobuf:"varint,16,opt,name=match_mode,json=matchMode,enum=dota.ECitadelMatchMode" json:"match_mode,omitempty"`
	GameMode            *ECitadelGameMode               `protobuf:"varint,17,opt,name=game_mode,json=gameMode,enum=dota.ECitadelGameMode" json:"game_mode,omitempty"`
	MatchScore          *uint32                         `protobuf:"varint,18,opt,name=match_score,json=matchScore" json:"match_score,omitempty"`
	RegionMode          *ECitadelRegionMode             `protobuf:"varint,19,opt,name=region_mode,json=regionMode,enum=dota.ECitadelRegionMode" json:"region_mode,omitempty"`
}

func (x *CMsgDevMatchInfo) Reset() {
	*x = CMsgDevMatchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDevMatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDevMatchInfo) ProtoMessage() {}

func (x *CMsgDevMatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDevMatchInfo.ProtoReflect.Descriptor instead.
func (*CMsgDevMatchInfo) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgDevMatchInfo) GetStartTime() uint32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CMsgDevMatchInfo) GetWinningTeam() ECitadelLobbyTeam {
	if x != nil && x.WinningTeam != nil {
		return *x.WinningTeam
	}
	return ECitadelLobbyTeam_k_ECitadelLobbyTeam_Team0
}

func (x *CMsgDevMatchInfo) GetMatchId() uint64 {
	if x != nil && x.MatchId != nil {
		return *x.MatchId
	}
	return 0
}

func (x *CMsgDevMatchInfo) GetPlayers() []*CMsgDevMatchInfo_MatchPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *CMsgDevMatchInfo) GetLobbyId() uint64 {
	if x != nil && x.LobbyId != nil {
		return *x.LobbyId
	}
	return 0
}

func (x *CMsgDevMatchInfo) GetNetWorthTeam_0() uint32 {
	if x != nil && x.NetWorthTeam_0 != nil {
		return *x.NetWorthTeam_0
	}
	return 0
}

func (x *CMsgDevMatchInfo) GetNetWorthTeam_1() uint32 {
	if x != nil && x.NetWorthTeam_1 != nil {
		return *x.NetWorthTeam_1
	}
	return 0
}

func (x *CMsgDevMatchInfo) GetDurationS() uint32 {
	if x != nil && x.DurationS != nil {
		return *x.DurationS
	}
	return 0
}

func (x *CMsgDevMatchInfo) GetSpectators() uint32 {
	if x != nil && x.Spectators != nil {
		return *x.Spectators
	}
	return 0
}

func (x *CMsgDevMatchInfo) GetOpenSpectatorSlots() uint32 {
	if x != nil && x.OpenSpectatorSlots != nil {
		return *x.OpenSpectatorSlots
	}
	return 0
}

func (x *CMsgDevMatchInfo) GetObjectivesMaskTeam0() uint64 {
	if x != nil && x.ObjectivesMaskTeam0 != nil {
		return *x.ObjectivesMaskTeam0
	}
	return 0
}

func (x *CMsgDevMatchInfo) GetObjectivesMaskTeam1() uint64 {
	if x != nil && x.ObjectivesMaskTeam1 != nil {
		return *x.ObjectivesMaskTeam1
	}
	return 0
}

func (x *CMsgDevMatchInfo) GetMatchMode() ECitadelMatchMode {
	if x != nil && x.MatchMode != nil {
		return *x.MatchMode
	}
	return ECitadelMatchMode_k_ECitadelMatchMode_Invalid
}

func (x *CMsgDevMatchInfo) GetGameMode() ECitadelGameMode {
	if x != nil && x.GameMode != nil {
		return *x.GameMode
	}
	return ECitadelGameMode_k_ECitadelGameMode_Invalid
}

func (x *CMsgDevMatchInfo) GetMatchScore() uint32 {
	if x != nil && x.MatchScore != nil {
		return *x.MatchScore
	}
	return 0
}

func (x *CMsgDevMatchInfo) GetRegionMode() ECitadelRegionMode {
	if x != nil && x.RegionMode != nil {
		return *x.RegionMode
	}
	return ECitadelRegionMode_k_ECitadelRegionMode_ROW
}

type CMsgGCToClientDevPlaytestStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMmEnabled         *bool                                            `protobuf:"varint,4,opt,name=is_mm_enabled,json=isMmEnabled" json:"is_mm_enabled,omitempty"`
	LockedHeroes        *bool                                            `protobuf:"varint,8,opt,name=locked_heroes,json=lockedHeroes" json:"locked_heroes,omitempty"`
	PartySharedHeroes   *bool                                            `protobuf:"varint,9,opt,name=party_shared_heroes,json=partySharedHeroes" json:"party_shared_heroes,omitempty"`
	HeroWhitelists      []*CMsgGCToClientDevPlaytestStatus_HeroWhitelist `protobuf:"bytes,10,rep,name=hero_whitelists,json=heroWhitelists" json:"hero_whitelists,omitempty"`
	CoopMmMinPlayers    *uint32                                          `protobuf:"varint,13,opt,name=coop_mm_min_players,json=coopMmMinPlayers" json:"coop_mm_min_players,omitempty"`
	MmPauseTime         *uint32                                          `protobuf:"varint,14,opt,name=mm_pause_time,json=mmPauseTime" json:"mm_pause_time,omitempty"`
	ValidClientVersions []uint32                                         `protobuf:"varint,15,rep,name=valid_client_versions,json=validClientVersions" json:"valid_client_versions,omitempty"`
	ActiveMatchCount    *uint32                                          `protobuf:"varint,21,opt,name=active_match_count,json=activeMatchCount" json:"active_match_count,omitempty"`
	Regions             []*CMsgGCToClientDevPlaytestStatus_RegionInfo    `protobuf:"bytes,22,rep,name=regions" json:"regions,omitempty"`
}

func (x *CMsgGCToClientDevPlaytestStatus) Reset() {
	*x = CMsgGCToClientDevPlaytestStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientDevPlaytestStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientDevPlaytestStatus) ProtoMessage() {}

func (x *CMsgGCToClientDevPlaytestStatus) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientDevPlaytestStatus.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientDevPlaytestStatus) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgGCToClientDevPlaytestStatus) GetIsMmEnabled() bool {
	if x != nil && x.IsMmEnabled != nil {
		return *x.IsMmEnabled
	}
	return false
}

func (x *CMsgGCToClientDevPlaytestStatus) GetLockedHeroes() bool {
	if x != nil && x.LockedHeroes != nil {
		return *x.LockedHeroes
	}
	return false
}

func (x *CMsgGCToClientDevPlaytestStatus) GetPartySharedHeroes() bool {
	if x != nil && x.PartySharedHeroes != nil {
		return *x.PartySharedHeroes
	}
	return false
}

func (x *CMsgGCToClientDevPlaytestStatus) GetHeroWhitelists() []*CMsgGCToClientDevPlaytestStatus_HeroWhitelist {
	if x != nil {
		return x.HeroWhitelists
	}
	return nil
}

func (x *CMsgGCToClientDevPlaytestStatus) GetCoopMmMinPlayers() uint32 {
	if x != nil && x.CoopMmMinPlayers != nil {
		return *x.CoopMmMinPlayers
	}
	return 0
}

func (x *CMsgGCToClientDevPlaytestStatus) GetMmPauseTime() uint32 {
	if x != nil && x.MmPauseTime != nil {
		return *x.MmPauseTime
	}
	return 0
}

func (x *CMsgGCToClientDevPlaytestStatus) GetValidClientVersions() []uint32 {
	if x != nil {
		return x.ValidClientVersions
	}
	return nil
}

func (x *CMsgGCToClientDevPlaytestStatus) GetActiveMatchCount() uint32 {
	if x != nil && x.ActiveMatchCount != nil {
		return *x.ActiveMatchCount
	}
	return 0
}

func (x *CMsgGCToClientDevPlaytestStatus) GetRegions() []*CMsgGCToClientDevPlaytestStatus_RegionInfo {
	if x != nil {
		return x.Regions
	}
	return nil
}

type CMsgGCToClientSDRTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket *string `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
}

func (x *CMsgGCToClientSDRTicket) Reset() {
	*x = CMsgGCToClientSDRTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientSDRTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientSDRTicket) ProtoMessage() {}

func (x *CMsgGCToClientSDRTicket) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientSDRTicket.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientSDRTicket) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgGCToClientSDRTicket) GetTicket() string {
	if x != nil && x.Ticket != nil {
		return *x.Ticket
	}
	return ""
}

type CMsgClientToGCReplacementSDRTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyId *uint64 `protobuf:"fixed64,1,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
}

func (x *CMsgClientToGCReplacementSDRTicket) Reset() {
	*x = CMsgClientToGCReplacementSDRTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCReplacementSDRTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCReplacementSDRTicket) ProtoMessage() {}

func (x *CMsgClientToGCReplacementSDRTicket) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCReplacementSDRTicket.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCReplacementSDRTicket) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgClientToGCReplacementSDRTicket) GetLobbyId() uint64 {
	if x != nil && x.LobbyId != nil {
		return *x.LobbyId
	}
	return 0
}

type CMsgClientToGCReplacementSDRTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket       *string `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
	ErrorMessage *string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
}

func (x *CMsgClientToGCReplacementSDRTicketResponse) Reset() {
	*x = CMsgClientToGCReplacementSDRTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCReplacementSDRTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCReplacementSDRTicketResponse) ProtoMessage() {}

func (x *CMsgClientToGCReplacementSDRTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCReplacementSDRTicketResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCReplacementSDRTicketResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgClientToGCReplacementSDRTicketResponse) GetTicket() string {
	if x != nil && x.Ticket != nil {
		return *x.Ticket
	}
	return ""
}

func (x *CMsgClientToGCReplacementSDRTicketResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type CMsgClientToGCSetServerConVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvarName  *string `protobuf:"bytes,1,opt,name=convar_name,json=convarName" json:"convar_name,omitempty"`
	ConvarValue *string `protobuf:"bytes,2,opt,name=convar_value,json=convarValue" json:"convar_value,omitempty"`
	LobbyId     *uint64 `protobuf:"fixed64,3,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
}

func (x *CMsgClientToGCSetServerConVar) Reset() {
	*x = CMsgClientToGCSetServerConVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSetServerConVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSetServerConVar) ProtoMessage() {}

func (x *CMsgClientToGCSetServerConVar) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSetServerConVar.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSetServerConVar) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgClientToGCSetServerConVar) GetConvarName() string {
	if x != nil && x.ConvarName != nil {
		return *x.ConvarName
	}
	return ""
}

func (x *CMsgClientToGCSetServerConVar) GetConvarValue() string {
	if x != nil && x.ConvarValue != nil {
		return *x.ConvarValue
	}
	return ""
}

func (x *CMsgClientToGCSetServerConVar) GetLobbyId() uint64 {
	if x != nil && x.LobbyId != nil {
		return *x.LobbyId
	}
	return 0
}

type CMsgClientToGCSetServerConVarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (x *CMsgClientToGCSetServerConVarResponse) Reset() {
	*x = CMsgClientToGCSetServerConVarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSetServerConVarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSetServerConVarResponse) ProtoMessage() {}

func (x *CMsgClientToGCSetServerConVarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSetServerConVarResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSetServerConVarResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgClientToGCSetServerConVarResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type CMsgClientToGCPostMatchSurveyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostMatchSurvey []*CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey `protobuf:"bytes,1,rep,name=post_match_survey,json=postMatchSurvey" json:"post_match_survey,omitempty"`
	MatchId         *uint64                                                  `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
}

func (x *CMsgClientToGCPostMatchSurveyResponse) Reset() {
	*x = CMsgClientToGCPostMatchSurveyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPostMatchSurveyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPostMatchSurveyResponse) ProtoMessage() {}

func (x *CMsgClientToGCPostMatchSurveyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPostMatchSurveyResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPostMatchSurveyResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgClientToGCPostMatchSurveyResponse) GetPostMatchSurvey() []*CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey {
	if x != nil {
		return x.PostMatchSurvey
	}
	return nil
}

func (x *CMsgClientToGCPostMatchSurveyResponse) GetMatchId() uint64 {
	if x != nil && x.MatchId != nil {
		return *x.MatchId
	}
	return 0
}

type CMsgPartyMMInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform      *EGCPlatform                `protobuf:"varint,1,opt,name=platform,enum=dota.EGCPlatform" json:"platform,omitempty"`
	PingTimes     *CMsgRegionPingTimesClient  `protobuf:"bytes,2,opt,name=ping_times,json=pingTimes" json:"ping_times,omitempty"`
	ClientVersion *uint32                     `protobuf:"varint,3,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	RegionMode    *ECitadelRegionMode         `protobuf:"varint,4,opt,name=region_mode,json=regionMode,enum=dota.ECitadelRegionMode" json:"region_mode,omitempty"`
	HeroRoster    *CMsgHeroSelectionMatchInfo `protobuf:"bytes,5,opt,name=hero_roster,json=heroRoster" json:"hero_roster,omitempty"`
}

func (x *CMsgPartyMMInfo) Reset() {
	*x = CMsgPartyMMInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPartyMMInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPartyMMInfo) ProtoMessage() {}

func (x *CMsgPartyMMInfo) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPartyMMInfo.ProtoReflect.Descriptor instead.
func (*CMsgPartyMMInfo) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgPartyMMInfo) GetPlatform() EGCPlatform {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return EGCPlatform_k_eGCPlatform_None
}

func (x *CMsgPartyMMInfo) GetPingTimes() *CMsgRegionPingTimesClient {
	if x != nil {
		return x.PingTimes
	}
	return nil
}

func (x *CMsgPartyMMInfo) GetClientVersion() uint32 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return 0
}

func (x *CMsgPartyMMInfo) GetRegionMode() ECitadelRegionMode {
	if x != nil && x.RegionMode != nil {
		return *x.RegionMode
	}
	return ECitadelRegionMode_k_ECitadelRegionMode_ROW
}

func (x *CMsgPartyMMInfo) GetHeroRoster() *CMsgHeroSelectionMatchInfo {
	if x != nil {
		return x.HeroRoster
	}
	return nil
}

type CMsgClientToGCPartyCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyMmInfo      *CMsgPartyMMInfo `protobuf:"bytes,1,opt,name=party_mm_info,json=partyMmInfo" json:"party_mm_info,omitempty"`
	InviteAccountId  *uint32          `protobuf:"varint,3,opt,name=invite_account_id,json=inviteAccountId" json:"invite_account_id,omitempty"`
	DisablePartyCode *bool            `protobuf:"varint,4,opt,name=disable_party_code,json=disablePartyCode" json:"disable_party_code,omitempty"`
}

func (x *CMsgClientToGCPartyCreate) Reset() {
	*x = CMsgClientToGCPartyCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyCreate) ProtoMessage() {}

func (x *CMsgClientToGCPartyCreate) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyCreate.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyCreate) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgClientToGCPartyCreate) GetPartyMmInfo() *CMsgPartyMMInfo {
	if x != nil {
		return x.PartyMmInfo
	}
	return nil
}

func (x *CMsgClientToGCPartyCreate) GetInviteAccountId() uint32 {
	if x != nil && x.InviteAccountId != nil {
		return *x.InviteAccountId
	}
	return 0
}

func (x *CMsgClientToGCPartyCreate) GetDisablePartyCode() bool {
	if x != nil && x.DisablePartyCode != nil {
		return *x.DisablePartyCode
	}
	return false
}

type CMsgClientToGCPartyCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *CMsgClientToGCPartyCreateResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCPartyCreateResponse_EResponse" json:"result,omitempty"`
	PartyId *uint64                                      `protobuf:"fixed64,2,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
}

func (x *CMsgClientToGCPartyCreateResponse) Reset() {
	*x = CMsgClientToGCPartyCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyCreateResponse) ProtoMessage() {}

func (x *CMsgClientToGCPartyCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyCreateResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyCreateResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{24}
}

func (x *CMsgClientToGCPartyCreateResponse) GetResult() CMsgClientToGCPartyCreateResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCPartyCreateResponse_k_eInternalError
}

func (x *CMsgClientToGCPartyCreateResponse) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

type CMsgClientToGCPartyLeave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId *uint64 `protobuf:"fixed64,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
}

func (x *CMsgClientToGCPartyLeave) Reset() {
	*x = CMsgClientToGCPartyLeave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyLeave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyLeave) ProtoMessage() {}

func (x *CMsgClientToGCPartyLeave) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyLeave.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyLeave) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{25}
}

func (x *CMsgClientToGCPartyLeave) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

type CMsgClientToGCPartyLeaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCPartyLeaveResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCPartyLeaveResponse_EResponse" json:"result,omitempty"`
}

func (x *CMsgClientToGCPartyLeaveResponse) Reset() {
	*x = CMsgClientToGCPartyLeaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyLeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyLeaveResponse) ProtoMessage() {}

func (x *CMsgClientToGCPartyLeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyLeaveResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyLeaveResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{26}
}

func (x *CMsgClientToGCPartyLeaveResponse) GetResult() CMsgClientToGCPartyLeaveResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCPartyLeaveResponse_k_eInternalError
}

type CMsgClientToGCPartyJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId     *uint64          `protobuf:"fixed64,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	IsRejoin    *bool            `protobuf:"varint,2,opt,name=is_rejoin,json=isRejoin" json:"is_rejoin,omitempty"`
	PartyMmInfo *CMsgPartyMMInfo `protobuf:"bytes,3,opt,name=party_mm_info,json=partyMmInfo" json:"party_mm_info,omitempty"`
	StartReady  *bool            `protobuf:"varint,4,opt,name=start_ready,json=startReady" json:"start_ready,omitempty"`
}

func (x *CMsgClientToGCPartyJoin) Reset() {
	*x = CMsgClientToGCPartyJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyJoin) ProtoMessage() {}

func (x *CMsgClientToGCPartyJoin) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyJoin.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyJoin) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{27}
}

func (x *CMsgClientToGCPartyJoin) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

func (x *CMsgClientToGCPartyJoin) GetIsRejoin() bool {
	if x != nil && x.IsRejoin != nil {
		return *x.IsRejoin
	}
	return false
}

func (x *CMsgClientToGCPartyJoin) GetPartyMmInfo() *CMsgPartyMMInfo {
	if x != nil {
		return x.PartyMmInfo
	}
	return nil
}

func (x *CMsgClientToGCPartyJoin) GetStartReady() bool {
	if x != nil && x.StartReady != nil {
		return *x.StartReady
	}
	return false
}

type CMsgClientToGCPartyJoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCPartyJoinResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCPartyJoinResponse_EResponse" json:"result,omitempty"`
}

func (x *CMsgClientToGCPartyJoinResponse) Reset() {
	*x = CMsgClientToGCPartyJoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyJoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyJoinResponse) ProtoMessage() {}

func (x *CMsgClientToGCPartyJoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyJoinResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyJoinResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{28}
}

func (x *CMsgClientToGCPartyJoinResponse) GetResult() CMsgClientToGCPartyJoinResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCPartyJoinResponse_k_eInternalError
}

type CMsgClientToGCPartyAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId         *uint64                            `protobuf:"fixed64,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	TargetAccountId *uint32                            `protobuf:"varint,2,opt,name=target_account_id,json=targetAccountId" json:"target_account_id,omitempty"`
	ActionId        *CMsgClientToGCPartyAction_EAction `protobuf:"varint,3,opt,name=action_id,json=actionId,enum=dota.CMsgClientToGCPartyAction_EAction" json:"action_id,omitempty"`
	UintValue       *uint64                            `protobuf:"varint,4,opt,name=uint_value,json=uintValue" json:"uint_value,omitempty"`
	BoolValue       *bool                              `protobuf:"varint,5,opt,name=bool_value,json=boolValue" json:"bool_value,omitempty"`
}

func (x *CMsgClientToGCPartyAction) Reset() {
	*x = CMsgClientToGCPartyAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyAction) ProtoMessage() {}

func (x *CMsgClientToGCPartyAction) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyAction.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyAction) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{29}
}

func (x *CMsgClientToGCPartyAction) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

func (x *CMsgClientToGCPartyAction) GetTargetAccountId() uint32 {
	if x != nil && x.TargetAccountId != nil {
		return *x.TargetAccountId
	}
	return 0
}

func (x *CMsgClientToGCPartyAction) GetActionId() CMsgClientToGCPartyAction_EAction {
	if x != nil && x.ActionId != nil {
		return *x.ActionId
	}
	return CMsgClientToGCPartyAction_k_eKickUser
}

func (x *CMsgClientToGCPartyAction) GetUintValue() uint64 {
	if x != nil && x.UintValue != nil {
		return *x.UintValue
	}
	return 0
}

func (x *CMsgClientToGCPartyAction) GetBoolValue() bool {
	if x != nil && x.BoolValue != nil {
		return *x.BoolValue
	}
	return false
}

type CMsgClientToGCPartyActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCPartyActionResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCPartyActionResponse_EResponse" json:"result,omitempty"`
}

func (x *CMsgClientToGCPartyActionResponse) Reset() {
	*x = CMsgClientToGCPartyActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyActionResponse) ProtoMessage() {}

func (x *CMsgClientToGCPartyActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyActionResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyActionResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{30}
}

func (x *CMsgClientToGCPartyActionResponse) GetResult() CMsgClientToGCPartyActionResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCPartyActionResponse_k_eInternalError
}

type CMsgClientToGCPartySetMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId          *uint64                `protobuf:"fixed64,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	MatchMode        *ECitadelMatchMode     `protobuf:"varint,2,opt,name=match_mode,json=matchMode,enum=dota.ECitadelMatchMode" json:"match_mode,omitempty"`
	GameMode         *ECitadelGameMode      `protobuf:"varint,3,opt,name=game_mode,json=gameMode,enum=dota.ECitadelGameMode" json:"game_mode,omitempty"`
	BotDifficulty    *ECitadelBotDifficulty `protobuf:"varint,4,opt,name=bot_difficulty,json=botDifficulty,enum=dota.ECitadelBotDifficulty" json:"bot_difficulty,omitempty"`
	DevServerCommand *string                `protobuf:"bytes,5,opt,name=dev_server_command,json=devServerCommand" json:"dev_server_command,omitempty"`
	RegionMode       *ECitadelRegionMode    `protobuf:"varint,6,opt,name=region_mode,json=regionMode,enum=dota.ECitadelRegionMode" json:"region_mode,omitempty"`
}

func (x *CMsgClientToGCPartySetMode) Reset() {
	*x = CMsgClientToGCPartySetMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartySetMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartySetMode) ProtoMessage() {}

func (x *CMsgClientToGCPartySetMode) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartySetMode.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartySetMode) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{31}
}

func (x *CMsgClientToGCPartySetMode) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

func (x *CMsgClientToGCPartySetMode) GetMatchMode() ECitadelMatchMode {
	if x != nil && x.MatchMode != nil {
		return *x.MatchMode
	}
	return ECitadelMatchMode_k_ECitadelMatchMode_Invalid
}

func (x *CMsgClientToGCPartySetMode) GetGameMode() ECitadelGameMode {
	if x != nil && x.GameMode != nil {
		return *x.GameMode
	}
	return ECitadelGameMode_k_ECitadelGameMode_Invalid
}

func (x *CMsgClientToGCPartySetMode) GetBotDifficulty() ECitadelBotDifficulty {
	if x != nil && x.BotDifficulty != nil {
		return *x.BotDifficulty
	}
	return ECitadelBotDifficulty_k_ECitadelBotDifficulty_None
}

func (x *CMsgClientToGCPartySetMode) GetDevServerCommand() string {
	if x != nil && x.DevServerCommand != nil {
		return *x.DevServerCommand
	}
	return ""
}

func (x *CMsgClientToGCPartySetMode) GetRegionMode() ECitadelRegionMode {
	if x != nil && x.RegionMode != nil {
		return *x.RegionMode
	}
	return ECitadelRegionMode_k_ECitadelRegionMode_ROW
}

type CMsgClientToGCPartySetModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *CMsgClientToGCPartySetModeResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCPartySetModeResponse_EResponse" json:"result,omitempty"`
	TimeStamp *uint32                                       `protobuf:"varint,2,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	AccountId *uint32                                       `protobuf:"varint,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *CMsgClientToGCPartySetModeResponse) Reset() {
	*x = CMsgClientToGCPartySetModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartySetModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartySetModeResponse) ProtoMessage() {}

func (x *CMsgClientToGCPartySetModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartySetModeResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartySetModeResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{32}
}

func (x *CMsgClientToGCPartySetModeResponse) GetResult() CMsgClientToGCPartySetModeResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCPartySetModeResponse_k_eInternalError
}

func (x *CMsgClientToGCPartySetModeResponse) GetTimeStamp() uint32 {
	if x != nil && x.TimeStamp != nil {
		return *x.TimeStamp
	}
	return 0
}

func (x *CMsgClientToGCPartySetModeResponse) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

type CMsgClientToGCPartyStartMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId *uint64 `protobuf:"fixed64,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
}

func (x *CMsgClientToGCPartyStartMatch) Reset() {
	*x = CMsgClientToGCPartyStartMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyStartMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyStartMatch) ProtoMessage() {}

func (x *CMsgClientToGCPartyStartMatch) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyStartMatch.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyStartMatch) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{33}
}

func (x *CMsgClientToGCPartyStartMatch) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

type CMsgClientToGCPartyStartMatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *CMsgClientToGCPartyStartMatchResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCPartyStartMatchResponse_EResponse" json:"result,omitempty"`
	AccountId *uint32                                          `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *CMsgClientToGCPartyStartMatchResponse) Reset() {
	*x = CMsgClientToGCPartyStartMatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyStartMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyStartMatchResponse) ProtoMessage() {}

func (x *CMsgClientToGCPartyStartMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyStartMatchResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyStartMatchResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{34}
}

func (x *CMsgClientToGCPartyStartMatchResponse) GetResult() CMsgClientToGCPartyStartMatchResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCPartyStartMatchResponse_k_eInternalError
}

func (x *CMsgClientToGCPartyStartMatchResponse) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

type CMsgClientToGCPartyInviteUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId         *uint64 `protobuf:"fixed64,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	InviteAccountId *uint32 `protobuf:"varint,2,opt,name=invite_account_id,json=inviteAccountId" json:"invite_account_id,omitempty"`
}

func (x *CMsgClientToGCPartyInviteUser) Reset() {
	*x = CMsgClientToGCPartyInviteUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyInviteUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyInviteUser) ProtoMessage() {}

func (x *CMsgClientToGCPartyInviteUser) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyInviteUser.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyInviteUser) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{35}
}

func (x *CMsgClientToGCPartyInviteUser) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

func (x *CMsgClientToGCPartyInviteUser) GetInviteAccountId() uint32 {
	if x != nil && x.InviteAccountId != nil {
		return *x.InviteAccountId
	}
	return 0
}

type CMsgClientToGCPartyInviteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     *CMsgClientToGCPartyInviteUserResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCPartyInviteUserResponse_EResponse" json:"result,omitempty"`
	UserOnline *bool                                            `protobuf:"varint,2,opt,name=user_online,json=userOnline" json:"user_online,omitempty"`
}

func (x *CMsgClientToGCPartyInviteUserResponse) Reset() {
	*x = CMsgClientToGCPartyInviteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyInviteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyInviteUserResponse) ProtoMessage() {}

func (x *CMsgClientToGCPartyInviteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyInviteUserResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyInviteUserResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{36}
}

func (x *CMsgClientToGCPartyInviteUserResponse) GetResult() CMsgClientToGCPartyInviteUserResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCPartyInviteUserResponse_k_eInternalError
}

func (x *CMsgClientToGCPartyInviteUserResponse) GetUserOnline() bool {
	if x != nil && x.UserOnline != nil {
		return *x.UserOnline
	}
	return false
}

type CMsgGCToClientPartyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId            *uint64                          `protobuf:"fixed64,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	Event              *CMsgGCToClientPartyEvent_EEvent `protobuf:"varint,2,opt,name=event,enum=dota.CMsgGCToClientPartyEvent_EEvent" json:"event,omitempty"`
	InitiatorAccountId *uint32                          `protobuf:"varint,3,opt,name=initiator_account_id,json=initiatorAccountId" json:"initiator_account_id,omitempty"`
	TargetAccountId    *uint32                          `protobuf:"varint,4,opt,name=target_account_id,json=targetAccountId" json:"target_account_id,omitempty"`
	BytesData          []byte                           `protobuf:"bytes,5,opt,name=bytes_data,json=bytesData" json:"bytes_data,omitempty"`
	StrData            *string                          `protobuf:"bytes,6,opt,name=str_data,json=strData" json:"str_data,omitempty"`
	UintData           *uint64                          `protobuf:"varint,7,opt,name=uint_data,json=uintData" json:"uint_data,omitempty"`
}

func (x *CMsgGCToClientPartyEvent) Reset() {
	*x = CMsgGCToClientPartyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientPartyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientPartyEvent) ProtoMessage() {}

func (x *CMsgGCToClientPartyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientPartyEvent.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientPartyEvent) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{37}
}

func (x *CMsgGCToClientPartyEvent) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

func (x *CMsgGCToClientPartyEvent) GetEvent() CMsgGCToClientPartyEvent_EEvent {
	if x != nil && x.Event != nil {
		return *x.Event
	}
	return CMsgGCToClientPartyEvent_k_ePlayerKicked
}

func (x *CMsgGCToClientPartyEvent) GetInitiatorAccountId() uint32 {
	if x != nil && x.InitiatorAccountId != nil {
		return *x.InitiatorAccountId
	}
	return 0
}

func (x *CMsgGCToClientPartyEvent) GetTargetAccountId() uint32 {
	if x != nil && x.TargetAccountId != nil {
		return *x.TargetAccountId
	}
	return 0
}

func (x *CMsgGCToClientPartyEvent) GetBytesData() []byte {
	if x != nil {
		return x.BytesData
	}
	return nil
}

func (x *CMsgGCToClientPartyEvent) GetStrData() string {
	if x != nil && x.StrData != nil {
		return *x.StrData
	}
	return ""
}

func (x *CMsgGCToClientPartyEvent) GetUintData() uint64 {
	if x != nil && x.UintData != nil {
		return *x.UintData
	}
	return 0
}

type CMsgGCToClientCanRejoinParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId *uint64 `protobuf:"fixed64,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
}

func (x *CMsgGCToClientCanRejoinParty) Reset() {
	*x = CMsgGCToClientCanRejoinParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientCanRejoinParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientCanRejoinParty) ProtoMessage() {}

func (x *CMsgGCToClientCanRejoinParty) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientCanRejoinParty.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientCanRejoinParty) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{38}
}

func (x *CMsgGCToClientCanRejoinParty) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

type CMsgClientToGCPartyJoinViaCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinCode    *uint64          `protobuf:"varint,1,opt,name=join_code,json=joinCode" json:"join_code,omitempty"`
	PartyMmInfo *CMsgPartyMMInfo `protobuf:"bytes,2,opt,name=party_mm_info,json=partyMmInfo" json:"party_mm_info,omitempty"`
	StartReady  *bool            `protobuf:"varint,3,opt,name=start_ready,json=startReady" json:"start_ready,omitempty"`
}

func (x *CMsgClientToGCPartyJoinViaCode) Reset() {
	*x = CMsgClientToGCPartyJoinViaCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyJoinViaCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyJoinViaCode) ProtoMessage() {}

func (x *CMsgClientToGCPartyJoinViaCode) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyJoinViaCode.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyJoinViaCode) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{39}
}

func (x *CMsgClientToGCPartyJoinViaCode) GetJoinCode() uint64 {
	if x != nil && x.JoinCode != nil {
		return *x.JoinCode
	}
	return 0
}

func (x *CMsgClientToGCPartyJoinViaCode) GetPartyMmInfo() *CMsgPartyMMInfo {
	if x != nil {
		return x.PartyMmInfo
	}
	return nil
}

func (x *CMsgClientToGCPartyJoinViaCode) GetStartReady() bool {
	if x != nil && x.StartReady != nil {
		return *x.StartReady
	}
	return false
}

type CMsgClientToGCPartyJoinViaCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *CMsgClientToGCPartyJoinResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCPartyJoinResponse_EResponse" json:"result,omitempty"`
	PartyId *uint64                                    `protobuf:"fixed64,2,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
}

func (x *CMsgClientToGCPartyJoinViaCodeResponse) Reset() {
	*x = CMsgClientToGCPartyJoinViaCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyJoinViaCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyJoinViaCodeResponse) ProtoMessage() {}

func (x *CMsgClientToGCPartyJoinViaCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyJoinViaCodeResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyJoinViaCodeResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{40}
}

func (x *CMsgClientToGCPartyJoinViaCodeResponse) GetResult() CMsgClientToGCPartyJoinResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCPartyJoinResponse_k_eInternalError
}

func (x *CMsgClientToGCPartyJoinViaCodeResponse) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

type CMsgClientToGCPartyUpdateRoster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId    *uint64                     `protobuf:"fixed64,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	HeroRoster *CMsgHeroSelectionMatchInfo `protobuf:"bytes,2,opt,name=hero_roster,json=heroRoster" json:"hero_roster,omitempty"`
}

func (x *CMsgClientToGCPartyUpdateRoster) Reset() {
	*x = CMsgClientToGCPartyUpdateRoster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyUpdateRoster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyUpdateRoster) ProtoMessage() {}

func (x *CMsgClientToGCPartyUpdateRoster) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyUpdateRoster.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyUpdateRoster) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{41}
}

func (x *CMsgClientToGCPartyUpdateRoster) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

func (x *CMsgClientToGCPartyUpdateRoster) GetHeroRoster() *CMsgHeroSelectionMatchInfo {
	if x != nil {
		return x.HeroRoster
	}
	return nil
}

type CMsgClientToGCPartyUpdateRosterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCPartyUpdateRosterResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCPartyUpdateRosterResponse_EResponse" json:"result,omitempty"`
}

func (x *CMsgClientToGCPartyUpdateRosterResponse) Reset() {
	*x = CMsgClientToGCPartyUpdateRosterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartyUpdateRosterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartyUpdateRosterResponse) ProtoMessage() {}

func (x *CMsgClientToGCPartyUpdateRosterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartyUpdateRosterResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartyUpdateRosterResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{42}
}

func (x *CMsgClientToGCPartyUpdateRosterResponse) GetResult() CMsgClientToGCPartyUpdateRosterResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCPartyUpdateRosterResponse_k_eInternalError
}

type CMsgClientToGCPartySetReadyState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId    *uint64                     `protobuf:"fixed64,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	ReadyState *bool                       `protobuf:"varint,2,opt,name=ready_state,json=readyState" json:"ready_state,omitempty"`
	HeroRoster *CMsgHeroSelectionMatchInfo `protobuf:"bytes,3,opt,name=hero_roster,json=heroRoster" json:"hero_roster,omitempty"`
}

func (x *CMsgClientToGCPartySetReadyState) Reset() {
	*x = CMsgClientToGCPartySetReadyState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartySetReadyState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartySetReadyState) ProtoMessage() {}

func (x *CMsgClientToGCPartySetReadyState) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartySetReadyState.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartySetReadyState) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{43}
}

func (x *CMsgClientToGCPartySetReadyState) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

func (x *CMsgClientToGCPartySetReadyState) GetReadyState() bool {
	if x != nil && x.ReadyState != nil {
		return *x.ReadyState
	}
	return false
}

func (x *CMsgClientToGCPartySetReadyState) GetHeroRoster() *CMsgHeroSelectionMatchInfo {
	if x != nil {
		return x.HeroRoster
	}
	return nil
}

type CMsgClientToGCPartySetReadyStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCPartySetReadyStateResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCPartySetReadyStateResponse_EResponse" json:"result,omitempty"`
}

func (x *CMsgClientToGCPartySetReadyStateResponse) Reset() {
	*x = CMsgClientToGCPartySetReadyStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPartySetReadyStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPartySetReadyStateResponse) ProtoMessage() {}

func (x *CMsgClientToGCPartySetReadyStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPartySetReadyStateResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPartySetReadyStateResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{44}
}

func (x *CMsgClientToGCPartySetReadyStateResponse) GetResult() CMsgClientToGCPartySetReadyStateResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCPartySetReadyStateResponse_k_eInternalError
}

type CMsgClientToGCDevSetMMBias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Value     *uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (x *CMsgClientToGCDevSetMMBias) Reset() {
	*x = CMsgClientToGCDevSetMMBias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCDevSetMMBias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCDevSetMMBias) ProtoMessage() {}

func (x *CMsgClientToGCDevSetMMBias) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCDevSetMMBias.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCDevSetMMBias) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{45}
}

func (x *CMsgClientToGCDevSetMMBias) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgClientToGCDevSetMMBias) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type CMsgClientToGCGetMatchHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId      *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ContinueCursor *uint64 `protobuf:"varint,2,opt,name=continue_cursor,json=continueCursor" json:"continue_cursor,omitempty"`
}

func (x *CMsgClientToGCGetMatchHistory) Reset() {
	*x = CMsgClientToGCGetMatchHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetMatchHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetMatchHistory) ProtoMessage() {}

func (x *CMsgClientToGCGetMatchHistory) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetMatchHistory.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetMatchHistory) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{46}
}

func (x *CMsgClientToGCGetMatchHistory) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistory) GetContinueCursor() uint64 {
	if x != nil && x.ContinueCursor != nil {
		return *x.ContinueCursor
	}
	return 0
}

type CMsgClientToGCGetMatchHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         *CMsgClientToGCGetMatchHistoryResponse_EResult `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCGetMatchHistoryResponse_EResult" json:"result,omitempty"`
	ContinueCursor *uint64                                        `protobuf:"varint,2,opt,name=continue_cursor,json=continueCursor" json:"continue_cursor,omitempty"`
	Matches        []*CMsgClientToGCGetMatchHistoryResponse_Match `protobuf:"bytes,3,rep,name=matches" json:"matches,omitempty"`
}

func (x *CMsgClientToGCGetMatchHistoryResponse) Reset() {
	*x = CMsgClientToGCGetMatchHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetMatchHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetMatchHistoryResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetMatchHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetMatchHistoryResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetMatchHistoryResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{47}
}

func (x *CMsgClientToGCGetMatchHistoryResponse) GetResult() CMsgClientToGCGetMatchHistoryResponse_EResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCGetMatchHistoryResponse_k_eResult_InternalError
}

func (x *CMsgClientToGCGetMatchHistoryResponse) GetContinueCursor() uint64 {
	if x != nil && x.ContinueCursor != nil {
		return *x.ContinueCursor
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse) GetMatches() []*CMsgClientToGCGetMatchHistoryResponse_Match {
	if x != nil {
		return x.Matches
	}
	return nil
}

type CMsgClientToGCSpectateUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpectateAccountId *uint32             `protobuf:"varint,1,opt,name=spectate_account_id,json=spectateAccountId" json:"spectate_account_id,omitempty"`
	RegionMode        *ECitadelRegionMode `protobuf:"varint,2,opt,name=region_mode,json=regionMode,enum=dota.ECitadelRegionMode" json:"region_mode,omitempty"`
	ClientVersion     *uint32             `protobuf:"varint,3,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	ClientPlatform    *EGCPlatform        `protobuf:"varint,4,opt,name=client_platform,json=clientPlatform,enum=dota.EGCPlatform" json:"client_platform,omitempty"`
}

func (x *CMsgClientToGCSpectateUser) Reset() {
	*x = CMsgClientToGCSpectateUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSpectateUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSpectateUser) ProtoMessage() {}

func (x *CMsgClientToGCSpectateUser) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSpectateUser.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSpectateUser) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{48}
}

func (x *CMsgClientToGCSpectateUser) GetSpectateAccountId() uint32 {
	if x != nil && x.SpectateAccountId != nil {
		return *x.SpectateAccountId
	}
	return 0
}

func (x *CMsgClientToGCSpectateUser) GetRegionMode() ECitadelRegionMode {
	if x != nil && x.RegionMode != nil {
		return *x.RegionMode
	}
	return ECitadelRegionMode_k_ECitadelRegionMode_ROW
}

func (x *CMsgClientToGCSpectateUser) GetClientVersion() uint32 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return 0
}

func (x *CMsgClientToGCSpectateUser) GetClientPlatform() EGCPlatform {
	if x != nil && x.ClientPlatform != nil {
		return *x.ClientPlatform
	}
	return EGCPlatform_k_eGCPlatform_None
}

type CMsgClientToGCSpectateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result             *CMsgClientToGCSpectateUserResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCSpectateUserResponse_EResponse" json:"result,omitempty"`
	ServerSteamId      *uint64                                       `protobuf:"fixed64,3,opt,name=server_steam_id,json=serverSteamId" json:"server_steam_id,omitempty"`
	SdrKey             []byte                                        `protobuf:"bytes,4,opt,name=sdr_key,json=sdrKey" json:"sdr_key,omitempty"`
	UdpConnectIp       *uint32                                       `protobuf:"varint,5,opt,name=udp_connect_ip,json=udpConnectIp" json:"udp_connect_ip,omitempty"`
	UdpConnectPort     *uint32                                       `protobuf:"varint,6,opt,name=udp_connect_port,json=udpConnectPort" json:"udp_connect_port,omitempty"`
	LobbyId            *uint64                                       `protobuf:"fixed64,7,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	ClientBroadcastUrl *string                                       `protobuf:"bytes,8,opt,name=client_broadcast_url,json=clientBroadcastUrl" json:"client_broadcast_url,omitempty"`
}

func (x *CMsgClientToGCSpectateUserResponse) Reset() {
	*x = CMsgClientToGCSpectateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSpectateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSpectateUserResponse) ProtoMessage() {}

func (x *CMsgClientToGCSpectateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSpectateUserResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSpectateUserResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{49}
}

func (x *CMsgClientToGCSpectateUserResponse) GetResult() CMsgClientToGCSpectateUserResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCSpectateUserResponse_k_eInternalError
}

func (x *CMsgClientToGCSpectateUserResponse) GetServerSteamId() uint64 {
	if x != nil && x.ServerSteamId != nil {
		return *x.ServerSteamId
	}
	return 0
}

func (x *CMsgClientToGCSpectateUserResponse) GetSdrKey() []byte {
	if x != nil {
		return x.SdrKey
	}
	return nil
}

func (x *CMsgClientToGCSpectateUserResponse) GetUdpConnectIp() uint32 {
	if x != nil && x.UdpConnectIp != nil {
		return *x.UdpConnectIp
	}
	return 0
}

func (x *CMsgClientToGCSpectateUserResponse) GetUdpConnectPort() uint32 {
	if x != nil && x.UdpConnectPort != nil {
		return *x.UdpConnectPort
	}
	return 0
}

func (x *CMsgClientToGCSpectateUserResponse) GetLobbyId() uint64 {
	if x != nil && x.LobbyId != nil {
		return *x.LobbyId
	}
	return 0
}

func (x *CMsgClientToGCSpectateUserResponse) GetClientBroadcastUrl() string {
	if x != nil && x.ClientBroadcastUrl != nil {
		return *x.ClientBroadcastUrl
	}
	return ""
}

type CMsgClientToGCSpectateLobby struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyId        *uint64             `protobuf:"varint,1,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	RegionMode     *ECitadelRegionMode `protobuf:"varint,2,opt,name=region_mode,json=regionMode,enum=dota.ECitadelRegionMode" json:"region_mode,omitempty"`
	ClientVersion  *uint32             `protobuf:"varint,3,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	ClientPlatform *EGCPlatform        `protobuf:"varint,4,opt,name=client_platform,json=clientPlatform,enum=dota.EGCPlatform" json:"client_platform,omitempty"`
}

func (x *CMsgClientToGCSpectateLobby) Reset() {
	*x = CMsgClientToGCSpectateLobby{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSpectateLobby) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSpectateLobby) ProtoMessage() {}

func (x *CMsgClientToGCSpectateLobby) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSpectateLobby.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSpectateLobby) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{50}
}

func (x *CMsgClientToGCSpectateLobby) GetLobbyId() uint64 {
	if x != nil && x.LobbyId != nil {
		return *x.LobbyId
	}
	return 0
}

func (x *CMsgClientToGCSpectateLobby) GetRegionMode() ECitadelRegionMode {
	if x != nil && x.RegionMode != nil {
		return *x.RegionMode
	}
	return ECitadelRegionMode_k_ECitadelRegionMode_ROW
}

func (x *CMsgClientToGCSpectateLobby) GetClientVersion() uint32 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return 0
}

func (x *CMsgClientToGCSpectateLobby) GetClientPlatform() EGCPlatform {
	if x != nil && x.ClientPlatform != nil {
		return *x.ClientPlatform
	}
	return EGCPlatform_k_eGCPlatform_None
}

type CMsgClientToGCSpectateLobbyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCSpectateUserResponse `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (x *CMsgClientToGCSpectateLobbyResponse) Reset() {
	*x = CMsgClientToGCSpectateLobbyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSpectateLobbyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSpectateLobbyResponse) ProtoMessage() {}

func (x *CMsgClientToGCSpectateLobbyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSpectateLobbyResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSpectateLobbyResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{51}
}

func (x *CMsgClientToGCSpectateLobbyResponse) GetResult() *CMsgClientToGCSpectateUserResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type CMsgClientToGCGetProfileCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	DevAccessHint    *bool   `protobuf:"varint,2,opt,name=dev_access_hint,json=devAccessHint" json:"dev_access_hint,omitempty"`
	FriendAccessHint *bool   `protobuf:"varint,3,opt,name=friend_access_hint,json=friendAccessHint" json:"friend_access_hint,omitempty"`
}

func (x *CMsgClientToGCGetProfileCard) Reset() {
	*x = CMsgClientToGCGetProfileCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetProfileCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetProfileCard) ProtoMessage() {}

func (x *CMsgClientToGCGetProfileCard) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetProfileCard.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetProfileCard) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{52}
}

func (x *CMsgClientToGCGetProfileCard) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgClientToGCGetProfileCard) GetDevAccessHint() bool {
	if x != nil && x.DevAccessHint != nil {
		return *x.DevAccessHint
	}
	return false
}

func (x *CMsgClientToGCGetProfileCard) GetFriendAccessHint() bool {
	if x != nil && x.FriendAccessHint != nil {
		return *x.FriendAccessHint
	}
	return false
}

type CMsgCitadelProfileCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32                        `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Slots     []*CMsgCitadelProfileCard_Slot `protobuf:"bytes,2,rep,name=slots" json:"slots,omitempty"`
}

func (x *CMsgCitadelProfileCard) Reset() {
	*x = CMsgCitadelProfileCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCitadelProfileCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCitadelProfileCard) ProtoMessage() {}

func (x *CMsgCitadelProfileCard) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCitadelProfileCard.ProtoReflect.Descriptor instead.
func (*CMsgCitadelProfileCard) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{53}
}

func (x *CMsgCitadelProfileCard) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgCitadelProfileCard) GetSlots() []*CMsgCitadelProfileCard_Slot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type CMsgClientToGCUpdateRoster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Heroes    *CMsgHeroSelectionMatchInfo `protobuf:"bytes,1,opt,name=heroes" json:"heroes,omitempty"`
	GameMode  *ECitadelGameMode           `protobuf:"varint,2,opt,name=game_mode,json=gameMode,enum=dota.ECitadelGameMode" json:"game_mode,omitempty"`
	MatchMode *ECitadelMatchMode          `protobuf:"varint,3,opt,name=match_mode,json=matchMode,enum=dota.ECitadelMatchMode" json:"match_mode,omitempty"`
	SoloMatch *bool                       `protobuf:"varint,4,opt,name=solo_match,json=soloMatch" json:"solo_match,omitempty"`
}

func (x *CMsgClientToGCUpdateRoster) Reset() {
	*x = CMsgClientToGCUpdateRoster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUpdateRoster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUpdateRoster) ProtoMessage() {}

func (x *CMsgClientToGCUpdateRoster) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUpdateRoster.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUpdateRoster) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{54}
}

func (x *CMsgClientToGCUpdateRoster) GetHeroes() *CMsgHeroSelectionMatchInfo {
	if x != nil {
		return x.Heroes
	}
	return nil
}

func (x *CMsgClientToGCUpdateRoster) GetGameMode() ECitadelGameMode {
	if x != nil && x.GameMode != nil {
		return *x.GameMode
	}
	return ECitadelGameMode_k_ECitadelGameMode_Invalid
}

func (x *CMsgClientToGCUpdateRoster) GetMatchMode() ECitadelMatchMode {
	if x != nil && x.MatchMode != nil {
		return *x.MatchMode
	}
	return ECitadelMatchMode_k_ECitadelMatchMode_Invalid
}

func (x *CMsgClientToGCUpdateRoster) GetSoloMatch() bool {
	if x != nil && x.SoloMatch != nil {
		return *x.SoloMatch
	}
	return false
}

type CMsgClientToGCUpdateRosterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCUpdateRosterResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCUpdateRosterResponse_EResponse" json:"result,omitempty"`
}

func (x *CMsgClientToGCUpdateRosterResponse) Reset() {
	*x = CMsgClientToGCUpdateRosterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUpdateRosterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUpdateRosterResponse) ProtoMessage() {}

func (x *CMsgClientToGCUpdateRosterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUpdateRosterResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUpdateRosterResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{55}
}

func (x *CMsgClientToGCUpdateRosterResponse) GetResult() CMsgClientToGCUpdateRosterResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCUpdateRosterResponse_k_eInternalError
}

type CMsgClientToGCGetAccountStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	DevAccessHint    *bool   `protobuf:"varint,2,opt,name=dev_access_hint,json=devAccessHint" json:"dev_access_hint,omitempty"`
	FriendAccessHint *bool   `protobuf:"varint,3,opt,name=friend_access_hint,json=friendAccessHint" json:"friend_access_hint,omitempty"`
}

func (x *CMsgClientToGCGetAccountStats) Reset() {
	*x = CMsgClientToGCGetAccountStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetAccountStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetAccountStats) ProtoMessage() {}

func (x *CMsgClientToGCGetAccountStats) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetAccountStats.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetAccountStats) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{56}
}

func (x *CMsgClientToGCGetAccountStats) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgClientToGCGetAccountStats) GetDevAccessHint() bool {
	if x != nil && x.DevAccessHint != nil {
		return *x.DevAccessHint
	}
	return false
}

func (x *CMsgClientToGCGetAccountStats) GetFriendAccessHint() bool {
	if x != nil && x.FriendAccessHint != nil {
		return *x.FriendAccessHint
	}
	return false
}

type CMsgClientToGCGetAccountStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCGetAccountStatsResponse_EResult `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCGetAccountStatsResponse_EResult" json:"result,omitempty"`
	Stats  *CMsgAccountStats                              `protobuf:"bytes,2,opt,name=stats" json:"stats,omitempty"`
}

func (x *CMsgClientToGCGetAccountStatsResponse) Reset() {
	*x = CMsgClientToGCGetAccountStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetAccountStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetAccountStatsResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetAccountStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetAccountStatsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetAccountStatsResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{57}
}

func (x *CMsgClientToGCGetAccountStatsResponse) GetResult() CMsgClientToGCGetAccountStatsResponse_EResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCGetAccountStatsResponse_k_eInternalError
}

func (x *CMsgClientToGCGetAccountStatsResponse) GetStats() *CMsgAccountStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type CMsgClientToGCGetMatchMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId      *uint64 `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	MetadataSalt *uint32 `protobuf:"varint,3,opt,name=metadata_salt,json=metadataSalt" json:"metadata_salt,omitempty"`
}

func (x *CMsgClientToGCGetMatchMetaData) Reset() {
	*x = CMsgClientToGCGetMatchMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetMatchMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetMatchMetaData) ProtoMessage() {}

func (x *CMsgClientToGCGetMatchMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetMatchMetaData.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetMatchMetaData) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{58}
}

func (x *CMsgClientToGCGetMatchMetaData) GetMatchId() uint64 {
	if x != nil && x.MatchId != nil {
		return *x.MatchId
	}
	return 0
}

func (x *CMsgClientToGCGetMatchMetaData) GetMetadataSalt() uint32 {
	if x != nil && x.MetadataSalt != nil {
		return *x.MetadataSalt
	}
	return 0
}

type CMsgClientToGCGetMatchMetaDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result                  *CMsgClientToGCGetMatchMetaDataResponse_EResult `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCGetMatchMetaDataResponse_EResult" json:"result,omitempty"`
	ReplaySalt              *uint32                                         `protobuf:"varint,2,opt,name=replay_salt,json=replaySalt" json:"replay_salt,omitempty"`
	MetadataSalt            *uint32                                         `protobuf:"varint,3,opt,name=metadata_salt,json=metadataSalt" json:"metadata_salt,omitempty"`
	ReplayValidThrough      *uint32                                         `protobuf:"varint,4,opt,name=replay_valid_through,json=replayValidThrough" json:"replay_valid_through,omitempty"`
	ClusterId               *uint32                                         `protobuf:"varint,5,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	ReplayProcessingThrough *uint32                                         `protobuf:"varint,6,opt,name=replay_processing_through,json=replayProcessingThrough" json:"replay_processing_through,omitempty"`
}

func (x *CMsgClientToGCGetMatchMetaDataResponse) Reset() {
	*x = CMsgClientToGCGetMatchMetaDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetMatchMetaDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetMatchMetaDataResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetMatchMetaDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetMatchMetaDataResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetMatchMetaDataResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{59}
}

func (x *CMsgClientToGCGetMatchMetaDataResponse) GetResult() CMsgClientToGCGetMatchMetaDataResponse_EResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCGetMatchMetaDataResponse_k_eResult_InternalError
}

func (x *CMsgClientToGCGetMatchMetaDataResponse) GetReplaySalt() uint32 {
	if x != nil && x.ReplaySalt != nil {
		return *x.ReplaySalt
	}
	return 0
}

func (x *CMsgClientToGCGetMatchMetaDataResponse) GetMetadataSalt() uint32 {
	if x != nil && x.MetadataSalt != nil {
		return *x.MetadataSalt
	}
	return 0
}

func (x *CMsgClientToGCGetMatchMetaDataResponse) GetReplayValidThrough() uint32 {
	if x != nil && x.ReplayValidThrough != nil {
		return *x.ReplayValidThrough
	}
	return 0
}

func (x *CMsgClientToGCGetMatchMetaDataResponse) GetClusterId() uint32 {
	if x != nil && x.ClusterId != nil {
		return *x.ClusterId
	}
	return 0
}

func (x *CMsgClientToGCGetMatchMetaDataResponse) GetReplayProcessingThrough() uint32 {
	if x != nil && x.ReplayProcessingThrough != nil {
		return *x.ReplayProcessingThrough
	}
	return 0
}

type CMsgGCToClientDevAnnouncements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Announcements []*CMsgGCToClientDevAnnouncements_Announcement `protobuf:"bytes,1,rep,name=announcements" json:"announcements,omitempty"`
}

func (x *CMsgGCToClientDevAnnouncements) Reset() {
	*x = CMsgGCToClientDevAnnouncements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientDevAnnouncements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientDevAnnouncements) ProtoMessage() {}

func (x *CMsgGCToClientDevAnnouncements) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientDevAnnouncements.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientDevAnnouncements) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{60}
}

func (x *CMsgGCToClientDevAnnouncements) GetAnnouncements() []*CMsgGCToClientDevAnnouncements_Announcement {
	if x != nil {
		return x.Announcements
	}
	return nil
}

type CMsgClientToGCModifyDevAnnouncements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation    *CMsgClientToGCModifyDevAnnouncements_EOperation `protobuf:"varint,1,opt,name=operation,enum=dota.CMsgClientToGCModifyDevAnnouncements_EOperation" json:"operation,omitempty"`
	TargetId     *uint32                                          `protobuf:"varint,2,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	Priority     *uint32                                          `protobuf:"varint,3,opt,name=priority" json:"priority,omitempty"`
	Title        *string                                          `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Message      *string                                          `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	Url          *string                                          `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	PatchVersion *string                                          `protobuf:"bytes,7,opt,name=patch_version,json=patchVersion" json:"patch_version,omitempty"`
}

func (x *CMsgClientToGCModifyDevAnnouncements) Reset() {
	*x = CMsgClientToGCModifyDevAnnouncements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCModifyDevAnnouncements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCModifyDevAnnouncements) ProtoMessage() {}

func (x *CMsgClientToGCModifyDevAnnouncements) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCModifyDevAnnouncements.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCModifyDevAnnouncements) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{61}
}

func (x *CMsgClientToGCModifyDevAnnouncements) GetOperation() CMsgClientToGCModifyDevAnnouncements_EOperation {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return CMsgClientToGCModifyDevAnnouncements_k_eCreate
}

func (x *CMsgClientToGCModifyDevAnnouncements) GetTargetId() uint32 {
	if x != nil && x.TargetId != nil {
		return *x.TargetId
	}
	return 0
}

func (x *CMsgClientToGCModifyDevAnnouncements) GetPriority() uint32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *CMsgClientToGCModifyDevAnnouncements) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CMsgClientToGCModifyDevAnnouncements) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *CMsgClientToGCModifyDevAnnouncements) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgClientToGCModifyDevAnnouncements) GetPatchVersion() string {
	if x != nil && x.PatchVersion != nil {
		return *x.PatchVersion
	}
	return ""
}

type CMsgClientToGCModifyDevAnnouncementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCModifyDevAnnouncementsResponse_EResult `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCModifyDevAnnouncementsResponse_EResult" json:"result,omitempty"`
}

func (x *CMsgClientToGCModifyDevAnnouncementsResponse) Reset() {
	*x = CMsgClientToGCModifyDevAnnouncementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCModifyDevAnnouncementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCModifyDevAnnouncementsResponse) ProtoMessage() {}

func (x *CMsgClientToGCModifyDevAnnouncementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCModifyDevAnnouncementsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCModifyDevAnnouncementsResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{62}
}

func (x *CMsgClientToGCModifyDevAnnouncementsResponse) GetResult() CMsgClientToGCModifyDevAnnouncementsResponse_EResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCModifyDevAnnouncementsResponse_k_eSuccess
}

type CMsgClientToGCDevAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    *CMsgClientToGCDevAction_EAction `protobuf:"varint,1,opt,name=action,enum=dota.CMsgClientToGCDevAction_EAction" json:"action,omitempty"`
	AccountId *uint32                          `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UintValue *uint32                          `protobuf:"varint,3,opt,name=uint_value,json=uintValue" json:"uint_value,omitempty"`
	IntValue  *int32                           `protobuf:"varint,4,opt,name=int_value,json=intValue" json:"int_value,omitempty"`
	BoolValue *bool                            `protobuf:"varint,5,opt,name=bool_value,json=boolValue" json:"bool_value,omitempty"`
	StrValue  *string                          `protobuf:"bytes,6,opt,name=str_value,json=strValue" json:"str_value,omitempty"`
}

func (x *CMsgClientToGCDevAction) Reset() {
	*x = CMsgClientToGCDevAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCDevAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCDevAction) ProtoMessage() {}

func (x *CMsgClientToGCDevAction) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCDevAction.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCDevAction) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{63}
}

func (x *CMsgClientToGCDevAction) GetAction() CMsgClientToGCDevAction_EAction {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return CMsgClientToGCDevAction_k_eSetDeveloper
}

func (x *CMsgClientToGCDevAction) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgClientToGCDevAction) GetUintValue() uint32 {
	if x != nil && x.UintValue != nil {
		return *x.UintValue
	}
	return 0
}

func (x *CMsgClientToGCDevAction) GetIntValue() int32 {
	if x != nil && x.IntValue != nil {
		return *x.IntValue
	}
	return 0
}

func (x *CMsgClientToGCDevAction) GetBoolValue() bool {
	if x != nil && x.BoolValue != nil {
		return *x.BoolValue
	}
	return false
}

func (x *CMsgClientToGCDevAction) GetStrValue() string {
	if x != nil && x.StrValue != nil {
		return *x.StrValue
	}
	return ""
}

type CMsgClientToGCDevActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCDevActionResponse_EResult `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCDevActionResponse_EResult" json:"result,omitempty"`
}

func (x *CMsgClientToGCDevActionResponse) Reset() {
	*x = CMsgClientToGCDevActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCDevActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCDevActionResponse) ProtoMessage() {}

func (x *CMsgClientToGCDevActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCDevActionResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCDevActionResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{64}
}

func (x *CMsgClientToGCDevActionResponse) GetResult() CMsgClientToGCDevActionResponse_EResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCDevActionResponse_k_eSuccess
}

type CMsgClientToGCRecordClientEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events         []*CMsgClientToGCRecordClientEvents_Event `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
	ClientRunToken *uint32                                   `protobuf:"varint,2,opt,name=client_run_token,json=clientRunToken" json:"client_run_token,omitempty"`
}

func (x *CMsgClientToGCRecordClientEvents) Reset() {
	*x = CMsgClientToGCRecordClientEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCRecordClientEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRecordClientEvents) ProtoMessage() {}

func (x *CMsgClientToGCRecordClientEvents) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRecordClientEvents.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRecordClientEvents) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{65}
}

func (x *CMsgClientToGCRecordClientEvents) GetEvents() []*CMsgClientToGCRecordClientEvents_Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *CMsgClientToGCRecordClientEvents) GetClientRunToken() uint32 {
	if x != nil && x.ClientRunToken != nil {
		return *x.ClientRunToken
	}
	return 0
}

type CMsgClientToGCRecordClientEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (x *CMsgClientToGCRecordClientEventsResponse) Reset() {
	*x = CMsgClientToGCRecordClientEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCRecordClientEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRecordClientEventsResponse) ProtoMessage() {}

func (x *CMsgClientToGCRecordClientEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRecordClientEventsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRecordClientEventsResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{66}
}

func (x *CMsgClientToGCRecordClientEventsResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type CMsgClientToGCSetNewPlayerProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag *ECitadelNewPlayerProgressFlag `protobuf:"varint,1,opt,name=flag,enum=dota.ECitadelNewPlayerProgressFlag" json:"flag,omitempty"`
}

func (x *CMsgClientToGCSetNewPlayerProgress) Reset() {
	*x = CMsgClientToGCSetNewPlayerProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSetNewPlayerProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSetNewPlayerProgress) ProtoMessage() {}

func (x *CMsgClientToGCSetNewPlayerProgress) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSetNewPlayerProgress.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSetNewPlayerProgress) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{67}
}

func (x *CMsgClientToGCSetNewPlayerProgress) GetFlag() ECitadelNewPlayerProgressFlag {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return ECitadelNewPlayerProgressFlag_k_eNewPlayerProgress_GettingStarted
}

type CMsgClientToGCSetNewPlayerProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (x *CMsgClientToGCSetNewPlayerProgressResponse) Reset() {
	*x = CMsgClientToGCSetNewPlayerProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSetNewPlayerProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSetNewPlayerProgressResponse) ProtoMessage() {}

func (x *CMsgClientToGCSetNewPlayerProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSetNewPlayerProgressResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSetNewPlayerProgressResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{68}
}

func (x *CMsgClientToGCSetNewPlayerProgressResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type CMsgClientToGCUpdateAccountSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []uint32 `protobuf:"varint,1,rep,name=ids" json:"ids,omitempty"`
	Values []uint32 `protobuf:"varint,2,rep,name=values" json:"values,omitempty"`
}

func (x *CMsgClientToGCUpdateAccountSync) Reset() {
	*x = CMsgClientToGCUpdateAccountSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUpdateAccountSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUpdateAccountSync) ProtoMessage() {}

func (x *CMsgClientToGCUpdateAccountSync) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUpdateAccountSync.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUpdateAccountSync) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{69}
}

func (x *CMsgClientToGCUpdateAccountSync) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CMsgClientToGCUpdateAccountSync) GetValues() []uint32 {
	if x != nil {
		return x.Values
	}
	return nil
}

type CMsgClientToGCUpdateAccountSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCUpdateAccountSyncResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCUpdateAccountSyncResponse_EResponse" json:"result,omitempty"`
}

func (x *CMsgClientToGCUpdateAccountSyncResponse) Reset() {
	*x = CMsgClientToGCUpdateAccountSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUpdateAccountSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUpdateAccountSyncResponse) ProtoMessage() {}

func (x *CMsgClientToGCUpdateAccountSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUpdateAccountSyncResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUpdateAccountSyncResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{70}
}

func (x *CMsgClientToGCUpdateAccountSyncResponse) GetResult() CMsgClientToGCUpdateAccountSyncResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCUpdateAccountSyncResponse_k_eInternalError
}

type CMsgClientToGCGetHeroChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientToGCGetHeroChoice) Reset() {
	*x = CMsgClientToGCGetHeroChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetHeroChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetHeroChoice) ProtoMessage() {}

func (x *CMsgClientToGCGetHeroChoice) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetHeroChoice.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetHeroChoice) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{71}
}

type CMsgClientToGCGetHeroChoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         *CMsgClientToGCGetHeroChoiceResponse_EResult `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCGetHeroChoiceResponse_EResult" json:"result,omitempty"`
	HeroSelections []*CMsgClientToGCGetHeroChoiceResponse_Hero  `protobuf:"bytes,2,rep,name=hero_selections,json=heroSelections" json:"hero_selections,omitempty"`
	HeroChoiceId   *uint32                                      `protobuf:"varint,3,opt,name=hero_choice_id,json=heroChoiceId" json:"hero_choice_id,omitempty"`
	SelectCount    *uint32                                      `protobuf:"varint,4,opt,name=select_count,json=selectCount" json:"select_count,omitempty"`
}

func (x *CMsgClientToGCGetHeroChoiceResponse) Reset() {
	*x = CMsgClientToGCGetHeroChoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetHeroChoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetHeroChoiceResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetHeroChoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetHeroChoiceResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetHeroChoiceResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{72}
}

func (x *CMsgClientToGCGetHeroChoiceResponse) GetResult() CMsgClientToGCGetHeroChoiceResponse_EResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCGetHeroChoiceResponse_k_eSuccess
}

func (x *CMsgClientToGCGetHeroChoiceResponse) GetHeroSelections() []*CMsgClientToGCGetHeroChoiceResponse_Hero {
	if x != nil {
		return x.HeroSelections
	}
	return nil
}

func (x *CMsgClientToGCGetHeroChoiceResponse) GetHeroChoiceId() uint32 {
	if x != nil && x.HeroChoiceId != nil {
		return *x.HeroChoiceId
	}
	return 0
}

func (x *CMsgClientToGCGetHeroChoiceResponse) GetSelectCount() uint32 {
	if x != nil && x.SelectCount != nil {
		return *x.SelectCount
	}
	return 0
}

type CMsgClientToGCUnlockHero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroIds      []uint32 `protobuf:"varint,1,rep,name=hero_ids,json=heroIds" json:"hero_ids,omitempty"`
	HeroChoiceId *uint32  `protobuf:"varint,2,opt,name=hero_choice_id,json=heroChoiceId" json:"hero_choice_id,omitempty"`
}

func (x *CMsgClientToGCUnlockHero) Reset() {
	*x = CMsgClientToGCUnlockHero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUnlockHero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUnlockHero) ProtoMessage() {}

func (x *CMsgClientToGCUnlockHero) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUnlockHero.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUnlockHero) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{73}
}

func (x *CMsgClientToGCUnlockHero) GetHeroIds() []uint32 {
	if x != nil {
		return x.HeroIds
	}
	return nil
}

func (x *CMsgClientToGCUnlockHero) GetHeroChoiceId() uint32 {
	if x != nil && x.HeroChoiceId != nil {
		return *x.HeroChoiceId
	}
	return 0
}

type CMsgClientToGCUnlockHeroResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCUnlockHeroResponse_EResult `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCUnlockHeroResponse_EResult" json:"result,omitempty"`
}

func (x *CMsgClientToGCUnlockHeroResponse) Reset() {
	*x = CMsgClientToGCUnlockHeroResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUnlockHeroResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUnlockHeroResponse) ProtoMessage() {}

func (x *CMsgClientToGCUnlockHeroResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUnlockHeroResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUnlockHeroResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{74}
}

func (x *CMsgClientToGCUnlockHeroResponse) GetResult() CMsgClientToGCUnlockHeroResponse_EResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCUnlockHeroResponse_k_eSuccess
}

type CMsgAccountBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId  *uint32                   `protobuf:"varint,1,opt,name=book_id,json=bookId" json:"book_id,omitempty"`
	BookXp  *uint32                   `protobuf:"varint,2,opt,name=book_xp,json=bookXp" json:"book_xp,omitempty"`
	SpentXp *uint32                   `protobuf:"varint,3,opt,name=spent_xp,json=spentXp" json:"spent_xp,omitempty"`
	Unlocks []*CMsgAccountBook_Unlock `protobuf:"bytes,4,rep,name=unlocks" json:"unlocks,omitempty"`
}

func (x *CMsgAccountBook) Reset() {
	*x = CMsgAccountBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAccountBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAccountBook) ProtoMessage() {}

func (x *CMsgAccountBook) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAccountBook.ProtoReflect.Descriptor instead.
func (*CMsgAccountBook) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{75}
}

func (x *CMsgAccountBook) GetBookId() uint32 {
	if x != nil && x.BookId != nil {
		return *x.BookId
	}
	return 0
}

func (x *CMsgAccountBook) GetBookXp() uint32 {
	if x != nil && x.BookXp != nil {
		return *x.BookXp
	}
	return 0
}

func (x *CMsgAccountBook) GetSpentXp() uint32 {
	if x != nil && x.SpentXp != nil {
		return *x.SpentXp
	}
	return 0
}

func (x *CMsgAccountBook) GetUnlocks() []*CMsgAccountBook_Unlock {
	if x != nil {
		return x.Unlocks
	}
	return nil
}

type CMsgClientToGCBookUnlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId        *uint32 `protobuf:"varint,1,opt,name=book_id,json=bookId" json:"book_id,omitempty"`
	UnlockId      *uint32 `protobuf:"varint,2,opt,name=unlock_id,json=unlockId" json:"unlock_id,omitempty"`
	ExpectedCost  *uint32 `protobuf:"varint,3,opt,name=expected_cost,json=expectedCost" json:"expected_cost,omitempty"`
	ClientVersion *uint32 `protobuf:"varint,4,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
}

func (x *CMsgClientToGCBookUnlock) Reset() {
	*x = CMsgClientToGCBookUnlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCBookUnlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBookUnlock) ProtoMessage() {}

func (x *CMsgClientToGCBookUnlock) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBookUnlock.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBookUnlock) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{76}
}

func (x *CMsgClientToGCBookUnlock) GetBookId() uint32 {
	if x != nil && x.BookId != nil {
		return *x.BookId
	}
	return 0
}

func (x *CMsgClientToGCBookUnlock) GetUnlockId() uint32 {
	if x != nil && x.UnlockId != nil {
		return *x.UnlockId
	}
	return 0
}

func (x *CMsgClientToGCBookUnlock) GetExpectedCost() uint32 {
	if x != nil && x.ExpectedCost != nil {
		return *x.ExpectedCost
	}
	return 0
}

func (x *CMsgClientToGCBookUnlock) GetClientVersion() uint32 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return 0
}

type CMsgClientToGCBookUnlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *CMsgClientToGCBookUnlockResponse_EResult `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCBookUnlockResponse_EResult" json:"result,omitempty"`
	UpdatedBook *CMsgAccountBook                          `protobuf:"bytes,2,opt,name=updated_book,json=updatedBook" json:"updated_book,omitempty"`
}

func (x *CMsgClientToGCBookUnlockResponse) Reset() {
	*x = CMsgClientToGCBookUnlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCBookUnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCBookUnlockResponse) ProtoMessage() {}

func (x *CMsgClientToGCBookUnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCBookUnlockResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCBookUnlockResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{77}
}

func (x *CMsgClientToGCBookUnlockResponse) GetResult() CMsgClientToGCBookUnlockResponse_EResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCBookUnlockResponse_k_eSuccess
}

func (x *CMsgClientToGCBookUnlockResponse) GetUpdatedBook() *CMsgAccountBook {
	if x != nil {
		return x.UpdatedBook
	}
	return nil
}

type CMsgClientToGCGetBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId *uint32 `protobuf:"varint,1,opt,name=book_id,json=bookId" json:"book_id,omitempty"`
}

func (x *CMsgClientToGCGetBook) Reset() {
	*x = CMsgClientToGCGetBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetBook) ProtoMessage() {}

func (x *CMsgClientToGCGetBook) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetBook.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetBook) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{78}
}

func (x *CMsgClientToGCGetBook) GetBookId() uint32 {
	if x != nil && x.BookId != nil {
		return *x.BookId
	}
	return 0
}

type CMsgClientToGCGetBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CMsgClientToGCGetBookResponse_EResult `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCGetBookResponse_EResult" json:"result,omitempty"`
	Book   *CMsgAccountBook                       `protobuf:"bytes,2,opt,name=book" json:"book,omitempty"`
}

func (x *CMsgClientToGCGetBookResponse) Reset() {
	*x = CMsgClientToGCGetBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetBookResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetBookResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetBookResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{79}
}

func (x *CMsgClientToGCGetBookResponse) GetResult() CMsgClientToGCGetBookResponse_EResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return CMsgClientToGCGetBookResponse_k_eSuccess
}

func (x *CMsgClientToGCGetBookResponse) GetBook() *CMsgAccountBook {
	if x != nil {
		return x.Book
	}
	return nil
}

type CMsgGCToClientBookUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Book *CMsgAccountBook `protobuf:"bytes,1,opt,name=book" json:"book,omitempty"`
}

func (x *CMsgGCToClientBookUpdated) Reset() {
	*x = CMsgGCToClientBookUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientBookUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientBookUpdated) ProtoMessage() {}

func (x *CMsgGCToClientBookUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientBookUpdated.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientBookUpdated) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{80}
}

func (x *CMsgGCToClientBookUpdated) GetBook() *CMsgAccountBook {
	if x != nil {
		return x.Book
	}
	return nil
}

type CMsgClientToGCSubmitPlaytestUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location        *string `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	TargetAccountId *uint32 `protobuf:"varint,4,opt,name=target_account_id,json=targetAccountId" json:"target_account_id,omitempty"`
}

func (x *CMsgClientToGCSubmitPlaytestUser) Reset() {
	*x = CMsgClientToGCSubmitPlaytestUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSubmitPlaytestUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSubmitPlaytestUser) ProtoMessage() {}

func (x *CMsgClientToGCSubmitPlaytestUser) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSubmitPlaytestUser.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSubmitPlaytestUser) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{81}
}

func (x *CMsgClientToGCSubmitPlaytestUser) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *CMsgClientToGCSubmitPlaytestUser) GetTargetAccountId() uint32 {
	if x != nil && x.TargetAccountId != nil {
		return *x.TargetAccountId
	}
	return 0
}

type CMsgClientToGCSubmitPlaytestUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCSubmitPlaytestUserResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCSubmitPlaytestUserResponse_EResponse" json:"response,omitempty"`
}

func (x *CMsgClientToGCSubmitPlaytestUserResponse) Reset() {
	*x = CMsgClientToGCSubmitPlaytestUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSubmitPlaytestUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSubmitPlaytestUserResponse) ProtoMessage() {}

func (x *CMsgClientToGCSubmitPlaytestUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSubmitPlaytestUserResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSubmitPlaytestUserResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{82}
}

func (x *CMsgClientToGCSubmitPlaytestUserResponse) GetResponse() CMsgClientToGCSubmitPlaytestUserResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCSubmitPlaytestUserResponse_eResponse_Success
}

type CMsgHeroBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroBuildId          *uint32                   `protobuf:"varint,1,opt,name=hero_build_id,json=heroBuildId" json:"hero_build_id,omitempty"`
	HeroId               *uint32                   `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	AuthorAccountId      *uint32                   `protobuf:"varint,3,opt,name=author_account_id,json=authorAccountId" json:"author_account_id,omitempty"`
	LastUpdatedTimestamp *uint32                   `protobuf:"varint,4,opt,name=last_updated_timestamp,json=lastUpdatedTimestamp" json:"last_updated_timestamp,omitempty"`
	Name                 *string                   `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Description          *string                   `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Language             *uint32                   `protobuf:"varint,7,opt,name=language" json:"language,omitempty"`
	Version              *uint32                   `protobuf:"varint,8,opt,name=version" json:"version,omitempty"`
	OriginBuildId        *uint32                   `protobuf:"varint,9,opt,name=origin_build_id,json=originBuildId" json:"origin_build_id,omitempty"`
	Details              *CMsgHeroBuild_Details_V0 `protobuf:"bytes,10,opt,name=details" json:"details,omitempty"`
}

func (x *CMsgHeroBuild) Reset() {
	*x = CMsgHeroBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHeroBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHeroBuild) ProtoMessage() {}

func (x *CMsgHeroBuild) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHeroBuild.ProtoReflect.Descriptor instead.
func (*CMsgHeroBuild) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{83}
}

func (x *CMsgHeroBuild) GetHeroBuildId() uint32 {
	if x != nil && x.HeroBuildId != nil {
		return *x.HeroBuildId
	}
	return 0
}

func (x *CMsgHeroBuild) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CMsgHeroBuild) GetAuthorAccountId() uint32 {
	if x != nil && x.AuthorAccountId != nil {
		return *x.AuthorAccountId
	}
	return 0
}

func (x *CMsgHeroBuild) GetLastUpdatedTimestamp() uint32 {
	if x != nil && x.LastUpdatedTimestamp != nil {
		return *x.LastUpdatedTimestamp
	}
	return 0
}

func (x *CMsgHeroBuild) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgHeroBuild) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CMsgHeroBuild) GetLanguage() uint32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return 0
}

func (x *CMsgHeroBuild) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgHeroBuild) GetOriginBuildId() uint32 {
	if x != nil && x.OriginBuildId != nil {
		return *x.OriginBuildId
	}
	return 0
}

func (x *CMsgHeroBuild) GetDetails() *CMsgHeroBuild_Details_V0 {
	if x != nil {
		return x.Details
	}
	return nil
}

type CMsgClientToGCUpdateHeroBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroBuild *CMsgHeroBuild `protobuf:"bytes,1,opt,name=hero_build,json=heroBuild" json:"hero_build,omitempty"`
}

func (x *CMsgClientToGCUpdateHeroBuild) Reset() {
	*x = CMsgClientToGCUpdateHeroBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUpdateHeroBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUpdateHeroBuild) ProtoMessage() {}

func (x *CMsgClientToGCUpdateHeroBuild) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUpdateHeroBuild.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUpdateHeroBuild) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{84}
}

func (x *CMsgClientToGCUpdateHeroBuild) GetHeroBuild() *CMsgHeroBuild {
	if x != nil {
		return x.HeroBuild
	}
	return nil
}

type CMsgClientToGCUpdateHeroBuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response    *CMsgClientToGCUpdateHeroBuildResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCUpdateHeroBuildResponse_EResponse" json:"response,omitempty"`
	HeroBuildId *uint32                                          `protobuf:"varint,2,opt,name=hero_build_id,json=heroBuildId" json:"hero_build_id,omitempty"`
	Version     *uint32                                          `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
}

func (x *CMsgClientToGCUpdateHeroBuildResponse) Reset() {
	*x = CMsgClientToGCUpdateHeroBuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUpdateHeroBuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUpdateHeroBuildResponse) ProtoMessage() {}

func (x *CMsgClientToGCUpdateHeroBuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUpdateHeroBuildResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUpdateHeroBuildResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{85}
}

func (x *CMsgClientToGCUpdateHeroBuildResponse) GetResponse() CMsgClientToGCUpdateHeroBuildResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCUpdateHeroBuildResponse_k_eInternalError
}

func (x *CMsgClientToGCUpdateHeroBuildResponse) GetHeroBuildId() uint32 {
	if x != nil && x.HeroBuildId != nil {
		return *x.HeroBuildId
	}
	return 0
}

func (x *CMsgClientToGCUpdateHeroBuildResponse) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type CMsgClientToGCFindHeroBuilds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorAccountId *uint32 `protobuf:"varint,1,opt,name=author_account_id,json=authorAccountId" json:"author_account_id,omitempty"`
	HeroId          *uint32 `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Language        []int32 `protobuf:"varint,3,rep,name=language" json:"language,omitempty"`
	SearchText      *string `protobuf:"bytes,4,opt,name=search_text,json=searchText" json:"search_text,omitempty"`
}

func (x *CMsgClientToGCFindHeroBuilds) Reset() {
	*x = CMsgClientToGCFindHeroBuilds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCFindHeroBuilds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCFindHeroBuilds) ProtoMessage() {}

func (x *CMsgClientToGCFindHeroBuilds) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCFindHeroBuilds.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCFindHeroBuilds) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{86}
}

func (x *CMsgClientToGCFindHeroBuilds) GetAuthorAccountId() uint32 {
	if x != nil && x.AuthorAccountId != nil {
		return *x.AuthorAccountId
	}
	return 0
}

func (x *CMsgClientToGCFindHeroBuilds) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CMsgClientToGCFindHeroBuilds) GetLanguage() []int32 {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *CMsgClientToGCFindHeroBuilds) GetSearchText() string {
	if x != nil && x.SearchText != nil {
		return *x.SearchText
	}
	return ""
}

type CMsgHeroBuildPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Favorited *bool `protobuf:"varint,1,opt,name=favorited" json:"favorited,omitempty"`
	Ignored   *bool `protobuf:"varint,2,opt,name=ignored" json:"ignored,omitempty"`
	Reported  *bool `protobuf:"varint,3,opt,name=reported" json:"reported,omitempty"`
}

func (x *CMsgHeroBuildPreference) Reset() {
	*x = CMsgHeroBuildPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHeroBuildPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHeroBuildPreference) ProtoMessage() {}

func (x *CMsgHeroBuildPreference) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHeroBuildPreference.ProtoReflect.Descriptor instead.
func (*CMsgHeroBuildPreference) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{87}
}

func (x *CMsgHeroBuildPreference) GetFavorited() bool {
	if x != nil && x.Favorited != nil {
		return *x.Favorited
	}
	return false
}

func (x *CMsgHeroBuildPreference) GetIgnored() bool {
	if x != nil && x.Ignored != nil {
		return *x.Ignored
	}
	return false
}

func (x *CMsgHeroBuildPreference) GetReported() bool {
	if x != nil && x.Reported != nil {
		return *x.Reported
	}
	return false
}

type CMsgClientToGCFindHeroBuildsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCFindHeroBuildsResponse_EResponse         `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCFindHeroBuildsResponse_EResponse" json:"response,omitempty"`
	Results  []*CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (x *CMsgClientToGCFindHeroBuildsResponse) Reset() {
	*x = CMsgClientToGCFindHeroBuildsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCFindHeroBuildsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCFindHeroBuildsResponse) ProtoMessage() {}

func (x *CMsgClientToGCFindHeroBuildsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCFindHeroBuildsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCFindHeroBuildsResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{88}
}

func (x *CMsgClientToGCFindHeroBuildsResponse) GetResponse() CMsgClientToGCFindHeroBuildsResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCFindHeroBuildsResponse_k_eInternalError
}

func (x *CMsgClientToGCFindHeroBuildsResponse) GetResults() []*CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type CMsgClientToGCUpdateHeroBuildPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroBuildId *uint32                  `protobuf:"varint,1,opt,name=hero_build_id,json=heroBuildId" json:"hero_build_id,omitempty"`
	Preference  *CMsgHeroBuildPreference `protobuf:"bytes,2,opt,name=preference" json:"preference,omitempty"`
}

func (x *CMsgClientToGCUpdateHeroBuildPreference) Reset() {
	*x = CMsgClientToGCUpdateHeroBuildPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUpdateHeroBuildPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUpdateHeroBuildPreference) ProtoMessage() {}

func (x *CMsgClientToGCUpdateHeroBuildPreference) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUpdateHeroBuildPreference.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUpdateHeroBuildPreference) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{89}
}

func (x *CMsgClientToGCUpdateHeroBuildPreference) GetHeroBuildId() uint32 {
	if x != nil && x.HeroBuildId != nil {
		return *x.HeroBuildId
	}
	return 0
}

func (x *CMsgClientToGCUpdateHeroBuildPreference) GetPreference() *CMsgHeroBuildPreference {
	if x != nil {
		return x.Preference
	}
	return nil
}

type CMsgClientToGCUpdateHeroBuildPreferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse" json:"response,omitempty"`
}

func (x *CMsgClientToGCUpdateHeroBuildPreferenceResponse) Reset() {
	*x = CMsgClientToGCUpdateHeroBuildPreferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUpdateHeroBuildPreferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUpdateHeroBuildPreferenceResponse) ProtoMessage() {}

func (x *CMsgClientToGCUpdateHeroBuildPreferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUpdateHeroBuildPreferenceResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUpdateHeroBuildPreferenceResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{90}
}

func (x *CMsgClientToGCUpdateHeroBuildPreferenceResponse) GetResponse() CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCUpdateHeroBuildPreferenceResponse_k_eInternalError
}

type CMsgClientToGCGetOldHeroBuildData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorAccountId *uint32 `protobuf:"varint,1,opt,name=author_account_id,json=authorAccountId" json:"author_account_id,omitempty"`
}

func (x *CMsgClientToGCGetOldHeroBuildData) Reset() {
	*x = CMsgClientToGCGetOldHeroBuildData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetOldHeroBuildData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetOldHeroBuildData) ProtoMessage() {}

func (x *CMsgClientToGCGetOldHeroBuildData) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetOldHeroBuildData.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetOldHeroBuildData) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{91}
}

func (x *CMsgClientToGCGetOldHeroBuildData) GetAuthorAccountId() uint32 {
	if x != nil && x.AuthorAccountId != nil {
		return *x.AuthorAccountId
	}
	return 0
}

type CMsgClientToGCGetOldHeroBuildDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response        *CMsgClientToGCGetOldHeroBuildDataResponse_EResponse  `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCGetOldHeroBuildDataResponse_EResponse" json:"response,omitempty"`
	AuthorAccountId *uint32                                               `protobuf:"varint,2,opt,name=author_account_id,json=authorAccountId" json:"author_account_id,omitempty"`
	Results         []*CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild `protobuf:"bytes,3,rep,name=results" json:"results,omitempty"`
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse) Reset() {
	*x = CMsgClientToGCGetOldHeroBuildDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetOldHeroBuildDataResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetOldHeroBuildDataResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetOldHeroBuildDataResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{92}
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse) GetResponse() CMsgClientToGCGetOldHeroBuildDataResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCGetOldHeroBuildDataResponse_k_eInternalError
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse) GetAuthorAccountId() uint32 {
	if x != nil && x.AuthorAccountId != nil {
		return *x.AuthorAccountId
	}
	return 0
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse) GetResults() []*CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild {
	if x != nil {
		return x.Results
	}
	return nil
}

type CMsgClientToGCReportPlayerFromMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId         *uint64                                          `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	TargetAccountId *uint32                                          `protobuf:"varint,2,opt,name=target_account_id,json=targetAccountId" json:"target_account_id,omitempty"`
	ReportType      *CMsgClientToGCReportPlayerFromMatch_EReportType `protobuf:"varint,3,opt,name=report_type,json=reportType,enum=dota.CMsgClientToGCReportPlayerFromMatch_EReportType" json:"report_type,omitempty"`
	ReportText      *string                                          `protobuf:"bytes,4,opt,name=report_text,json=reportText" json:"report_text,omitempty"`
}

func (x *CMsgClientToGCReportPlayerFromMatch) Reset() {
	*x = CMsgClientToGCReportPlayerFromMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCReportPlayerFromMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCReportPlayerFromMatch) ProtoMessage() {}

func (x *CMsgClientToGCReportPlayerFromMatch) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCReportPlayerFromMatch.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCReportPlayerFromMatch) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{93}
}

func (x *CMsgClientToGCReportPlayerFromMatch) GetMatchId() uint64 {
	if x != nil && x.MatchId != nil {
		return *x.MatchId
	}
	return 0
}

func (x *CMsgClientToGCReportPlayerFromMatch) GetTargetAccountId() uint32 {
	if x != nil && x.TargetAccountId != nil {
		return *x.TargetAccountId
	}
	return 0
}

func (x *CMsgClientToGCReportPlayerFromMatch) GetReportType() CMsgClientToGCReportPlayerFromMatch_EReportType {
	if x != nil && x.ReportType != nil {
		return *x.ReportType
	}
	return CMsgClientToGCReportPlayerFromMatch_k_eReport_None
}

func (x *CMsgClientToGCReportPlayerFromMatch) GetReportText() string {
	if x != nil && x.ReportText != nil {
		return *x.ReportText
	}
	return ""
}

type CMsgClientToGCReportPlayerFromMatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCReportPlayerFromMatchResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCReportPlayerFromMatchResponse_EResponse" json:"response,omitempty"`
}

func (x *CMsgClientToGCReportPlayerFromMatchResponse) Reset() {
	*x = CMsgClientToGCReportPlayerFromMatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCReportPlayerFromMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCReportPlayerFromMatchResponse) ProtoMessage() {}

func (x *CMsgClientToGCReportPlayerFromMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCReportPlayerFromMatchResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCReportPlayerFromMatchResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{94}
}

func (x *CMsgClientToGCReportPlayerFromMatchResponse) GetResponse() CMsgClientToGCReportPlayerFromMatchResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCReportPlayerFromMatchResponse_k_eInternalError
}

type CMsgClientToGCGetAccountMatchReports struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId *uint64 `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
}

func (x *CMsgClientToGCGetAccountMatchReports) Reset() {
	*x = CMsgClientToGCGetAccountMatchReports{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetAccountMatchReports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetAccountMatchReports) ProtoMessage() {}

func (x *CMsgClientToGCGetAccountMatchReports) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetAccountMatchReports.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetAccountMatchReports) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{95}
}

func (x *CMsgClientToGCGetAccountMatchReports) GetMatchId() uint64 {
	if x != nil && x.MatchId != nil {
		return *x.MatchId
	}
	return 0
}

type CMsgClientToGCGetAccountMatchReportsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCGetAccountMatchReportsResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCGetAccountMatchReportsResponse_EResponse" json:"response,omitempty"`
	Reports  []*CMsgClientToGCGetAccountMatchReportsResponse_Report  `protobuf:"bytes,2,rep,name=reports" json:"reports,omitempty"`
}

func (x *CMsgClientToGCGetAccountMatchReportsResponse) Reset() {
	*x = CMsgClientToGCGetAccountMatchReportsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetAccountMatchReportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetAccountMatchReportsResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetAccountMatchReportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetAccountMatchReportsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetAccountMatchReportsResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{96}
}

func (x *CMsgClientToGCGetAccountMatchReportsResponse) GetResponse() CMsgClientToGCGetAccountMatchReportsResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCGetAccountMatchReportsResponse_k_eInternalError
}

func (x *CMsgClientToGCGetAccountMatchReportsResponse) GetReports() []*CMsgClientToGCGetAccountMatchReportsResponse_Report {
	if x != nil {
		return x.Reports
	}
	return nil
}

type CMsgClientToGCDeleteHeroBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorAccountId *uint32 `protobuf:"varint,1,opt,name=author_account_id,json=authorAccountId" json:"author_account_id,omitempty"`
	HeroBuildId     *uint32 `protobuf:"varint,2,opt,name=hero_build_id,json=heroBuildId" json:"hero_build_id,omitempty"`
}

func (x *CMsgClientToGCDeleteHeroBuild) Reset() {
	*x = CMsgClientToGCDeleteHeroBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCDeleteHeroBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCDeleteHeroBuild) ProtoMessage() {}

func (x *CMsgClientToGCDeleteHeroBuild) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCDeleteHeroBuild.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCDeleteHeroBuild) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{97}
}

func (x *CMsgClientToGCDeleteHeroBuild) GetAuthorAccountId() uint32 {
	if x != nil && x.AuthorAccountId != nil {
		return *x.AuthorAccountId
	}
	return 0
}

func (x *CMsgClientToGCDeleteHeroBuild) GetHeroBuildId() uint32 {
	if x != nil && x.HeroBuildId != nil {
		return *x.HeroBuildId
	}
	return 0
}

type CMsgClientToGCDeleteHeroBuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response      *CMsgClientToGCDeleteHeroBuildResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCDeleteHeroBuildResponse_EResponse" json:"response,omitempty"`
	BuildsDeleted *uint32                                          `protobuf:"varint,2,opt,name=builds_deleted,json=buildsDeleted" json:"builds_deleted,omitempty"`
}

func (x *CMsgClientToGCDeleteHeroBuildResponse) Reset() {
	*x = CMsgClientToGCDeleteHeroBuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCDeleteHeroBuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCDeleteHeroBuildResponse) ProtoMessage() {}

func (x *CMsgClientToGCDeleteHeroBuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCDeleteHeroBuildResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCDeleteHeroBuildResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{98}
}

func (x *CMsgClientToGCDeleteHeroBuildResponse) GetResponse() CMsgClientToGCDeleteHeroBuildResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCDeleteHeroBuildResponse_k_eInternalError
}

func (x *CMsgClientToGCDeleteHeroBuildResponse) GetBuildsDeleted() uint32 {
	if x != nil && x.BuildsDeleted != nil {
		return *x.BuildsDeleted
	}
	return 0
}

type CMsgClientToGCGetActiveMatches struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientToGCGetActiveMatches) Reset() {
	*x = CMsgClientToGCGetActiveMatches{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetActiveMatches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetActiveMatches) ProtoMessage() {}

func (x *CMsgClientToGCGetActiveMatches) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetActiveMatches.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetActiveMatches) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{99}
}

type CMsgClientToGCGetActiveMatchesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveMatches []*CMsgDevMatchInfo `protobuf:"bytes,1,rep,name=active_matches,json=activeMatches" json:"active_matches,omitempty"`
}

func (x *CMsgClientToGCGetActiveMatchesResponse) Reset() {
	*x = CMsgClientToGCGetActiveMatchesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetActiveMatchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetActiveMatchesResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetActiveMatchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetActiveMatchesResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetActiveMatchesResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{100}
}

func (x *CMsgClientToGCGetActiveMatchesResponse) GetActiveMatches() []*CMsgDevMatchInfo {
	if x != nil {
		return x.ActiveMatches
	}
	return nil
}

type CMsgClientToGCGetDiscordLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientToGCGetDiscordLink) Reset() {
	*x = CMsgClientToGCGetDiscordLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetDiscordLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetDiscordLink) ProtoMessage() {}

func (x *CMsgClientToGCGetDiscordLink) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetDiscordLink.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetDiscordLink) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{101}
}

type CMsgClientToGCGetDiscordLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response    *CMsgClientToGCGetDiscordLinkResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCGetDiscordLinkResponse_EResponse" json:"response,omitempty"`
	DiscordLink *string                                         `protobuf:"bytes,2,opt,name=discord_link,json=discordLink" json:"discord_link,omitempty"`
	ValidHours  *uint32                                         `protobuf:"varint,3,opt,name=valid_hours,json=validHours" json:"valid_hours,omitempty"`
}

func (x *CMsgClientToGCGetDiscordLinkResponse) Reset() {
	*x = CMsgClientToGCGetDiscordLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetDiscordLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetDiscordLinkResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetDiscordLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetDiscordLinkResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetDiscordLinkResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{102}
}

func (x *CMsgClientToGCGetDiscordLinkResponse) GetResponse() CMsgClientToGCGetDiscordLinkResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCGetDiscordLinkResponse_k_eInternalError
}

func (x *CMsgClientToGCGetDiscordLinkResponse) GetDiscordLink() string {
	if x != nil && x.DiscordLink != nil {
		return *x.DiscordLink
	}
	return ""
}

func (x *CMsgClientToGCGetDiscordLinkResponse) GetValidHours() uint32 {
	if x != nil && x.ValidHours != nil {
		return *x.ValidHours
	}
	return 0
}

type CMsgClientToGCGrantForumAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email *string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
}

func (x *CMsgClientToGCGrantForumAccess) Reset() {
	*x = CMsgClientToGCGrantForumAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGrantForumAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGrantForumAccess) ProtoMessage() {}

func (x *CMsgClientToGCGrantForumAccess) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGrantForumAccess.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGrantForumAccess) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{103}
}

func (x *CMsgClientToGCGrantForumAccess) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

type CMsgClientToGCGrantForumAccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response      *CMsgClientToGCGrantForumAccessResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCGrantForumAccessResponse_EResponse" json:"response,omitempty"`
	Email         *string                                           `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Username      *string                                           `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	ForumPassword *string                                           `protobuf:"bytes,4,opt,name=forum_password,json=forumPassword" json:"forum_password,omitempty"`
}

func (x *CMsgClientToGCGrantForumAccessResponse) Reset() {
	*x = CMsgClientToGCGrantForumAccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGrantForumAccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGrantForumAccessResponse) ProtoMessage() {}

func (x *CMsgClientToGCGrantForumAccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGrantForumAccessResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGrantForumAccessResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{104}
}

func (x *CMsgClientToGCGrantForumAccessResponse) GetResponse() CMsgClientToGCGrantForumAccessResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCGrantForumAccessResponse_k_eInternalError
}

func (x *CMsgClientToGCGrantForumAccessResponse) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *CMsgClientToGCGrantForumAccessResponse) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *CMsgClientToGCGrantForumAccessResponse) GetForumPassword() string {
	if x != nil && x.ForumPassword != nil {
		return *x.ForumPassword
	}
	return ""
}

type CMsgClientToGCModeratorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *CMsgClientToGCModeratorRequest) Reset() {
	*x = CMsgClientToGCModeratorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCModeratorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCModeratorRequest) ProtoMessage() {}

func (x *CMsgClientToGCModeratorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCModeratorRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCModeratorRequest) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{105}
}

func (x *CMsgClientToGCModeratorRequest) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

type CMsgClientToGCModeratorRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      *bool    `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	ResponseText []string `protobuf:"bytes,2,rep,name=response_text,json=responseText" json:"response_text,omitempty"`
}

func (x *CMsgClientToGCModeratorRequestResponse) Reset() {
	*x = CMsgClientToGCModeratorRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCModeratorRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCModeratorRequestResponse) ProtoMessage() {}

func (x *CMsgClientToGCModeratorRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCModeratorRequestResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCModeratorRequestResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{106}
}

func (x *CMsgClientToGCModeratorRequestResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *CMsgClientToGCModeratorRequestResponse) GetResponseText() []string {
	if x != nil {
		return x.ResponseText
	}
	return nil
}

type CMsgClientToGCGetFriendGameStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeInvited *bool `protobuf:"varint,1,opt,name=include_invited,json=includeInvited" json:"include_invited,omitempty"`
}

func (x *CMsgClientToGCGetFriendGameStatus) Reset() {
	*x = CMsgClientToGCGetFriendGameStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetFriendGameStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetFriendGameStatus) ProtoMessage() {}

func (x *CMsgClientToGCGetFriendGameStatus) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetFriendGameStatus.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetFriendGameStatus) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{107}
}

func (x *CMsgClientToGCGetFriendGameStatus) GetIncludeInvited() bool {
	if x != nil && x.IncludeInvited != nil {
		return *x.IncludeInvited
	}
	return false
}

type CMsgClientToGCGetFriendGameStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response          *CMsgClientToGCGetFriendGameStatusResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCGetFriendGameStatusResponse_EResponse" json:"response,omitempty"`
	FriendsPlayedGame []uint32                                             `protobuf:"varint,2,rep,name=friends_played_game,json=friendsPlayedGame" json:"friends_played_game,omitempty"`
	FriendsInvited    []uint32                                             `protobuf:"varint,3,rep,name=friends_invited,json=friendsInvited" json:"friends_invited,omitempty"`
}

func (x *CMsgClientToGCGetFriendGameStatusResponse) Reset() {
	*x = CMsgClientToGCGetFriendGameStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetFriendGameStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetFriendGameStatusResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetFriendGameStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetFriendGameStatusResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetFriendGameStatusResponse) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{108}
}

func (x *CMsgClientToGCGetFriendGameStatusResponse) GetResponse() CMsgClientToGCGetFriendGameStatusResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCGetFriendGameStatusResponse_k_eInternalError
}

func (x *CMsgClientToGCGetFriendGameStatusResponse) GetFriendsPlayedGame() []uint32 {
	if x != nil {
		return x.FriendsPlayedGame
	}
	return nil
}

func (x *CMsgClientToGCGetFriendGameStatusResponse) GetFriendsInvited() []uint32 {
	if x != nil {
		return x.FriendsInvited
	}
	return nil
}

type CMsgClientToGCUpdateSpectatorStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpectatingLobbyId *uint64 `protobuf:"fixed64,1,opt,name=spectating_lobby_id,json=spectatingLobbyId" json:"spectating_lobby_id,omitempty"`
	StoppedSpectating *bool   `protobuf:"varint,2,opt,name=stopped_spectating,json=stoppedSpectating" json:"stopped_spectating,omitempty"`
}

func (x *CMsgClientToGCUpdateSpectatorStatus) Reset() {
	*x = CMsgClientToGCUpdateSpectatorStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUpdateSpectatorStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUpdateSpectatorStatus) ProtoMessage() {}

func (x *CMsgClientToGCUpdateSpectatorStatus) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUpdateSpectatorStatus.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUpdateSpectatorStatus) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{109}
}

func (x *CMsgClientToGCUpdateSpectatorStatus) GetSpectatingLobbyId() uint64 {
	if x != nil && x.SpectatingLobbyId != nil {
		return *x.SpectatingLobbyId
	}
	return 0
}

func (x *CMsgClientToGCUpdateSpectatorStatus) GetStoppedSpectating() bool {
	if x != nil && x.StoppedSpectating != nil {
		return *x.StoppedSpectating
	}
	return false
}

type CMsgDevMatchInfo_MatchPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32            `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Team      *ECitadelLobbyTeam `protobuf:"varint,2,opt,name=team,enum=dota.ECitadelLobbyTeam" json:"team,omitempty"`
	Abandoned *bool              `protobuf:"varint,3,opt,name=abandoned" json:"abandoned,omitempty"`
	HeroId    *uint32            `protobuf:"varint,4,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
}

func (x *CMsgDevMatchInfo_MatchPlayer) Reset() {
	*x = CMsgDevMatchInfo_MatchPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDevMatchInfo_MatchPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDevMatchInfo_MatchPlayer) ProtoMessage() {}

func (x *CMsgDevMatchInfo_MatchPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDevMatchInfo_MatchPlayer.ProtoReflect.Descriptor instead.
func (*CMsgDevMatchInfo_MatchPlayer) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CMsgDevMatchInfo_MatchPlayer) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgDevMatchInfo_MatchPlayer) GetTeam() ECitadelLobbyTeam {
	if x != nil && x.Team != nil {
		return *x.Team
	}
	return ECitadelLobbyTeam_k_ECitadelLobbyTeam_Team0
}

func (x *CMsgDevMatchInfo_MatchPlayer) GetAbandoned() bool {
	if x != nil && x.Abandoned != nil {
		return *x.Abandoned
	}
	return false
}

func (x *CMsgDevMatchInfo_MatchPlayer) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

type CMsgGCToClientDevPlaytestStatus_NextMMWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime          *uint32 `protobuf:"varint,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime            *uint32 `protobuf:"varint,2,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	IsPaused           *bool   `protobuf:"varint,3,opt,name=is_paused,json=isPaused" json:"is_paused,omitempty"`
	MmNextIntervalTime *uint32 `protobuf:"varint,4,opt,name=mm_next_interval_time,json=mmNextIntervalTime" json:"mm_next_interval_time,omitempty"`
}

func (x *CMsgGCToClientDevPlaytestStatus_NextMMWindow) Reset() {
	*x = CMsgGCToClientDevPlaytestStatus_NextMMWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientDevPlaytestStatus_NextMMWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientDevPlaytestStatus_NextMMWindow) ProtoMessage() {}

func (x *CMsgGCToClientDevPlaytestStatus_NextMMWindow) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientDevPlaytestStatus_NextMMWindow.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientDevPlaytestStatus_NextMMWindow) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CMsgGCToClientDevPlaytestStatus_NextMMWindow) GetStartTime() uint32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CMsgGCToClientDevPlaytestStatus_NextMMWindow) GetEndTime() uint32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *CMsgGCToClientDevPlaytestStatus_NextMMWindow) GetIsPaused() bool {
	if x != nil && x.IsPaused != nil {
		return *x.IsPaused
	}
	return false
}

func (x *CMsgGCToClientDevPlaytestStatus_NextMMWindow) GetMmNextIntervalTime() uint32 {
	if x != nil && x.MmNextIntervalTime != nil {
		return *x.MmNextIntervalTime
	}
	return 0
}

type CMsgGCToClientDevPlaytestStatus_HeroWhitelist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId     *uint32  `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	AccountIds []uint32 `protobuf:"varint,2,rep,name=account_ids,json=accountIds" json:"account_ids,omitempty"`
}

func (x *CMsgGCToClientDevPlaytestStatus_HeroWhitelist) Reset() {
	*x = CMsgGCToClientDevPlaytestStatus_HeroWhitelist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientDevPlaytestStatus_HeroWhitelist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientDevPlaytestStatus_HeroWhitelist) ProtoMessage() {}

func (x *CMsgGCToClientDevPlaytestStatus_HeroWhitelist) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientDevPlaytestStatus_HeroWhitelist.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientDevPlaytestStatus_HeroWhitelist) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{15, 1}
}

func (x *CMsgGCToClientDevPlaytestStatus_HeroWhitelist) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CMsgGCToClientDevPlaytestStatus_HeroWhitelist) GetAccountIds() []uint32 {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

type CMsgGCToClientDevPlaytestStatus_PlaytestInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *uint32 `protobuf:"varint,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   *uint32 `protobuf:"varint,2,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
}

func (x *CMsgGCToClientDevPlaytestStatus_PlaytestInterval) Reset() {
	*x = CMsgGCToClientDevPlaytestStatus_PlaytestInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientDevPlaytestStatus_PlaytestInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientDevPlaytestStatus_PlaytestInterval) ProtoMessage() {}

func (x *CMsgGCToClientDevPlaytestStatus_PlaytestInterval) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientDevPlaytestStatus_PlaytestInterval.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientDevPlaytestStatus_PlaytestInterval) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{15, 2}
}

func (x *CMsgGCToClientDevPlaytestStatus_PlaytestInterval) GetStartTime() uint32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CMsgGCToClientDevPlaytestStatus_PlaytestInterval) GetEndTime() uint32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

type CMsgGCToClientDevPlaytestStatus_RegionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region               *ECitadelRegionMode                               `protobuf:"varint,1,opt,name=region,enum=dota.ECitadelRegionMode" json:"region,omitempty"`
	MmWindow             *CMsgGCToClientDevPlaytestStatus_NextMMWindow     `protobuf:"bytes,2,opt,name=mm_window,json=mmWindow" json:"mm_window,omitempty"`
	Weekdays             *CMsgGCToClientDevPlaytestStatus_PlaytestInterval `protobuf:"bytes,3,opt,name=weekdays" json:"weekdays,omitempty"`
	Weekends             *CMsgGCToClientDevPlaytestStatus_PlaytestInterval `protobuf:"bytes,4,opt,name=weekends" json:"weekends,omitempty"`
	UnrankedQueueSize    *uint32                                           `protobuf:"varint,5,opt,name=unranked_queue_size,json=unrankedQueueSize" json:"unranked_queue_size,omitempty"`
	CoopQueueSize        *uint32                                           `protobuf:"varint,6,opt,name=coop_queue_size,json=coopQueueSize" json:"coop_queue_size,omitempty"`
	AllowUnrankedQueuing *bool                                             `protobuf:"varint,7,opt,name=allow_unranked_queuing,json=allowUnrankedQueuing" json:"allow_unranked_queuing,omitempty"`
	CoopMmFormationTime  *uint32                                           `protobuf:"varint,8,opt,name=coop_mm_formation_time,json=coopMmFormationTime" json:"coop_mm_formation_time,omitempty"`
	AvailableServers     *uint32                                           `protobuf:"varint,9,opt,name=available_servers,json=availableServers" json:"available_servers,omitempty"`
}

func (x *CMsgGCToClientDevPlaytestStatus_RegionInfo) Reset() {
	*x = CMsgGCToClientDevPlaytestStatus_RegionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientDevPlaytestStatus_RegionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientDevPlaytestStatus_RegionInfo) ProtoMessage() {}

func (x *CMsgGCToClientDevPlaytestStatus_RegionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientDevPlaytestStatus_RegionInfo.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientDevPlaytestStatus_RegionInfo) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{15, 3}
}

func (x *CMsgGCToClientDevPlaytestStatus_RegionInfo) GetRegion() ECitadelRegionMode {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return ECitadelRegionMode_k_ECitadelRegionMode_ROW
}

func (x *CMsgGCToClientDevPlaytestStatus_RegionInfo) GetMmWindow() *CMsgGCToClientDevPlaytestStatus_NextMMWindow {
	if x != nil {
		return x.MmWindow
	}
	return nil
}

func (x *CMsgGCToClientDevPlaytestStatus_RegionInfo) GetWeekdays() *CMsgGCToClientDevPlaytestStatus_PlaytestInterval {
	if x != nil {
		return x.Weekdays
	}
	return nil
}

func (x *CMsgGCToClientDevPlaytestStatus_RegionInfo) GetWeekends() *CMsgGCToClientDevPlaytestStatus_PlaytestInterval {
	if x != nil {
		return x.Weekends
	}
	return nil
}

func (x *CMsgGCToClientDevPlaytestStatus_RegionInfo) GetUnrankedQueueSize() uint32 {
	if x != nil && x.UnrankedQueueSize != nil {
		return *x.UnrankedQueueSize
	}
	return 0
}

func (x *CMsgGCToClientDevPlaytestStatus_RegionInfo) GetCoopQueueSize() uint32 {
	if x != nil && x.CoopQueueSize != nil {
		return *x.CoopQueueSize
	}
	return 0
}

func (x *CMsgGCToClientDevPlaytestStatus_RegionInfo) GetAllowUnrankedQueuing() bool {
	if x != nil && x.AllowUnrankedQueuing != nil {
		return *x.AllowUnrankedQueuing
	}
	return false
}

func (x *CMsgGCToClientDevPlaytestStatus_RegionInfo) GetCoopMmFormationTime() uint32 {
	if x != nil && x.CoopMmFormationTime != nil {
		return *x.CoopMmFormationTime
	}
	return 0
}

func (x *CMsgGCToClientDevPlaytestStatus_RegionInfo) GetAvailableServers() uint32 {
	if x != nil && x.AvailableServers != nil {
		return *x.AvailableServers
	}
	return 0
}

type CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId    *uint32 `protobuf:"varint,1,opt,name=question_id,json=questionId" json:"question_id,omitempty"`
	ResponseValue *uint32 `protobuf:"varint,2,opt,name=response_value,json=responseValue" json:"response_value,omitempty"`
}

func (x *CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey) Reset() {
	*x = CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey) ProtoMessage() {}

func (x *CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{21, 0}
}

func (x *CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey) GetQuestionId() uint32 {
	if x != nil && x.QuestionId != nil {
		return *x.QuestionId
	}
	return 0
}

func (x *CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey) GetResponseValue() uint32 {
	if x != nil && x.ResponseValue != nil {
		return *x.ResponseValue
	}
	return 0
}

type CMsgClientToGCGetMatchHistoryResponse_Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId             *uint64            `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	HeroId              *uint32            `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	MatchDurationS      *uint32            `protobuf:"varint,3,opt,name=match_duration_s,json=matchDurationS" json:"match_duration_s,omitempty"`
	StartTime           *uint32            `protobuf:"varint,4,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	MatchResult         *uint32            `protobuf:"varint,5,opt,name=match_result,json=matchResult" json:"match_result,omitempty"`
	PlayerTeam          *ECitadelLobbyTeam `protobuf:"varint,6,opt,name=player_team,json=playerTeam,enum=dota.ECitadelLobbyTeam" json:"player_team,omitempty"`
	PlayerKills         *uint32            `protobuf:"varint,7,opt,name=player_kills,json=playerKills" json:"player_kills,omitempty"`
	PlayerDeaths        *uint32            `protobuf:"varint,8,opt,name=player_deaths,json=playerDeaths" json:"player_deaths,omitempty"`
	PlayerAssists       *uint32            `protobuf:"varint,9,opt,name=player_assists,json=playerAssists" json:"player_assists,omitempty"`
	LastHits            *uint32            `protobuf:"varint,11,opt,name=last_hits,json=lastHits" json:"last_hits,omitempty"`
	Denies              *uint32            `protobuf:"varint,12,opt,name=denies" json:"denies,omitempty"`
	HeroLevel           *uint32            `protobuf:"varint,13,opt,name=hero_level,json=heroLevel" json:"hero_level,omitempty"`
	NetWorth            *uint32            `protobuf:"varint,14,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	ObjectivesMaskTeam0 *uint64            `protobuf:"varint,15,opt,name=objectives_mask_team0,json=objectivesMaskTeam0" json:"objectives_mask_team0,omitempty"`
	ObjectivesMaskTeam1 *uint64            `protobuf:"varint,16,opt,name=objectives_mask_team1,json=objectivesMaskTeam1" json:"objectives_mask_team1,omitempty"`
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) Reset() {
	*x = CMsgClientToGCGetMatchHistoryResponse_Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetMatchHistoryResponse_Match) ProtoMessage() {}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetMatchHistoryResponse_Match.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetMatchHistoryResponse_Match) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{47, 0}
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetMatchId() uint64 {
	if x != nil && x.MatchId != nil {
		return *x.MatchId
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetMatchDurationS() uint32 {
	if x != nil && x.MatchDurationS != nil {
		return *x.MatchDurationS
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetStartTime() uint32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetMatchResult() uint32 {
	if x != nil && x.MatchResult != nil {
		return *x.MatchResult
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetPlayerTeam() ECitadelLobbyTeam {
	if x != nil && x.PlayerTeam != nil {
		return *x.PlayerTeam
	}
	return ECitadelLobbyTeam_k_ECitadelLobbyTeam_Team0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetPlayerKills() uint32 {
	if x != nil && x.PlayerKills != nil {
		return *x.PlayerKills
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetPlayerDeaths() uint32 {
	if x != nil && x.PlayerDeaths != nil {
		return *x.PlayerDeaths
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetPlayerAssists() uint32 {
	if x != nil && x.PlayerAssists != nil {
		return *x.PlayerAssists
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetLastHits() uint32 {
	if x != nil && x.LastHits != nil {
		return *x.LastHits
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetDenies() uint32 {
	if x != nil && x.Denies != nil {
		return *x.Denies
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetHeroLevel() uint32 {
	if x != nil && x.HeroLevel != nil {
		return *x.HeroLevel
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetNetWorth() uint32 {
	if x != nil && x.NetWorth != nil {
		return *x.NetWorth
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetObjectivesMaskTeam0() uint64 {
	if x != nil && x.ObjectivesMaskTeam0 != nil {
		return *x.ObjectivesMaskTeam0
	}
	return 0
}

func (x *CMsgClientToGCGetMatchHistoryResponse_Match) GetObjectivesMaskTeam1() uint64 {
	if x != nil && x.ObjectivesMaskTeam1 != nil {
		return *x.ObjectivesMaskTeam1
	}
	return 0
}

type CMsgCitadelProfileCard_Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId *uint32                           `protobuf:"varint,1,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	Stat   *CMsgCitadelProfileCard_Slot_Stat `protobuf:"bytes,2,opt,name=stat" json:"stat,omitempty"`
	Hero   *CMsgCitadelProfileCard_Slot_Hero `protobuf:"bytes,3,opt,name=hero" json:"hero,omitempty"`
}

func (x *CMsgCitadelProfileCard_Slot) Reset() {
	*x = CMsgCitadelProfileCard_Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCitadelProfileCard_Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCitadelProfileCard_Slot) ProtoMessage() {}

func (x *CMsgCitadelProfileCard_Slot) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCitadelProfileCard_Slot.ProtoReflect.Descriptor instead.
func (*CMsgCitadelProfileCard_Slot) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{53, 0}
}

func (x *CMsgCitadelProfileCard_Slot) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

func (x *CMsgCitadelProfileCard_Slot) GetStat() *CMsgCitadelProfileCard_Slot_Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *CMsgCitadelProfileCard_Slot) GetHero() *CMsgCitadelProfileCard_Slot_Hero {
	if x != nil {
		return x.Hero
	}
	return nil
}

type CMsgCitadelProfileCard_Slot_Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatId    *CMsgCitadelProfileCard_EStatID `protobuf:"varint,1,opt,name=stat_id,json=statId,enum=dota.CMsgCitadelProfileCard_EStatID" json:"stat_id,omitempty"`
	StatScore *uint32                         `protobuf:"varint,2,opt,name=stat_score,json=statScore" json:"stat_score,omitempty"`
}

func (x *CMsgCitadelProfileCard_Slot_Stat) Reset() {
	*x = CMsgCitadelProfileCard_Slot_Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCitadelProfileCard_Slot_Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCitadelProfileCard_Slot_Stat) ProtoMessage() {}

func (x *CMsgCitadelProfileCard_Slot_Stat) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCitadelProfileCard_Slot_Stat.ProtoReflect.Descriptor instead.
func (*CMsgCitadelProfileCard_Slot_Stat) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{53, 0, 0}
}

func (x *CMsgCitadelProfileCard_Slot_Stat) GetStatId() CMsgCitadelProfileCard_EStatID {
	if x != nil && x.StatId != nil {
		return *x.StatId
	}
	return CMsgCitadelProfileCard_k_eStat_Invalid
}

func (x *CMsgCitadelProfileCard_Slot_Stat) GetStatScore() uint32 {
	if x != nil && x.StatScore != nil {
		return *x.StatScore
	}
	return 0
}

type CMsgCitadelProfileCard_Slot_Hero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId    *uint32 `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	HeroWins  *uint32 `protobuf:"varint,2,opt,name=hero_wins,json=heroWins" json:"hero_wins,omitempty"`
	HeroKills *uint32 `protobuf:"varint,3,opt,name=hero_kills,json=heroKills" json:"hero_kills,omitempty"`
}

func (x *CMsgCitadelProfileCard_Slot_Hero) Reset() {
	*x = CMsgCitadelProfileCard_Slot_Hero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCitadelProfileCard_Slot_Hero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCitadelProfileCard_Slot_Hero) ProtoMessage() {}

func (x *CMsgCitadelProfileCard_Slot_Hero) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCitadelProfileCard_Slot_Hero.ProtoReflect.Descriptor instead.
func (*CMsgCitadelProfileCard_Slot_Hero) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{53, 0, 1}
}

func (x *CMsgCitadelProfileCard_Slot_Hero) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CMsgCitadelProfileCard_Slot_Hero) GetHeroWins() uint32 {
	if x != nil && x.HeroWins != nil {
		return *x.HeroWins
	}
	return 0
}

func (x *CMsgCitadelProfileCard_Slot_Hero) GetHeroKills() uint32 {
	if x != nil && x.HeroKills != nil {
		return *x.HeroKills
	}
	return 0
}

type CMsgGCToClientDevAnnouncements_Announcement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority     *uint32 `protobuf:"varint,1,opt,name=priority" json:"priority,omitempty"`
	Title        *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Message      *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Url          *string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	UniqueId     *uint32 `protobuf:"varint,5,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	PostedTime   *uint32 `protobuf:"varint,6,opt,name=posted_time,json=postedTime" json:"posted_time,omitempty"`
	PatchVersion *string `protobuf:"bytes,7,opt,name=patch_version,json=patchVersion" json:"patch_version,omitempty"`
}

func (x *CMsgGCToClientDevAnnouncements_Announcement) Reset() {
	*x = CMsgGCToClientDevAnnouncements_Announcement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientDevAnnouncements_Announcement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientDevAnnouncements_Announcement) ProtoMessage() {}

func (x *CMsgGCToClientDevAnnouncements_Announcement) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientDevAnnouncements_Announcement.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientDevAnnouncements_Announcement) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{60, 0}
}

func (x *CMsgGCToClientDevAnnouncements_Announcement) GetPriority() uint32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *CMsgGCToClientDevAnnouncements_Announcement) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CMsgGCToClientDevAnnouncements_Announcement) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *CMsgGCToClientDevAnnouncements_Announcement) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgGCToClientDevAnnouncements_Announcement) GetUniqueId() uint32 {
	if x != nil && x.UniqueId != nil {
		return *x.UniqueId
	}
	return 0
}

func (x *CMsgGCToClientDevAnnouncements_Announcement) GetPostedTime() uint32 {
	if x != nil && x.PostedTime != nil {
		return *x.PostedTime
	}
	return 0
}

func (x *CMsgGCToClientDevAnnouncements_Announcement) GetPatchVersion() string {
	if x != nil && x.PatchVersion != nil {
		return *x.PatchVersion
	}
	return ""
}

type CMsgClientToGCRecordClientEvents_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp        *uint32                     `protobuf:"varint,1,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	EventId          *ECitadelClientAccountEvent `protobuf:"varint,2,opt,name=event_id,json=eventId,enum=dota.ECitadelClientAccountEvent" json:"event_id,omitempty"`
	EventData        *uint64                     `protobuf:"varint,3,opt,name=event_data,json=eventData" json:"event_data,omitempty"`
	ClientEventIndex *uint32                     `protobuf:"varint,4,opt,name=client_event_index,json=clientEventIndex" json:"client_event_index,omitempty"`
}

func (x *CMsgClientToGCRecordClientEvents_Event) Reset() {
	*x = CMsgClientToGCRecordClientEvents_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCRecordClientEvents_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRecordClientEvents_Event) ProtoMessage() {}

func (x *CMsgClientToGCRecordClientEvents_Event) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRecordClientEvents_Event.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRecordClientEvents_Event) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{65, 0}
}

func (x *CMsgClientToGCRecordClientEvents_Event) GetTimeStamp() uint32 {
	if x != nil && x.TimeStamp != nil {
		return *x.TimeStamp
	}
	return 0
}

func (x *CMsgClientToGCRecordClientEvents_Event) GetEventId() ECitadelClientAccountEvent {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return ECitadelClientAccountEvent_k_eLaunchedHeroTest
}

func (x *CMsgClientToGCRecordClientEvents_Event) GetEventData() uint64 {
	if x != nil && x.EventData != nil {
		return *x.EventData
	}
	return 0
}

func (x *CMsgClientToGCRecordClientEvents_Event) GetClientEventIndex() uint32 {
	if x != nil && x.ClientEventIndex != nil {
		return *x.ClientEventIndex
	}
	return 0
}

type CMsgClientToGCGetHeroChoiceResponse_Hero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId *uint32 `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
}

func (x *CMsgClientToGCGetHeroChoiceResponse_Hero) Reset() {
	*x = CMsgClientToGCGetHeroChoiceResponse_Hero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetHeroChoiceResponse_Hero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetHeroChoiceResponse_Hero) ProtoMessage() {}

func (x *CMsgClientToGCGetHeroChoiceResponse_Hero) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetHeroChoiceResponse_Hero.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetHeroChoiceResponse_Hero) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{72, 0}
}

func (x *CMsgClientToGCGetHeroChoiceResponse_Hero) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

type CMsgAccountBook_Unlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnlockId *uint32 `protobuf:"varint,1,opt,name=unlock_id,json=unlockId" json:"unlock_id,omitempty"`
	Flags    *uint32 `protobuf:"varint,2,opt,name=flags" json:"flags,omitempty"`
}

func (x *CMsgAccountBook_Unlock) Reset() {
	*x = CMsgAccountBook_Unlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAccountBook_Unlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAccountBook_Unlock) ProtoMessage() {}

func (x *CMsgAccountBook_Unlock) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAccountBook_Unlock.ProtoReflect.Descriptor instead.
func (*CMsgAccountBook_Unlock) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{75, 0}
}

func (x *CMsgAccountBook_Unlock) GetUnlockId() uint32 {
	if x != nil && x.UnlockId != nil {
		return *x.UnlockId
	}
	return 0
}

func (x *CMsgAccountBook_Unlock) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

type CMsgHeroBuild_BuildModEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityId  *uint32 `protobuf:"varint,1,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	Annotation *string `protobuf:"bytes,2,opt,name=annotation" json:"annotation,omitempty"`
}

func (x *CMsgHeroBuild_BuildModEntry) Reset() {
	*x = CMsgHeroBuild_BuildModEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHeroBuild_BuildModEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHeroBuild_BuildModEntry) ProtoMessage() {}

func (x *CMsgHeroBuild_BuildModEntry) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHeroBuild_BuildModEntry.ProtoReflect.Descriptor instead.
func (*CMsgHeroBuild_BuildModEntry) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{83, 0}
}

func (x *CMsgHeroBuild_BuildModEntry) GetAbilityId() uint32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return 0
}

func (x *CMsgHeroBuild_BuildModEntry) GetAnnotation() string {
	if x != nil && x.Annotation != nil {
		return *x.Annotation
	}
	return ""
}

type CMsgHeroBuild_BuildModCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mods        []*CMsgHeroBuild_BuildModEntry `protobuf:"bytes,1,rep,name=mods" json:"mods,omitempty"`
	Name        *string                        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description *string                        `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Width       *float32                       `protobuf:"fixed32,4,opt,name=width" json:"width,omitempty"`
	Height      *float32                       `protobuf:"fixed32,5,opt,name=height" json:"height,omitempty"`
}

func (x *CMsgHeroBuild_BuildModCategory) Reset() {
	*x = CMsgHeroBuild_BuildModCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHeroBuild_BuildModCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHeroBuild_BuildModCategory) ProtoMessage() {}

func (x *CMsgHeroBuild_BuildModCategory) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHeroBuild_BuildModCategory.ProtoReflect.Descriptor instead.
func (*CMsgHeroBuild_BuildModCategory) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{83, 1}
}

func (x *CMsgHeroBuild_BuildModCategory) GetMods() []*CMsgHeroBuild_BuildModEntry {
	if x != nil {
		return x.Mods
	}
	return nil
}

func (x *CMsgHeroBuild_BuildModCategory) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgHeroBuild_BuildModCategory) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CMsgHeroBuild_BuildModCategory) GetWidth() float32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgHeroBuild_BuildModCategory) GetHeight() float32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type CMsgHeroBuild_CurrencyChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityId    *uint32 `protobuf:"varint,1,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	CurrencyType *int32  `protobuf:"varint,2,opt,name=currency_type,json=currencyType" json:"currency_type,omitempty"`
	Delta        *int32  `protobuf:"varint,3,opt,name=delta" json:"delta,omitempty"`
	Annotation   *string `protobuf:"bytes,4,opt,name=annotation" json:"annotation,omitempty"`
}

func (x *CMsgHeroBuild_CurrencyChange) Reset() {
	*x = CMsgHeroBuild_CurrencyChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHeroBuild_CurrencyChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHeroBuild_CurrencyChange) ProtoMessage() {}

func (x *CMsgHeroBuild_CurrencyChange) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHeroBuild_CurrencyChange.ProtoReflect.Descriptor instead.
func (*CMsgHeroBuild_CurrencyChange) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{83, 2}
}

func (x *CMsgHeroBuild_CurrencyChange) GetAbilityId() uint32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return 0
}

func (x *CMsgHeroBuild_CurrencyChange) GetCurrencyType() int32 {
	if x != nil && x.CurrencyType != nil {
		return *x.CurrencyType
	}
	return 0
}

func (x *CMsgHeroBuild_CurrencyChange) GetDelta() int32 {
	if x != nil && x.Delta != nil {
		return *x.Delta
	}
	return 0
}

func (x *CMsgHeroBuild_CurrencyChange) GetAnnotation() string {
	if x != nil && x.Annotation != nil {
		return *x.Annotation
	}
	return ""
}

type CMsgHeroBuild_AbilityOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyChanges []*CMsgHeroBuild_CurrencyChange `protobuf:"bytes,1,rep,name=currency_changes,json=currencyChanges" json:"currency_changes,omitempty"`
}

func (x *CMsgHeroBuild_AbilityOrder) Reset() {
	*x = CMsgHeroBuild_AbilityOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHeroBuild_AbilityOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHeroBuild_AbilityOrder) ProtoMessage() {}

func (x *CMsgHeroBuild_AbilityOrder) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHeroBuild_AbilityOrder.ProtoReflect.Descriptor instead.
func (*CMsgHeroBuild_AbilityOrder) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{83, 3}
}

func (x *CMsgHeroBuild_AbilityOrder) GetCurrencyChanges() []*CMsgHeroBuild_CurrencyChange {
	if x != nil {
		return x.CurrencyChanges
	}
	return nil
}

type CMsgHeroBuild_Details_V0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModCategories []*CMsgHeroBuild_BuildModCategory `protobuf:"bytes,1,rep,name=mod_categories,json=modCategories" json:"mod_categories,omitempty"`
	AbilityOrder  *CMsgHeroBuild_AbilityOrder       `protobuf:"bytes,2,opt,name=ability_order,json=abilityOrder" json:"ability_order,omitempty"`
}

func (x *CMsgHeroBuild_Details_V0) Reset() {
	*x = CMsgHeroBuild_Details_V0{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHeroBuild_Details_V0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHeroBuild_Details_V0) ProtoMessage() {}

func (x *CMsgHeroBuild_Details_V0) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHeroBuild_Details_V0.ProtoReflect.Descriptor instead.
func (*CMsgHeroBuild_Details_V0) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{83, 4}
}

func (x *CMsgHeroBuild_Details_V0) GetModCategories() []*CMsgHeroBuild_BuildModCategory {
	if x != nil {
		return x.ModCategories
	}
	return nil
}

func (x *CMsgHeroBuild_Details_V0) GetAbilityOrder() *CMsgHeroBuild_AbilityOrder {
	if x != nil {
		return x.AbilityOrder
	}
	return nil
}

type CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroBuild    *CMsgHeroBuild           `protobuf:"bytes,1,opt,name=hero_build,json=heroBuild" json:"hero_build,omitempty"`
	Preference   *CMsgHeroBuildPreference `protobuf:"bytes,2,opt,name=preference" json:"preference,omitempty"`
	NumFavorites *uint32                  `protobuf:"varint,3,opt,name=num_favorites,json=numFavorites" json:"num_favorites,omitempty"`
	NumIgnores   *uint32                  `protobuf:"varint,4,opt,name=num_ignores,json=numIgnores" json:"num_ignores,omitempty"`
	NumReports   *uint32                  `protobuf:"varint,5,opt,name=num_reports,json=numReports" json:"num_reports,omitempty"`
}

func (x *CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult) Reset() {
	*x = CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult) ProtoMessage() {}

func (x *CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{88, 0}
}

func (x *CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult) GetHeroBuild() *CMsgHeroBuild {
	if x != nil {
		return x.HeroBuild
	}
	return nil
}

func (x *CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult) GetPreference() *CMsgHeroBuildPreference {
	if x != nil {
		return x.Preference
	}
	return nil
}

func (x *CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult) GetNumFavorites() uint32 {
	if x != nil && x.NumFavorites != nil {
		return *x.NumFavorites
	}
	return 0
}

func (x *CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult) GetNumIgnores() uint32 {
	if x != nil && x.NumIgnores != nil {
		return *x.NumIgnores
	}
	return 0
}

func (x *CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult) GetNumReports() uint32 {
	if x != nil && x.NumReports != nil {
		return *x.NumReports
	}
	return 0
}

type CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecommendedModAbilityIds []uint32 `protobuf:"varint,1,rep,name=recommended_mod_ability_ids,json=recommendedModAbilityIds" json:"recommended_mod_ability_ids,omitempty"`
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0) Reset() {
	*x = CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0) ProtoMessage() {}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{92, 0}
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0) GetRecommendedModAbilityIds() []uint32 {
	if x != nil {
		return x.RecommendedModAbilityIds
	}
	return nil
}

type CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string                                                  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	HeroId      *uint32                                                  `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Description *string                                                  `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Details     *CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0 `protobuf:"bytes,4,opt,name=details" json:"details,omitempty"`
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild) Reset() {
	*x = CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild) ProtoMessage() {}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{92, 1}
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild) GetDetails() *CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0 {
	if x != nil {
		return x.Details
	}
	return nil
}

type CMsgClientToGCGetAccountMatchReportsResponse_Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *CMsgClientToGCGetAccountMatchReportsResponse_Report) Reset() {
	*x = CMsgClientToGCGetAccountMatchReportsResponse_Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citadel_gcmessages_client_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetAccountMatchReportsResponse_Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetAccountMatchReportsResponse_Report) ProtoMessage() {}

func (x *CMsgClientToGCGetAccountMatchReportsResponse_Report) ProtoReflect() protoreflect.Message {
	mi := &file_citadel_gcmessages_client_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetAccountMatchReportsResponse_Report.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetAccountMatchReportsResponse_Report) Descriptor() ([]byte, []int) {
	return file_citadel_gcmessages_client_proto_rawDescGZIP(), []int{96, 0}
}

func (x *CMsgClientToGCGetAccountMatchReportsResponse_Report) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

var File_citadel_gcmessages_client_proto protoreflect.FileDescriptor

var file_citadel_gcmessages_client_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x64, 0x6f, 0x74, 0x61, 0x1a, 0x13, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x63,
	0x73, 0x64, 0x6b, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x5f, 0x67, 0x63,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x03, 0x0a, 0x14, 0x43, 0x53, 0x4f, 0x47, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x6d, 0x6f, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x48, 0x65,
	0x72, 0x6f, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x75,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x68, 0x65, 0x72, 0x6f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x06, 0x45, 0x46, 0x6c, 0x61, 0x67,
	0x73, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x6b, 0x5f, 0x65, 0x47, 0x6f, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x48, 0x65,
	0x72, 0x6f, 0x65, 0x73, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x10,
	0x10, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x46,
	0x6f, 0x72, 0x75, 0x6d, 0x10, 0x20, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x10, 0x40, 0x22, 0x5c, 0x0a, 0x15,
	0x43, 0x53, 0x4f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x12, 0x43,
	0x53, 0x4f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x53, 0x4f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6b, 0x69, 0x6c, 0x6c,
	0x73, 0x22, 0x2a, 0x0a, 0x0b, 0x45, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x5f, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x6b, 0x5f, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x10, 0x01, 0x22, 0x53, 0x0a,
	0x16, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x6f,
	0x64, 0x65, 0x22, 0xbd, 0x02, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x47, 0x43,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x3e, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x50, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x70,
	0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f,
	0x65, 0x73, 0x22, 0xbf, 0x05, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xfe, 0x03, 0x0a, 0x0b, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x5f, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x6b, 0x5f, 0x45, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x6b, 0x5f,
	0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x21,
	0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10,
	0x04, 0x12, 0x20, 0x0a, 0x1c, 0x6b, 0x5f, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73,
	0x79, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x06,
	0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x4e, 0x6f,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x6e, 0x67, 0x73, 0x10, 0x07, 0x12, 0x15, 0x0a,
	0x11, 0x6b, 0x5f, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x49, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x5f, 0x4d, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x09, 0x12, 0x18,
	0x0a, 0x14, 0x6b, 0x5f, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x4d, 0x6f, 0x64, 0x65,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x10, 0x0a, 0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x4e, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x10, 0x0b, 0x12, 0x24, 0x0a,
	0x20, 0x6b, 0x5f, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x10, 0x0c, 0x12, 0x22, 0x0a, 0x1e, 0x6b, 0x5f, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x0d, 0x12, 0x1f, 0x0a, 0x1b, 0x6b, 0x5f, 0x45, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x0e, 0x12, 0x1a, 0x0a, 0x16, 0x6b, 0x5f, 0x45, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x42,
	0x61, 0x6e, 0x10, 0x0f, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x41, 0x0a, 0x25, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x46, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x6f, 0x70, 0x70, 0x65, 0x64, 0x2e, 0x45, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x07, 0x45, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x55, 0x6e,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x6b,
	0x5f, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x45,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x55, 0x70, 0x10, 0x02, 0x22, 0x35, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x22, 0x22, 0x0a,
	0x20, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xe3, 0x01, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3b, 0x0a, 0x0e, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x4d, 0x73, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0b,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x49, 0x73, 0x49, 0x6e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x4e, 0x0a, 0x25, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x49, 0x73, 0x49, 0x6e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0xe8, 0x06, 0x0a, 0x10, 0x43, 0x4d, 0x73,
	0x67, 0x44, 0x65, 0x76, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0c,
	0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x0b, 0x77, 0x69, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x44, 0x65, 0x76, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x10,
	0x6e, 0x65, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x30,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x74, 0x68,
	0x54, 0x65, 0x61, 0x6d, 0x30, 0x12, 0x27, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x5f, 0x77, 0x6f, 0x72,
	0x74, 0x68, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x6e, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x74, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x31, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x30, 0x0a,
	0x14, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6f, 0x70, 0x65,
	0x6e, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12,
	0x32, 0x0a, 0x15, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x30, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x4d, 0x61, 0x73, 0x6b, 0x54, 0x65,
	0x61, 0x6d, 0x30, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x31, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x4d, 0x61,
	0x73, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x31, 0x12, 0x36, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x33, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x1a, 0x90, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x61, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65,
	0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x72,
	0x6f, 0x49, 0x64, 0x22, 0xd7, 0x0a, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x6d, 0x6d,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x4d, 0x6d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x5f, 0x68, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x65, 0x73,
	0x12, 0x5c, 0x0a, 0x0f, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x76, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x48, 0x65, 0x72, 0x6f, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x0e,
	0x68, 0x65, 0x72, 0x6f, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x2d,
	0x0a, 0x13, 0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x6d, 0x6d, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x63, 0x6f, 0x6f,
	0x70, 0x4d, 0x6d, 0x4d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x6d, 0x6d, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x6d, 0x50, 0x61, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x32, 0x0a, 0x15, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x16,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x50, 0x6c, 0x61,
	0x79, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x98, 0x01, 0x0a, 0x0c, 0x4e, 0x65, 0x78, 0x74, 0x4d, 0x4d, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x6d, 0x6d, 0x5f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x6d, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x49, 0x0a, 0x0d, 0x48, 0x65,
	0x72, 0x6f, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68,
	0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65,
	0x72, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x1a, 0x4c, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x1a, 0xa7, 0x04, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x09, 0x6d, 0x6d, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76,
	0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4e,
	0x65, 0x78, 0x74, 0x4d, 0x4d, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x08, 0x6d, 0x6d, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x52, 0x0a, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76,
	0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52,
	0x08, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x73, 0x12, 0x52, 0x0a, 0x08, 0x77, 0x65, 0x65,
	0x6b, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x76, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x52, 0x08, 0x77, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x2e, 0x0a,
	0x13, 0x75, 0x6e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x75, 0x6e, 0x72, 0x61,
	0x6e, 0x6b, 0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x6f, 0x6f, 0x70, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6f, 0x70, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75,
	0x6e, 0x72, 0x61, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x72, 0x61,
	0x6e, 0x6b, 0x65, 0x64, 0x51, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x16, 0x63,
	0x6f, 0x6f, 0x70, 0x5f, 0x6d, 0x6d, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x63, 0x6f, 0x6f,
	0x70, 0x4d, 0x6d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x31, 0x0a,
	0x17, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x44, 0x52, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x22, 0x3f, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x44, 0x52,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49,
	0x64, 0x22, 0x69, 0x0a, 0x2a, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x44,
	0x52, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x1d,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x76, 0x61, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x76, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x61, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x76, 0x61, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x25,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x86, 0x02, 0x0a, 0x25, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x11, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x52, 0x0f, 0x70, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x72, 0x76,
	0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x1a, 0x59, 0x0a,
	0x0f, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x0f, 0x43, 0x4d, 0x73,
	0x67, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x4d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x47, 0x43, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x3e, 0x0a, 0x0a, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45,
	0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a,
	0x0b, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x65,
	0x72, 0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x22, 0xb0, 0x01, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x39,
	0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6d, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x4d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x4d, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0xb9, 0x03, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22,
	0xad, 0x02, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x49, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f,
	0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x6b,
	0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x50, 0x69, 0x6e, 0x67, 0x73, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54,
	0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d,
	0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x10, 0x08, 0x12,
	0x1c, 0x0a, 0x18, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x4e, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x10, 0x09, 0x12, 0x1d, 0x0a,
	0x19, 0x6b, 0x5f, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x10, 0x0b, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x6f, 0x65, 0x73, 0x6e, 0x74, 0x48, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x0c, 0x22,
	0x35, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5a, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x4e,
	0x6f, 0x74, 0x49, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x6b,
	0x5f, 0x65, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x10,
	0x03, 0x22, 0xad, 0x01, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x72,
	0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52,
	0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x39, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6d,
	0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x4d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x22, 0xcb, 0x03, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xde,
	0x02, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x49, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f,
	0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x44, 0x10,
	0x04, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x50, 0x69, 0x6e, 0x67, 0x73, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65,
	0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x09, 0x12, 0x12, 0x0a,
	0x0e, 0x6b, 0x5f, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x10,
	0x0a, 0x12, 0x1c, 0x0a, 0x18, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x10, 0x0b, 0x12,
	0x1d, 0x0a, 0x19, 0x6b, 0x5f, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x0c, 0x12, 0x19,
	0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65,
	0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x0e, 0x22,
	0x88, 0x03, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x69,
	0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x75, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f,
	0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x07, 0x45, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x4b, 0x69, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f,
	0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x07,
	0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x53, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x10, 0x09, 0x22, 0xf9, 0x02, 0x0a, 0x21, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x31, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x88, 0x02, 0x0a, 0x09,
	0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x10,
	0x03, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73,
	0x79, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x0a, 0x12, 0x1d, 0x0a, 0x19, 0x6b, 0x5f, 0x65, 0x43, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x68, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x10, 0x0c, 0x22, 0xd1, 0x02, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x36, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a,
	0x0e, 0x62, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x42, 0x6f, 0x74, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x52, 0x0d, 0x62, 0x6f, 0x74, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64,
	0x65, 0x76, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x39, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xb2, 0x04, 0x0a, 0x22, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x32, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x81, 0x03, 0x0a, 0x09,
	0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x10,
	0x03, 0x12, 0x1c, 0x0a, 0x18, 0x6b, 0x5f, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x10, 0x04, 0x12,
	0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f,
	0x65, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f,
	0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x6b,
	0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x6b,
	0x5f, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x0a, 0x12,
	0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x0b, 0x12, 0x1d, 0x0a, 0x19, 0x6b, 0x5f, 0x65, 0x43, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x68, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x10, 0x0c, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f,
	0x46, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x10, 0x0d, 0x12, 0x15, 0x0a, 0x11,
	0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x10, 0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x10, 0x0f, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x54,
	0x6f, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x48, 0x69, 0x67, 0x68, 0x4d, 0x4d, 0x52, 0x10, 0x10, 0x22,
	0x3a, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0xa6, 0x06, 0x0a, 0x25,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x8e, 0x05, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x44, 0x10, 0x03, 0x12,
	0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f,
	0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f,
	0x65, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x06,
	0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x07,
	0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x0b, 0x12,
	0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x10, 0x0c, 0x12, 0x1d, 0x0a, 0x19, 0x6b, 0x5f,
	0x65, 0x4e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x0d, 0x12, 0x1a, 0x0a, 0x16, 0x6b, 0x5f, 0x65,
	0x54, 0x6f, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x46, 0x6f,
	0x72, 0x4d, 0x4d, 0x10, 0x0e, 0x12, 0x1f, 0x0a, 0x1b, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x4d,
	0x61, 0x6e, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x10, 0x0f, 0x12, 0x1d, 0x0a, 0x19, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f,
	0x4d, 0x61, 0x6e, 0x79, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x46, 0x6f,
	0x72, 0x4d, 0x4d, 0x10, 0x10, 0x12, 0x22, 0x0a, 0x1e, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x4d,
	0x61, 0x6e, 0x79, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x46, 0x6f, 0x72,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x10, 0x11, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65,
	0x54, 0x6f, 0x6f, 0x46, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72,
	0x4d, 0x4d, 0x10, 0x12, 0x12, 0x1e, 0x0a, 0x1a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x46, 0x65,
	0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x10, 0x13, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x4d, 0x69, 0x73, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x14, 0x12,
	0x1c, 0x0a, 0x18, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x10, 0x15, 0x12, 0x1b, 0x0a,
	0x17, 0x6b, 0x5f, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x10, 0x16, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f,
	0x65, 0x54, 0x6f, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x4f,
	0x6e, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x17, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x18, 0x12, 0x18, 0x0a, 0x14, 0x6b,
	0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x6e,
	0x65, 0x75, 0x70, 0x10, 0x19, 0x12, 0x1d, 0x0a, 0x19, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x6e, 0x65,
	0x75, 0x70, 0x10, 0x1a, 0x22, 0x66, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa9, 0x03, 0x0a,
	0x25, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x8f, 0x02, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f,
	0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f,
	0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x10,
	0x02, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x44, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x4d, 0x61,
	0x6e, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x6b,
	0x5f, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x10, 0x07, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x08, 0x12, 0x12,
	0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64,
	0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x10, 0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x6b,
	0x5f, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x6f, 0x65, 0x73, 0x6e, 0x74, 0x48, 0x61,
	0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x0b, 0x22, 0x87, 0x05, 0x0a, 0x18, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x3b, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x25, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x14, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x75, 0x69, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xdd, 0x02, 0x0a, 0x06, 0x45, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x0a,
	0x0f, 0x6b, 0x5f, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x04, 0x12, 0x1e, 0x0a,
	0x1a, 0x6b, 0x5f, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x10, 0x05, 0x12, 0x21, 0x0a,
	0x1d, 0x6b, 0x5f, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x06,
	0x12, 0x28, 0x0a, 0x24, 0x6b, 0x5f, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x4e, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f,
	0x65, 0x4c, 0x65, 0x66, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11,
	0x6b, 0x5f, 0x65, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x10, 0x09, 0x12, 0x25, 0x0a, 0x21, 0x6b, 0x5f, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f,
	0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x55, 0x73, 0x65, 0x72,
	0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x4d, 0x4d, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x0c, 0x12, 0x23, 0x0a,
	0x1f, 0x6b, 0x5f, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64,
	0x10, 0x0d, 0x22, 0x39, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x6a, 0x6f, 0x69, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x99, 0x01,
	0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x69, 0x61, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a,
	0x0d, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x6d, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x4d, 0x4d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x4d, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x8c, 0x01, 0x0a, 0x26, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x69, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x72,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x68,
	0x65, 0x72, 0x6f, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x22, 0xde, 0x02, 0x0a, 0x27, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe1, 0x01, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f,
	0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f,
	0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f,
	0x42, 0x75, 0x73, 0x79, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f,
	0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x10, 0x06,
	0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d,
	0x69, 0x6e, 0x67, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x10, 0x08,
	0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x4e, 0x6f, 0x74,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x09, 0x22, 0xa1, 0x01, 0x0a, 0x20, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x72, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x68,
	0x65, 0x72, 0x6f, 0x5f, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x22, 0x96,
	0x03, 0x0a, 0x28, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x97, 0x02,
	0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b,
	0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x04, 0x12, 0x12, 0x0a,
	0x0e, 0x6b, 0x5f, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x10,
	0x05, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x48, 0x65,
	0x72, 0x6f, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10,
	0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x10, 0x0b, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x10, 0x0c, 0x22, 0x51, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x65, 0x76, 0x53, 0x65, 0x74, 0x4d,
	0x4d, 0x42, 0x69, 0x61, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x67, 0x0a, 0x1d, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x22, 0xcc, 0x07, 0x0a, 0x25, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x1a, 0xa9, 0x04, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x4c,
	0x6f, 0x62, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x54, 0x65, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x64, 0x65, 0x61, 0x74, 0x68, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x61, 0x74, 0x68, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x69, 0x74, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x69, 0x74, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x72, 0x6f,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x68, 0x65,
	0x72, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x5f, 0x77,
	0x6f, 0x72, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x30, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x4d,
	0x61, 0x73, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x30, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x61, 0x6d,
	0x31, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x73, 0x4d, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x31, 0x22, 0xb3, 0x01, 0x0a,
	0x07, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b,
	0x6b, 0x5f, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x21, 0x0a,
	0x1d, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x54, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x72, 0x69, 0x6c, 0x79, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03,
	0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x54, 0x6f,
	0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64,
	0x10, 0x05, 0x22, 0xea, 0x01, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x45, 0x47, 0x43, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52,
	0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22,
	0xf7, 0x04, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x70, 0x65, 0x63,
	0x74, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x64,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x64, 0x72,
	0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x64, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x75, 0x64, 0x70,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x70, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x64, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x75, 0x64, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x55, 0x72, 0x6c,
	0x22, 0xa6, 0x02, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42,
	0x75, 0x73, 0x79, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f, 0x65,
	0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x6b,
	0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x46, 0x75, 0x6c, 0x6c, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x6b, 0x5f, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x64, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x6b, 0x5f, 0x65, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x10, 0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x10, 0x0c, 0x22, 0xd6, 0x01, 0x0a, 0x1b, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x70, 0x65, 0x63,
	0x74, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x62,
	0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x6f, 0x62,
	0x62, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x47, 0x43, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x22, 0x67, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53,
	0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x1c,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64,
	0x65, 0x76, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48,
	0x69, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x69, 0x6e,
	0x74, 0x22, 0xab, 0x04, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x73,
	0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73,
	0x6c, 0x6f, 0x74, 0x73, 0x1a, 0xda, 0x02, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x53,
	0x6c, 0x6f, 0x74, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x1a, 0x64,
	0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x45, 0x53, 0x74, 0x61, 0x74, 0x49, 0x44, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x1a, 0x5b, 0x0a, 0x04, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68,
	0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x77, 0x69,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x65, 0x72, 0x6f, 0x57, 0x69,
	0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x4b, 0x69, 0x6c, 0x6c,
	0x73, 0x22, 0x5c, 0x0a, 0x07, 0x45, 0x53, 0x74, 0x61, 0x74, 0x49, 0x44, 0x12, 0x13, 0x0a, 0x0f,
	0x6b, 0x5f, 0x65, 0x53, 0x74, 0x61, 0x74, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f, 0x65, 0x53, 0x74, 0x61, 0x74, 0x5f, 0x57, 0x69, 0x6e,
	0x73, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x53, 0x74, 0x61, 0x74, 0x5f, 0x4b,
	0x69, 0x6c, 0x6c, 0x73, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x10, 0x03, 0x22,
	0xe2, 0x01, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x38,
	0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a,
	0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65,
	0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x6f, 0x6c, 0x6f, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x22, 0x9f, 0x02, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b,
	0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x6b,
	0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e,
	0x6b, 0x5f, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x04,
	0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x5f, 0x65, 0x4d, 0x4d, 0x42, 0x75, 0x73, 0x79, 0x10, 0x05, 0x12,
	0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x48, 0x65, 0x72,
	0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14,
	0x6b, 0x5f, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x10, 0x07, 0x22, 0x94, 0x01, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x5f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x64, 0x65, 0x76, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x69, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x69, 0x6e, 0x74, 0x22, 0xa3, 0x02,
	0x0a, 0x25, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x22, 0x7f, 0x0a, 0x07, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a,
	0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75,
	0x73, 0x79, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x10, 0x05, 0x22, 0x60, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x61, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x61, 0x6c, 0x74, 0x22, 0xb8, 0x04, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x34, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65,
	0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x61, 0x6c, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x61, 0x6c, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x61, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x54,
	0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75,
	0x67, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67,
	0x68, 0x22, 0xec, 0x01, 0x0a, 0x07, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a,
	0x17, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x69, 0x6c, 0x79, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x5f, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15,
	0x6b, 0x5f, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x6b, 0x5f, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x10, 0x07,
	0x22, 0xcb, 0x02, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x57, 0x0a, 0x0d, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x76, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xcf, 0x01, 0x0a,
	0x0c, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70,
	0x6f, 0x73, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd6,
	0x02, 0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x65, 0x76, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x65, 0x76, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x0a,
	0x45, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x5f,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x5f, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x5f, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x02, 0x22, 0xe3, 0x01, 0x0a, 0x2c, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x44, 0x65, 0x76, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x44, 0x65, 0x76, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5f, 0x0a, 0x07,
	0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x22, 0xd7, 0x03,
	0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x44, 0x65, 0x76, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x44,
	0x65, 0x76, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x69, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xe5, 0x01, 0x0a, 0x07, 0x45, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x0f, 0x6b,
	0x5f, 0x65, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x5f, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x4d, 0x52, 0x10, 0x02, 0x12,
	0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x4d, 0x52, 0x55, 0x6e, 0x63, 0x65,
	0x72, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x79, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65,
	0x53, 0x65, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x04, 0x12,
	0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x53, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x53, 0x65, 0x74, 0x4e,
	0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x6b, 0x5f, 0x65, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x10, 0x07, 0x12, 0x10,
	0x0a, 0x0c, 0x6b, 0x5f, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x65, 0x74, 0x10, 0x09,
	0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x58, 0x50, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x42, 0x61, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x0b, 0x22, 0xc9, 0x01, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x65, 0x76, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x44, 0x65, 0x76, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x5f, 0x0a, 0x07, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x18, 0x0a,
	0x14, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x10, 0x02, 0x12, 0x14, 0x0a,
	0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x03, 0x22, 0xc5, 0x02, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x28,
	0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x75, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0xb0, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x3b, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a,
	0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x44, 0x0a, 0x28, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x5d, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x43, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x22, 0x46, 0x0a, 0x2a, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4b, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x37, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x69, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f,
	0x42, 0x75, 0x73, 0x79, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x04, 0x22, 0x1d, 0x0a,
	0x1b, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47,
	0x65, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0xc3, 0x03, 0x0a,
	0x23, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47,
	0x65, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x48, 0x65, 0x72,
	0x6f, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x57, 0x0a, 0x0f, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65,
	0x74, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x0e, 0x68, 0x65, 0x72, 0x6f, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x65, 0x72, 0x6f,
	0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x68, 0x65, 0x72, 0x6f, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x1f, 0x0a, 0x04, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f,
	0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x07, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b,
	0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x05, 0x12, 0x13, 0x0a,
	0x0f, 0x6b, 0x5f, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64,
	0x10, 0x06, 0x22, 0x5b, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x65, 0x72,
	0x6f, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x68, 0x65, 0x72, 0x6f, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22,
	0xe2, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x76, 0x0a, 0x07,
	0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x79, 0x6e,
	0x63, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75,
	0x73, 0x79, 0x10, 0x05, 0x22, 0xd3, 0x01, 0x0a, 0x0f, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x58, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70,
	0x65, 0x6e, 0x74, 0x5f, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x70,
	0x65, 0x6e, 0x74, 0x58, 0x70, 0x12, 0x36, 0x0a, 0x07, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x07, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x1a, 0x3b, 0x0a,
	0x06, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x18, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x6f, 0x6f,
	0x6b, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xbc, 0x02, 0x0a, 0x20, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x6f, 0x6f, 0x6b,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x42, 0x6f, 0x6f, 0x6b, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b,
	0x22, 0x95, 0x01, 0x0a, 0x07, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x0a,
	0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x44, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f,
	0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x10, 0x03, 0x12,
	0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x05,
	0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x06, 0x22, 0x30, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f,
	0x6b, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0xf5, 0x01, 0x0a, 0x1d, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x64, 0x0a, 0x07,
	0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79,
	0x10, 0x04, 0x22, 0x46, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x29, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x6a, 0x0a, 0x20, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xde, 0x02, 0x0a, 0x28, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x09, 0x45, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4e, 0x6f, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x4c, 0x6f, 0x6e, 0x67, 0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x48, 0x61, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x10, 0x06, 0x12, 0x20, 0x0a, 0x1c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x10, 0x07, 0x22, 0x8b, 0x08, 0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67,
	0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x65, 0x72,
	0x6f, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x68, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x56, 0x30, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x4e, 0x0a, 0x0d, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4d,
	0x6f, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xad, 0x01, 0x0a, 0x10, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x4d, 0x6f, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x6f, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6d, 0x6f,
	0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x8a, 0x01, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x5d, 0x0a, 0x0c, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x1a, 0xa0, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x56,
	0x30, 0x12, 0x4b, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x6f, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x0d, 0x6d, 0x6f, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x45,
	0x0a, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x72,
	0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x09, 0x68, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x25, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x65, 0x72, 0x6f, 0x5f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x68, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x22, 0xa0, 0x01, 0x0a, 0x1c, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x46, 0x69, 0x6e, 0x64, 0x48,
	0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x22, 0x6d, 0x0a, 0x17, 0x43,
	0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0xef, 0x03, 0x0a, 0x24, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x46, 0x69, 0x6e,
	0x64, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x46, 0x69, 0x6e, 0x64, 0x48,
	0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x46, 0x69, 0x6e, 0x64,
	0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0xeb, 0x01, 0x0a, 0x0f,
	0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x32, 0x0a, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48,
	0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x75,
	0x6d, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e,
	0x75, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x31, 0x0a, 0x09, 0x45, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x22, 0x8c, 0x01, 0x0a,
	0x27, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x65, 0x72, 0x6f,
	0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x68, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0a,
	0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x0a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x2f,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x72,
	0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x09,
	0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x22,
	0x4f, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x47, 0x65, 0x74, 0x4f, 0x6c, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xba, 0x04, 0x0a, 0x29, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4f, 0x6c, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x39, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4f, 0x6c, 0x64, 0x48, 0x65, 0x72, 0x6f,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x52, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4f, 0x6c, 0x64, 0x48, 0x65,
	0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x6c, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x4e, 0x0a, 0x0d, 0x4f, 0x6c, 0x64, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x5f, 0x56, 0x30, 0x12, 0x3d, 0x0a, 0x1b, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x18, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x73, 0x1a, 0xb2, 0x01, 0x0a, 0x08, 0x4f, 0x6c, 0x64, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x57, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4f, 0x6c, 0x64, 0x48, 0x65,
	0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x6c, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x56,
	0x30, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x31, 0x0a, 0x09, 0x45, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x22, 0xee, 0x02,
	0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x0b,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x35, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x45, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x0b, 0x45, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x47, 0x72, 0x69, 0x65, 0x66, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x4c, 0x65, 0x66, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x22, 0xc1,
	0x02, 0x0a, 0x2b, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x6f,
	0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3b, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b,
	0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x6b,
	0x5f, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12,
	0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x6b, 0x5f, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79,
	0x10, 0x07, 0x22, 0x41, 0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0xda, 0x02, 0x0a, 0x2c, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x53, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0x27, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x52,
	0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b,
	0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79,
	0x10, 0x07, 0x22, 0x6f, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x68, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x25, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x72, 0x6f,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x35, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x31, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f,
	0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x26,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x76, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0xae, 0x02, 0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x34, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x68, 0x6f, 0x75,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x22, 0x70, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x15,
	0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x22, 0x36, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x46, 0x6f, 0x72,
	0x75, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xc2,
	0x02, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x75, 0x6d, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x6b, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65,
	0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x10, 0x02,
	0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10,
	0x03, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65,
	0x64, 0x10, 0x04, 0x22, 0x3f, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x65, 0x78, 0x74, 0x22, 0x4c, 0x0a,
	0x21, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x22, 0xaf, 0x02, 0x0a, 0x29,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x64, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x22, 0x52, 0x0a, 0x09, 0x45, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x22, 0x84, 0x01,
	0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x11, 0x73, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x2a, 0xb4, 0x21, 0x0a, 0x18, 0x45, 0x47, 0x43, 0x43, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x25, 0x0a, 0x20, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0xb2, 0x46, 0x12, 0x2d, 0x0a, 0x28, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xb3, 0x46, 0x12, 0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x70, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0xb4, 0x46, 0x12, 0x2c, 0x0a,
	0x27, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xb5, 0x46, 0x12, 0x27, 0x0a, 0x22, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x10, 0xb6, 0x46, 0x12, 0x1f, 0x0a, 0x1a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x10, 0xb7, 0x46, 0x12, 0x27, 0x0a, 0x22, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xb8, 0x46, 0x12, 0x24,
	0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x49, 0x73, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x10, 0xb9, 0x46, 0x12, 0x2c, 0x0a, 0x27, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x49, 0x73, 0x49, 0x6e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10,
	0xba, 0x46, 0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0xbb, 0x46, 0x12, 0x21, 0x0a, 0x1c, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x65,
	0x76, 0x53, 0x65, 0x74, 0x4d, 0x4d, 0x42, 0x69, 0x61, 0x73, 0x10, 0xbf, 0x46, 0x12, 0x23, 0x0a,
	0x1e, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x10,
	0xc0, 0x46, 0x12, 0x2b, 0x0a, 0x26, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xc1, 0x46, 0x12,
	0x21, 0x0a, 0x1c, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x10,
	0xc2, 0x46, 0x12, 0x29, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xc3, 0x46, 0x12, 0x27, 0x0a,
	0x22, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x10, 0xc4, 0x46, 0x12, 0x25, 0x0a, 0x20, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x10, 0xc5, 0x46, 0x12, 0x2b, 0x0a,
	0x26, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x65, 0x76, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x10, 0xc6, 0x46, 0x12, 0x33, 0x0a, 0x2e, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x44, 0x65, 0x76, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xc7, 0x46, 0x12,
	0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x44, 0x52, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x10, 0x8c, 0x47, 0x12,
	0x29, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x44,
	0x52, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x10, 0x8d, 0x47, 0x12, 0x31, 0x0a, 0x2c, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x44, 0x52, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x8e, 0x47, 0x12, 0x24, 0x0a,
	0x1f, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x56, 0x61, 0x72,
	0x10, 0x93, 0x47, 0x12, 0x2c, 0x0a, 0x27, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x94,
	0x47, 0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x10, 0x95, 0x47, 0x12, 0x2a, 0x0a, 0x25, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x96,
	0x47, 0x12, 0x2c, 0x0a, 0x27, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x97, 0x47, 0x12,
	0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x10, 0x98, 0x47, 0x12, 0x2c, 0x0a, 0x27, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x10, 0x99, 0x47, 0x12, 0x21, 0x0a, 0x1c, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x10, 0x9c, 0x47, 0x12, 0x29, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x9d,
	0x47, 0x12, 0x20, 0x0a, 0x1b, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x10, 0xa3, 0x47, 0x12, 0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xa4, 0x47, 0x12, 0x1f, 0x0a,
	0x1a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x10, 0xa5, 0x47, 0x12, 0x27,
	0x0a, 0x22, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xa6, 0x47, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x4a, 0x6f, 0x69, 0x6e, 0x10, 0xa7, 0x47, 0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xa8, 0x47, 0x12,
	0x20, 0x0a, 0x1b, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xa9,
	0x47, 0x12, 0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xaa, 0x47, 0x12, 0x24, 0x0a, 0x1f, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x10, 0xab,
	0x47, 0x12, 0x2c, 0x0a, 0x27, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xac, 0x47, 0x12,
	0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x10, 0xad, 0x47, 0x12, 0x2c, 0x0a, 0x27, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x10, 0xae, 0x47, 0x12, 0x1f, 0x0a, 0x1a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54,
	0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0xaf, 0x47, 0x12, 0x23, 0x0a, 0x1e, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x6a, 0x6f, 0x69,
	0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x10, 0xb1, 0x47, 0x12, 0x25, 0x0a, 0x20, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x69, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x10, 0xb2, 0x47,
	0x12, 0x2d, 0x0a, 0x28, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x69, 0x61,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xb3, 0x47, 0x12,
	0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x10, 0xb4, 0x47, 0x12, 0x2e, 0x0a, 0x29, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xb5, 0x47, 0x12, 0x27, 0x0a, 0x22, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0xb6, 0x47,
	0x12, 0x2f, 0x0a, 0x2a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xb7,
	0x47, 0x12, 0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x10, 0xcc, 0x47, 0x12, 0x2c, 0x0a, 0x27, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x10, 0xcd, 0x47, 0x12, 0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0xce, 0x47, 0x12,
	0x25, 0x0a, 0x20, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x10, 0xcf, 0x47, 0x12, 0x2d, 0x0a, 0x28, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x10, 0xd0, 0x47, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x65, 0x76, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0xd4, 0x47, 0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x65, 0x76, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xd5, 0x47, 0x12, 0x27, 0x0a,
	0x22, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x10, 0xd6, 0x47, 0x12, 0x2f, 0x0a, 0x2a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xd7, 0x47, 0x12, 0x29, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x65, 0x74, 0x4e, 0x65,
	0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10,
	0xd8, 0x47, 0x12, 0x31, 0x0a, 0x2c, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x10, 0xd9, 0x47, 0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x10, 0xda, 0x47, 0x12, 0x2e, 0x0a,
	0x29, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xdb, 0x47, 0x12, 0x22, 0x0a,
	0x1d, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x47, 0x65, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x10, 0xdc,
	0x47, 0x12, 0x2a, 0x0a, 0x25, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xdd, 0x47, 0x12, 0x1f, 0x0a,
	0x1a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x72, 0x6f, 0x10, 0xde, 0x47, 0x12, 0x27,
	0x0a, 0x22, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xdf, 0x47, 0x12, 0x1f, 0x0a, 0x1a, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x6f, 0x6f, 0x6b, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x10, 0xe0, 0x47, 0x12, 0x27, 0x0a, 0x22, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x6f, 0x6f, 0x6b,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xe1,
	0x47, 0x12, 0x1c, 0x0a, 0x17, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x10, 0xe2, 0x47, 0x12,
	0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x10, 0xe3, 0x47, 0x12, 0x20, 0x0a, 0x1b, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x10, 0xe4, 0x47, 0x12, 0x27, 0x0a, 0x22, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x10, 0xe5, 0x47,
	0x12, 0x2f, 0x0a, 0x2a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xe6,
	0x47, 0x12, 0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x10, 0xe9, 0x47, 0x12, 0x2c, 0x0a, 0x27, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x10, 0xea, 0x47, 0x12, 0x23, 0x0a, 0x1e, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x46, 0x69, 0x6e, 0x64, 0x48, 0x65, 0x72,
	0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x10, 0xeb, 0x47, 0x12, 0x2b, 0x0a, 0x26, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x46, 0x69,
	0x6e, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xec, 0x47, 0x12, 0x2a, 0x0a, 0x25, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x10, 0xed, 0x47, 0x12, 0x32, 0x0a, 0x2d, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xee, 0x47, 0x12, 0x2b, 0x0a, 0x26, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x10, 0xef, 0x47, 0x12, 0x33, 0x0a, 0x2e, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xf0, 0x47, 0x12, 0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x10, 0xf1, 0x47, 0x12,
	0x2c, 0x0a, 0x27, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xf2, 0x47, 0x12, 0x25, 0x0a,
	0x20, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x10, 0xf3, 0x47, 0x12, 0x2d, 0x0a, 0x28, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x10, 0xf4, 0x47, 0x12, 0x23, 0x0a, 0x1e, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0xf5, 0x47, 0x12, 0x2b, 0x0a, 0x26, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x10, 0xf6, 0x47, 0x12, 0x21, 0x0a, 0x1c, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x10, 0xf7, 0x47, 0x12, 0x29, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x10, 0xf8, 0x47, 0x12, 0x25, 0x0a, 0x20, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x75,
	0x6d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0xf9, 0x47, 0x12, 0x2d, 0x0a, 0x28, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x75, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xfa, 0x47, 0x12, 0x25, 0x0a, 0x20, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xfb, 0x47,
	0x12, 0x2d, 0x0a, 0x28, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xfc, 0x47, 0x12,
	0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0xfd, 0x47, 0x12, 0x30, 0x0a, 0x2b, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xfe, 0x47, 0x12, 0x2e, 0x0a, 0x29, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x10, 0xff, 0x47, 0x12, 0x36, 0x0a, 0x31, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x10, 0x80, 0x48, 0x12, 0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4f, 0x6c, 0x64, 0x48, 0x65, 0x72,
	0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x10, 0x81, 0x48, 0x12, 0x30, 0x0a,
	0x2b, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x47, 0x65, 0x74, 0x4f, 0x6c, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x82, 0x48, 0x12,
	0x2a, 0x0a, 0x25, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x83, 0x48, 0x2a, 0x89, 0x01, 0x0a, 0x1d,
	0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x23, 0x0a,
	0x1f, 0x6b, 0x5f, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x74,
	0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x6b, 0x5f, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x6f, 0x6f, 0x70, 0x42,
	0x6f, 0x74, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x6b, 0x5f, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x55, 0x6e, 0x72,
	0x61, 0x6e, 0x6b, 0x65, 0x64, 0x10, 0x03, 0x2a, 0x96, 0x01, 0x0a, 0x1d, 0x45, 0x43, 0x69, 0x74,
	0x61, 0x64, 0x65, 0x6c, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x27, 0x0a, 0x23, 0x6b, 0x5f, 0x65,
	0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x47, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x6b, 0x5f, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x6b, 0x5f, 0x65,
	0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x4c, 0x61, 0x6e, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x03,
	0x2a, 0x7a, 0x0a, 0x14, 0x45, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x53, 0x6c, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x6b, 0x5f, 0x45, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x6b, 0x5f,
	0x45, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x6b,
	0x5f, 0x45, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x10, 0x02, 0x2a, 0xbe, 0x0b, 0x0a,
	0x1a, 0x45, 0x43, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x13, 0x6b,
	0x5f, 0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x65,
	0x73, 0x74, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x10, 0x03, 0x12,
	0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x48, 0x65, 0x72, 0x6f,
	0x65, 0x73, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65,
	0x64, 0x48, 0x65, 0x72, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x10, 0x05, 0x12, 0x17,
	0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x4e, 0x6f, 0x74, 0x65, 0x73, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17,
	0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x47, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x47, 0x75, 0x69, 0x64, 0x65, 0x50, 0x61, 0x67, 0x65, 0x10,
	0x09, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x65, 0x45,
	0x64, 0x69, 0x74, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x6b,
	0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x10, 0x0c, 0x12,
	0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x10, 0x0d, 0x12, 0x1d, 0x0a, 0x19, 0x6b, 0x5f, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x57, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64,
	0x53, 0x65, 0x6c, 0x66, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x0f, 0x12, 0x16, 0x0a,
	0x12, 0x6b, 0x5f, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x10, 0x10, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x53, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x11, 0x12, 0x18, 0x0a,
	0x14, 0x6b, 0x5f, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x12, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10,
	0x13, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x10, 0x14, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x15, 0x12, 0x19, 0x0a, 0x15,
	0x6b, 0x5f, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x16, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x4c, 0x65,
	0x66, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x17, 0x12,
	0x1e, 0x0a, 0x1a, 0x6b, 0x5f, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x18, 0x12,
	0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x19, 0x12, 0x17, 0x0a, 0x13,
	0x6b, 0x5f, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x10, 0x1a, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x10, 0x1b, 0x12, 0x17, 0x0a, 0x13, 0x6b,
	0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x10, 0x1c, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x54, 0x61, 0x62, 0x10, 0x1d, 0x12, 0x13, 0x0a, 0x0f,
	0x6b, 0x5f, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x10,
	0x1e, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x42, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x47, 0x75, 0x69, 0x64, 0x65, 0x64, 0x10, 0x1f, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65,
	0x42, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x45, 0x61, 0x73, 0x79, 0x10, 0x20, 0x12,
	0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x42, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x48,
	0x61, 0x72, 0x64, 0x10, 0x21, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x4c, 0x69, 0x76, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x10, 0x22, 0x12,
	0x20, 0x0a, 0x1c, 0x6b, 0x5f, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x6c, 0x65, 0x5f, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x10,
	0x23, 0x12, 0x1e, 0x0a, 0x1a, 0x6b, 0x5f, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x6c, 0x65, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x10,
	0x24, 0x12, 0x1d, 0x0a, 0x19, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x10, 0x25,
	0x12, 0x1e, 0x0a, 0x1a, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10, 0x26,
	0x12, 0x20, 0x0a, 0x1c, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x10, 0x27, 0x12, 0x1a, 0x0a, 0x16, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x10, 0x28, 0x12, 0x1d,
	0x0a, 0x19, 0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x5f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x29, 0x12, 0x1b, 0x0a,
	0x17, 0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x5f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x2a, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x2b, 0x12, 0x1c, 0x0a, 0x18, 0x6b, 0x5f, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x48, 0x6f, 0x74,
	0x4b, 0x65, 0x79, 0x10, 0x2c, 0x12, 0x1f, 0x0a, 0x1b, 0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x43, 0x68, 0x61, 0x74, 0x57,
	0x68, 0x65, 0x65, 0x6c, 0x10, 0x2d, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65,
	0x77, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x41, 0x62, 0x6f, 0x75,
	0x74, 0x10, 0x2e, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x10, 0x2f,
	0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x53,
	0x6b, 0x69, 0x70, 0x5f, 0x50, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x10, 0x30, 0x12, 0x1d, 0x0a,
	0x19, 0x6b, 0x5f, 0x65, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x6b, 0x69, 0x70,
	0x5f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x10, 0x31, 0x12, 0x19, 0x0a, 0x15,
	0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x47, 0x75, 0x69, 0x64, 0x65, 0x50, 0x61,
	0x67, 0x65, 0x5f, 0x35, 0x73, 0x10, 0x32, 0x12, 0x1a, 0x0a, 0x16, 0x6b, 0x5f, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x64, 0x47, 0x75, 0x69, 0x64, 0x65, 0x50, 0x61, 0x67, 0x65, 0x5f, 0x31, 0x35,
	0x73, 0x10, 0x33, 0x12, 0x1a, 0x0a, 0x16, 0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64,
	0x47, 0x75, 0x69, 0x64, 0x65, 0x50, 0x61, 0x67, 0x65, 0x5f, 0x33, 0x30, 0x73, 0x10, 0x34, 0x12,
	0x1a, 0x0a, 0x16, 0x6b, 0x5f, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x47, 0x75, 0x69, 0x64,
	0x65, 0x50, 0x61, 0x67, 0x65, 0x5f, 0x36, 0x30, 0x73, 0x10, 0x35, 0x12, 0x15, 0x0a, 0x11, 0x6b,
	0x5f, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x65, 0x73, 0x74,
	0x10, 0x36, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x56, 0x69, 0x61, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x10, 0x37, 0x42, 0x25, 0x5a,
	0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x74, 0x61,
	0x62, 0x75, 0x66, 0x66, 0x2f, 0x6d, 0x61, 0x6e, 0x74, 0x61, 0x2f, 0x64, 0x6f, 0x74, 0x61, 0x3b,
	0x64, 0x6f, 0x74, 0x61,
}

var (
	file_citadel_gcmessages_client_proto_rawDescOnce sync.Once
	file_citadel_gcmessages_client_proto_rawDescData = file_citadel_gcmessages_client_proto_rawDesc
)

func file_citadel_gcmessages_client_proto_rawDescGZIP() []byte {
	file_citadel_gcmessages_client_proto_rawDescOnce.Do(func() {
		file_citadel_gcmessages_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_citadel_gcmessages_client_proto_rawDescData)
	})
	return file_citadel_gcmessages_client_proto_rawDescData
}

var file_citadel_gcmessages_client_proto_enumTypes = make([]protoimpl.EnumInfo, 47)
var file_citadel_gcmessages_client_proto_msgTypes = make([]protoimpl.MessageInfo, 133)
var file_citadel_gcmessages_client_proto_goTypes = []any{
	(EGCCitadelClientMessages)(0),                                   // 0: dota.EGCCitadelClientMessages
	(ECitadelAccountPermissionFlag)(0),                              // 1: dota.ECitadelAccountPermissionFlag
	(ECitadelNewPlayerProgressFlag)(0),                              // 2: dota.ECitadelNewPlayerProgressFlag
	(EProfileCardSlotType)(0),                                       // 3: dota.EProfileCardSlotType
	(ECitadelClientAccountEvent)(0),                                 // 4: dota.ECitadelClientAccountEvent
	(CSOGameAccountClient_EFlags)(0),                                // 5: dota.CSOGameAccountClient.EFlags
	(CSOAccountHeroInfo_EHeroStatus)(0),                             // 6: dota.CSOAccountHeroInfo.EHeroStatus
	(CMsgClientToGCStartMatchmakingResponse_EResultCode)(0),         // 7: dota.CMsgClientToGCStartMatchmakingResponse.EResultCode
	(CMsgGCToClientMatchmakingStopped_EReason)(0),                   // 8: dota.CMsgGCToClientMatchmakingStopped.EReason
	(CMsgClientToGCPartyCreateResponse_EResponse)(0),                // 9: dota.CMsgClientToGCPartyCreateResponse.EResponse
	(CMsgClientToGCPartyLeaveResponse_EResponse)(0),                 // 10: dota.CMsgClientToGCPartyLeaveResponse.EResponse
	(CMsgClientToGCPartyJoinResponse_EResponse)(0),                  // 11: dota.CMsgClientToGCPartyJoinResponse.EResponse
	(CMsgClientToGCPartyAction_EAction)(0),                          // 12: dota.CMsgClientToGCPartyAction.EAction
	(CMsgClientToGCPartyActionResponse_EResponse)(0),                // 13: dota.CMsgClientToGCPartyActionResponse.EResponse
	(CMsgClientToGCPartySetModeResponse_EResponse)(0),               // 14: dota.CMsgClientToGCPartySetModeResponse.EResponse
	(CMsgClientToGCPartyStartMatchResponse_EResponse)(0),            // 15: dota.CMsgClientToGCPartyStartMatchResponse.EResponse
	(CMsgClientToGCPartyInviteUserResponse_EResponse)(0),            // 16: dota.CMsgClientToGCPartyInviteUserResponse.EResponse
	(CMsgGCToClientPartyEvent_EEvent)(0),                            // 17: dota.CMsgGCToClientPartyEvent.EEvent
	(CMsgClientToGCPartyUpdateRosterResponse_EResponse)(0),          // 18: dota.CMsgClientToGCPartyUpdateRosterResponse.EResponse
	(CMsgClientToGCPartySetReadyStateResponse_EResponse)(0),         // 19: dota.CMsgClientToGCPartySetReadyStateResponse.EResponse
	(CMsgClientToGCGetMatchHistoryResponse_EResult)(0),              // 20: dota.CMsgClientToGCGetMatchHistoryResponse.EResult
	(CMsgClientToGCSpectateUserResponse_EResponse)(0),               // 21: dota.CMsgClientToGCSpectateUserResponse.EResponse
	(CMsgCitadelProfileCard_EStatID)(0),                             // 22: dota.CMsgCitadelProfileCard.EStatID
	(CMsgClientToGCUpdateRosterResponse_EResponse)(0),               // 23: dota.CMsgClientToGCUpdateRosterResponse.EResponse
	(CMsgClientToGCGetAccountStatsResponse_EResult)(0),              // 24: dota.CMsgClientToGCGetAccountStatsResponse.EResult
	(CMsgClientToGCGetMatchMetaDataResponse_EResult)(0),             // 25: dota.CMsgClientToGCGetMatchMetaDataResponse.EResult
	(CMsgClientToGCModifyDevAnnouncements_EOperation)(0),            // 26: dota.CMsgClientToGCModifyDevAnnouncements.EOperation
	(CMsgClientToGCModifyDevAnnouncementsResponse_EResult)(0),       // 27: dota.CMsgClientToGCModifyDevAnnouncementsResponse.EResult
	(CMsgClientToGCDevAction_EAction)(0),                            // 28: dota.CMsgClientToGCDevAction.EAction
	(CMsgClientToGCDevActionResponse_EResult)(0),                    // 29: dota.CMsgClientToGCDevActionResponse.EResult
	(CMsgClientToGCUpdateAccountSyncResponse_EResponse)(0),          // 30: dota.CMsgClientToGCUpdateAccountSyncResponse.EResponse
	(CMsgClientToGCGetHeroChoiceResponse_EResult)(0),                // 31: dota.CMsgClientToGCGetHeroChoiceResponse.EResult
	(CMsgClientToGCUnlockHeroResponse_EResult)(0),                   // 32: dota.CMsgClientToGCUnlockHeroResponse.EResult
	(CMsgClientToGCBookUnlockResponse_EResult)(0),                   // 33: dota.CMsgClientToGCBookUnlockResponse.EResult
	(CMsgClientToGCGetBookResponse_EResult)(0),                      // 34: dota.CMsgClientToGCGetBookResponse.EResult
	(CMsgClientToGCSubmitPlaytestUserResponse_EResponse)(0),         // 35: dota.CMsgClientToGCSubmitPlaytestUserResponse.EResponse
	(CMsgClientToGCUpdateHeroBuildResponse_EResponse)(0),            // 36: dota.CMsgClientToGCUpdateHeroBuildResponse.EResponse
	(CMsgClientToGCFindHeroBuildsResponse_EResponse)(0),             // 37: dota.CMsgClientToGCFindHeroBuildsResponse.EResponse
	(CMsgClientToGCUpdateHeroBuildPreferenceResponse_EResponse)(0),  // 38: dota.CMsgClientToGCUpdateHeroBuildPreferenceResponse.EResponse
	(CMsgClientToGCGetOldHeroBuildDataResponse_EResponse)(0),        // 39: dota.CMsgClientToGCGetOldHeroBuildDataResponse.EResponse
	(CMsgClientToGCReportPlayerFromMatch_EReportType)(0),            // 40: dota.CMsgClientToGCReportPlayerFromMatch.EReportType
	(CMsgClientToGCReportPlayerFromMatchResponse_EResponse)(0),      // 41: dota.CMsgClientToGCReportPlayerFromMatchResponse.EResponse
	(CMsgClientToGCGetAccountMatchReportsResponse_EResponse)(0),     // 42: dota.CMsgClientToGCGetAccountMatchReportsResponse.EResponse
	(CMsgClientToGCDeleteHeroBuildResponse_EResponse)(0),            // 43: dota.CMsgClientToGCDeleteHeroBuildResponse.EResponse
	(CMsgClientToGCGetDiscordLinkResponse_EResponse)(0),             // 44: dota.CMsgClientToGCGetDiscordLinkResponse.EResponse
	(CMsgClientToGCGrantForumAccessResponse_EResponse)(0),           // 45: dota.CMsgClientToGCGrantForumAccessResponse.EResponse
	(CMsgClientToGCGetFriendGameStatusResponse_EResponse)(0),        // 46: dota.CMsgClientToGCGetFriendGameStatusResponse.EResponse
	(*CSOGameAccountClient)(nil),                                    // 47: dota.CSOGameAccountClient
	(*CSOAccountSyncStorage)(nil),                                   // 48: dota.CSOAccountSyncStorage
	(*CSOAccountHeroInfo)(nil),                                      // 49: dota.CSOAccountHeroInfo
	(*CMsgCitadelClientHello)(nil),                                  // 50: dota.CMsgCitadelClientHello
	(*CMsgClientToGCStartMatchmaking)(nil),                          // 51: dota.CMsgClientToGCStartMatchmaking
	(*CMsgClientToGCStartMatchmakingResponse)(nil),                  // 52: dota.CMsgClientToGCStartMatchmakingResponse
	(*CMsgClientToGCStopMatchmaking)(nil),                           // 53: dota.CMsgClientToGCStopMatchmaking
	(*CMsgClientToGCStopMatchmakingResponse)(nil),                   // 54: dota.CMsgClientToGCStopMatchmakingResponse
	(*CMsgGCToClientMatchmakingStopped)(nil),                        // 55: dota.CMsgGCToClientMatchmakingStopped
	(*CMsgClientToGCLeaveLobby)(nil),                                // 56: dota.CMsgClientToGCLeaveLobby
	(*CMsgClientToGCLeaveLobbyResponse)(nil),                        // 57: dota.CMsgClientToGCLeaveLobbyResponse
	(*CMsgClientWelcomeCitadel)(nil),                                // 58: dota.CMsgClientWelcomeCitadel
	(*CMsgClientToGCIsInMatchmaking)(nil),                           // 59: dota.CMsgClientToGCIsInMatchmaking
	(*CMsgClientToGCIsInMatchmakingResponse)(nil),                   // 60: dota.CMsgClientToGCIsInMatchmakingResponse
	(*CMsgDevMatchInfo)(nil),                                        // 61: dota.CMsgDevMatchInfo
	(*CMsgGCToClientDevPlaytestStatus)(nil),                         // 62: dota.CMsgGCToClientDevPlaytestStatus
	(*CMsgGCToClientSDRTicket)(nil),                                 // 63: dota.CMsgGCToClientSDRTicket
	(*CMsgClientToGCReplacementSDRTicket)(nil),                      // 64: dota.CMsgClientToGCReplacementSDRTicket
	(*CMsgClientToGCReplacementSDRTicketResponse)(nil),              // 65: dota.CMsgClientToGCReplacementSDRTicketResponse
	(*CMsgClientToGCSetServerConVar)(nil),                           // 66: dota.CMsgClientToGCSetServerConVar
	(*CMsgClientToGCSetServerConVarResponse)(nil),                   // 67: dota.CMsgClientToGCSetServerConVarResponse
	(*CMsgClientToGCPostMatchSurveyResponse)(nil),                   // 68: dota.CMsgClientToGCPostMatchSurveyResponse
	(*CMsgPartyMMInfo)(nil),                                         // 69: dota.CMsgPartyMMInfo
	(*CMsgClientToGCPartyCreate)(nil),                               // 70: dota.CMsgClientToGCPartyCreate
	(*CMsgClientToGCPartyCreateResponse)(nil),                       // 71: dota.CMsgClientToGCPartyCreateResponse
	(*CMsgClientToGCPartyLeave)(nil),                                // 72: dota.CMsgClientToGCPartyLeave
	(*CMsgClientToGCPartyLeaveResponse)(nil),                        // 73: dota.CMsgClientToGCPartyLeaveResponse
	(*CMsgClientToGCPartyJoin)(nil),                                 // 74: dota.CMsgClientToGCPartyJoin
	(*CMsgClientToGCPartyJoinResponse)(nil),                         // 75: dota.CMsgClientToGCPartyJoinResponse
	(*CMsgClientToGCPartyAction)(nil),                               // 76: dota.CMsgClientToGCPartyAction
	(*CMsgClientToGCPartyActionResponse)(nil),                       // 77: dota.CMsgClientToGCPartyActionResponse
	(*CMsgClientToGCPartySetMode)(nil),                              // 78: dota.CMsgClientToGCPartySetMode
	(*CMsgClientToGCPartySetModeResponse)(nil),                      // 79: dota.CMsgClientToGCPartySetModeResponse
	(*CMsgClientToGCPartyStartMatch)(nil),                           // 80: dota.CMsgClientToGCPartyStartMatch
	(*CMsgClientToGCPartyStartMatchResponse)(nil),                   // 81: dota.CMsgClientToGCPartyStartMatchResponse
	(*CMsgClientToGCPartyInviteUser)(nil),                           // 82: dota.CMsgClientToGCPartyInviteUser
	(*CMsgClientToGCPartyInviteUserResponse)(nil),                   // 83: dota.CMsgClientToGCPartyInviteUserResponse
	(*CMsgGCToClientPartyEvent)(nil),                                // 84: dota.CMsgGCToClientPartyEvent
	(*CMsgGCToClientCanRejoinParty)(nil),                            // 85: dota.CMsgGCToClientCanRejoinParty
	(*CMsgClientToGCPartyJoinViaCode)(nil),                          // 86: dota.CMsgClientToGCPartyJoinViaCode
	(*CMsgClientToGCPartyJoinViaCodeResponse)(nil),                  // 87: dota.CMsgClientToGCPartyJoinViaCodeResponse
	(*CMsgClientToGCPartyUpdateRoster)(nil),                         // 88: dota.CMsgClientToGCPartyUpdateRoster
	(*CMsgClientToGCPartyUpdateRosterResponse)(nil),                 // 89: dota.CMsgClientToGCPartyUpdateRosterResponse
	(*CMsgClientToGCPartySetReadyState)(nil),                        // 90: dota.CMsgClientToGCPartySetReadyState
	(*CMsgClientToGCPartySetReadyStateResponse)(nil),                // 91: dota.CMsgClientToGCPartySetReadyStateResponse
	(*CMsgClientToGCDevSetMMBias)(nil),                              // 92: dota.CMsgClientToGCDevSetMMBias
	(*CMsgClientToGCGetMatchHistory)(nil),                           // 93: dota.CMsgClientToGCGetMatchHistory
	(*CMsgClientToGCGetMatchHistoryResponse)(nil),                   // 94: dota.CMsgClientToGCGetMatchHistoryResponse
	(*CMsgClientToGCSpectateUser)(nil),                              // 95: dota.CMsgClientToGCSpectateUser
	(*CMsgClientToGCSpectateUserResponse)(nil),                      // 96: dota.CMsgClientToGCSpectateUserResponse
	(*CMsgClientToGCSpectateLobby)(nil),                             // 97: dota.CMsgClientToGCSpectateLobby
	(*CMsgClientToGCSpectateLobbyResponse)(nil),                     // 98: dota.CMsgClientToGCSpectateLobbyResponse
	(*CMsgClientToGCGetProfileCard)(nil),                            // 99: dota.CMsgClientToGCGetProfileCard
	(*CMsgCitadelProfileCard)(nil),                                  // 100: dota.CMsgCitadelProfileCard
	(*CMsgClientToGCUpdateRoster)(nil),                              // 101: dota.CMsgClientToGCUpdateRoster
	(*CMsgClientToGCUpdateRosterResponse)(nil),                      // 102: dota.CMsgClientToGCUpdateRosterResponse
	(*CMsgClientToGCGetAccountStats)(nil),                           // 103: dota.CMsgClientToGCGetAccountStats
	(*CMsgClientToGCGetAccountStatsResponse)(nil),                   // 104: dota.CMsgClientToGCGetAccountStatsResponse
	(*CMsgClientToGCGetMatchMetaData)(nil),                          // 105: dota.CMsgClientToGCGetMatchMetaData
	(*CMsgClientToGCGetMatchMetaDataResponse)(nil),                  // 106: dota.CMsgClientToGCGetMatchMetaDataResponse
	(*CMsgGCToClientDevAnnouncements)(nil),                          // 107: dota.CMsgGCToClientDevAnnouncements
	(*CMsgClientToGCModifyDevAnnouncements)(nil),                    // 108: dota.CMsgClientToGCModifyDevAnnouncements
	(*CMsgClientToGCModifyDevAnnouncementsResponse)(nil),            // 109: dota.CMsgClientToGCModifyDevAnnouncementsResponse
	(*CMsgClientToGCDevAction)(nil),                                 // 110: dota.CMsgClientToGCDevAction
	(*CMsgClientToGCDevActionResponse)(nil),                         // 111: dota.CMsgClientToGCDevActionResponse
	(*CMsgClientToGCRecordClientEvents)(nil),                        // 112: dota.CMsgClientToGCRecordClientEvents
	(*CMsgClientToGCRecordClientEventsResponse)(nil),                // 113: dota.CMsgClientToGCRecordClientEventsResponse
	(*CMsgClientToGCSetNewPlayerProgress)(nil),                      // 114: dota.CMsgClientToGCSetNewPlayerProgress
	(*CMsgClientToGCSetNewPlayerProgressResponse)(nil),              // 115: dota.CMsgClientToGCSetNewPlayerProgressResponse
	(*CMsgClientToGCUpdateAccountSync)(nil),                         // 116: dota.CMsgClientToGCUpdateAccountSync
	(*CMsgClientToGCUpdateAccountSyncResponse)(nil),                 // 117: dota.CMsgClientToGCUpdateAccountSyncResponse
	(*CMsgClientToGCGetHeroChoice)(nil),                             // 118: dota.CMsgClientToGCGetHeroChoice
	(*CMsgClientToGCGetHeroChoiceResponse)(nil),                     // 119: dota.CMsgClientToGCGetHeroChoiceResponse
	(*CMsgClientToGCUnlockHero)(nil),                                // 120: dota.CMsgClientToGCUnlockHero
	(*CMsgClientToGCUnlockHeroResponse)(nil),                        // 121: dota.CMsgClientToGCUnlockHeroResponse
	(*CMsgAccountBook)(nil),                                         // 122: dota.CMsgAccountBook
	(*CMsgClientToGCBookUnlock)(nil),                                // 123: dota.CMsgClientToGCBookUnlock
	(*CMsgClientToGCBookUnlockResponse)(nil),                        // 124: dota.CMsgClientToGCBookUnlockResponse
	(*CMsgClientToGCGetBook)(nil),                                   // 125: dota.CMsgClientToGCGetBook
	(*CMsgClientToGCGetBookResponse)(nil),                           // 126: dota.CMsgClientToGCGetBookResponse
	(*CMsgGCToClientBookUpdated)(nil),                               // 127: dota.CMsgGCToClientBookUpdated
	(*CMsgClientToGCSubmitPlaytestUser)(nil),                        // 128: dota.CMsgClientToGCSubmitPlaytestUser
	(*CMsgClientToGCSubmitPlaytestUserResponse)(nil),                // 129: dota.CMsgClientToGCSubmitPlaytestUserResponse
	(*CMsgHeroBuild)(nil),                                           // 130: dota.CMsgHeroBuild
	(*CMsgClientToGCUpdateHeroBuild)(nil),                           // 131: dota.CMsgClientToGCUpdateHeroBuild
	(*CMsgClientToGCUpdateHeroBuildResponse)(nil),                   // 132: dota.CMsgClientToGCUpdateHeroBuildResponse
	(*CMsgClientToGCFindHeroBuilds)(nil),                            // 133: dota.CMsgClientToGCFindHeroBuilds
	(*CMsgHeroBuildPreference)(nil),                                 // 134: dota.CMsgHeroBuildPreference
	(*CMsgClientToGCFindHeroBuildsResponse)(nil),                    // 135: dota.CMsgClientToGCFindHeroBuildsResponse
	(*CMsgClientToGCUpdateHeroBuildPreference)(nil),                 // 136: dota.CMsgClientToGCUpdateHeroBuildPreference
	(*CMsgClientToGCUpdateHeroBuildPreferenceResponse)(nil),         // 137: dota.CMsgClientToGCUpdateHeroBuildPreferenceResponse
	(*CMsgClientToGCGetOldHeroBuildData)(nil),                       // 138: dota.CMsgClientToGCGetOldHeroBuildData
	(*CMsgClientToGCGetOldHeroBuildDataResponse)(nil),               // 139: dota.CMsgClientToGCGetOldHeroBuildDataResponse
	(*CMsgClientToGCReportPlayerFromMatch)(nil),                     // 140: dota.CMsgClientToGCReportPlayerFromMatch
	(*CMsgClientToGCReportPlayerFromMatchResponse)(nil),             // 141: dota.CMsgClientToGCReportPlayerFromMatchResponse
	(*CMsgClientToGCGetAccountMatchReports)(nil),                    // 142: dota.CMsgClientToGCGetAccountMatchReports
	(*CMsgClientToGCGetAccountMatchReportsResponse)(nil),            // 143: dota.CMsgClientToGCGetAccountMatchReportsResponse
	(*CMsgClientToGCDeleteHeroBuild)(nil),                           // 144: dota.CMsgClientToGCDeleteHeroBuild
	(*CMsgClientToGCDeleteHeroBuildResponse)(nil),                   // 145: dota.CMsgClientToGCDeleteHeroBuildResponse
	(*CMsgClientToGCGetActiveMatches)(nil),                          // 146: dota.CMsgClientToGCGetActiveMatches
	(*CMsgClientToGCGetActiveMatchesResponse)(nil),                  // 147: dota.CMsgClientToGCGetActiveMatchesResponse
	(*CMsgClientToGCGetDiscordLink)(nil),                            // 148: dota.CMsgClientToGCGetDiscordLink
	(*CMsgClientToGCGetDiscordLinkResponse)(nil),                    // 149: dota.CMsgClientToGCGetDiscordLinkResponse
	(*CMsgClientToGCGrantForumAccess)(nil),                          // 150: dota.CMsgClientToGCGrantForumAccess
	(*CMsgClientToGCGrantForumAccessResponse)(nil),                  // 151: dota.CMsgClientToGCGrantForumAccessResponse
	(*CMsgClientToGCModeratorRequest)(nil),                          // 152: dota.CMsgClientToGCModeratorRequest
	(*CMsgClientToGCModeratorRequestResponse)(nil),                  // 153: dota.CMsgClientToGCModeratorRequestResponse
	(*CMsgClientToGCGetFriendGameStatus)(nil),                       // 154: dota.CMsgClientToGCGetFriendGameStatus
	(*CMsgClientToGCGetFriendGameStatusResponse)(nil),               // 155: dota.CMsgClientToGCGetFriendGameStatusResponse
	(*CMsgClientToGCUpdateSpectatorStatus)(nil),                     // 156: dota.CMsgClientToGCUpdateSpectatorStatus
	(*CMsgDevMatchInfo_MatchPlayer)(nil),                            // 157: dota.CMsgDevMatchInfo.MatchPlayer
	(*CMsgGCToClientDevPlaytestStatus_NextMMWindow)(nil),            // 158: dota.CMsgGCToClientDevPlaytestStatus.NextMMWindow
	(*CMsgGCToClientDevPlaytestStatus_HeroWhitelist)(nil),           // 159: dota.CMsgGCToClientDevPlaytestStatus.HeroWhitelist
	(*CMsgGCToClientDevPlaytestStatus_PlaytestInterval)(nil),        // 160: dota.CMsgGCToClientDevPlaytestStatus.PlaytestInterval
	(*CMsgGCToClientDevPlaytestStatus_RegionInfo)(nil),              // 161: dota.CMsgGCToClientDevPlaytestStatus.RegionInfo
	(*CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey)(nil),   // 162: dota.CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey
	(*CMsgClientToGCGetMatchHistoryResponse_Match)(nil),             // 163: dota.CMsgClientToGCGetMatchHistoryResponse.Match
	(*CMsgCitadelProfileCard_Slot)(nil),                             // 164: dota.CMsgCitadelProfileCard.Slot
	(*CMsgCitadelProfileCard_Slot_Stat)(nil),                        // 165: dota.CMsgCitadelProfileCard.Slot.Stat
	(*CMsgCitadelProfileCard_Slot_Hero)(nil),                        // 166: dota.CMsgCitadelProfileCard.Slot.Hero
	(*CMsgGCToClientDevAnnouncements_Announcement)(nil),             // 167: dota.CMsgGCToClientDevAnnouncements.Announcement
	(*CMsgClientToGCRecordClientEvents_Event)(nil),                  // 168: dota.CMsgClientToGCRecordClientEvents.Event
	(*CMsgClientToGCGetHeroChoiceResponse_Hero)(nil),                // 169: dota.CMsgClientToGCGetHeroChoiceResponse.Hero
	(*CMsgAccountBook_Unlock)(nil),                                  // 170: dota.CMsgAccountBook.Unlock
	(*CMsgHeroBuild_BuildModEntry)(nil),                             // 171: dota.CMsgHeroBuild.BuildModEntry
	(*CMsgHeroBuild_BuildModCategory)(nil),                          // 172: dota.CMsgHeroBuild.BuildModCategory
	(*CMsgHeroBuild_CurrencyChange)(nil),                            // 173: dota.CMsgHeroBuild.CurrencyChange
	(*CMsgHeroBuild_AbilityOrder)(nil),                              // 174: dota.CMsgHeroBuild.AbilityOrder
	(*CMsgHeroBuild_Details_V0)(nil),                                // 175: dota.CMsgHeroBuild.Details_V0
	(*CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult)(nil),    // 176: dota.CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult
	(*CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0)(nil), // 177: dota.CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0
	(*CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild)(nil),      // 178: dota.CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild
	(*CMsgClientToGCGetAccountMatchReportsResponse_Report)(nil),     // 179: dota.CMsgClientToGCGetAccountMatchReportsResponse.Report
	(ECitadelRegionMode)(0),                                         // 180: dota.ECitadelRegionMode
	(EGCPlatform)(0),                                                // 181: dota.EGCPlatform
	(*CMsgStartFindingMatchInfo)(nil),                               // 182: dota.CMsgStartFindingMatchInfo
	(*CMsgRegionPingTimesClient)(nil),                               // 183: dota.CMsgRegionPingTimesClient
	(*CMsgHeroSelectionMatchInfo)(nil),                              // 184: dota.CMsgHeroSelectionMatchInfo
	(*CExtraMsgBlock)(nil),                                          // 185: dota.CExtraMsgBlock
	(ECitadelLobbyTeam)(0),                                          // 186: dota.ECitadelLobbyTeam
	(ECitadelMatchMode)(0),                                          // 187: dota.ECitadelMatchMode
	(ECitadelGameMode)(0),                                           // 188: dota.ECitadelGameMode
	(ECitadelBotDifficulty)(0),                                      // 189: dota.ECitadelBotDifficulty
	(*CMsgAccountStats)(nil),                                        // 190: dota.CMsgAccountStats
}
var file_citadel_gcmessages_client_proto_depIdxs = []int32{
	6,   // 0: dota.CSOAccountHeroInfo.status:type_name -> dota.CSOAccountHeroInfo.EHeroStatus
	180, // 1: dota.CMsgCitadelClientHello.region_mode:type_name -> dota.ECitadelRegionMode
	181, // 2: dota.CMsgClientToGCStartMatchmaking.client_platform:type_name -> dota.EGCPlatform
	182, // 3: dota.CMsgClientToGCStartMatchmaking.match_info:type_name -> dota.CMsgStartFindingMatchInfo
	183, // 4: dota.CMsgClientToGCStartMatchmaking.ping_times:type_name -> dota.CMsgRegionPingTimesClient
	184, // 5: dota.CMsgClientToGCStartMatchmaking.heroes:type_name -> dota.CMsgHeroSelectionMatchInfo
	7,   // 6: dota.CMsgClientToGCStartMatchmakingResponse.result:type_name -> dota.CMsgClientToGCStartMatchmakingResponse.EResultCode
	8,   // 7: dota.CMsgGCToClientMatchmakingStopped.reason:type_name -> dota.CMsgGCToClientMatchmakingStopped.EReason
	185, // 8: dota.CMsgClientWelcomeCitadel.extra_messages:type_name -> dota.CExtraMsgBlock
	180, // 9: dota.CMsgClientWelcomeCitadel.region_mode:type_name -> dota.ECitadelRegionMode
	186, // 10: dota.CMsgDevMatchInfo.winning_team:type_name -> dota.ECitadelLobbyTeam
	157, // 11: dota.CMsgDevMatchInfo.players:type_name -> dota.CMsgDevMatchInfo.MatchPlayer
	187, // 12: dota.CMsgDevMatchInfo.match_mode:type_name -> dota.ECitadelMatchMode
	188, // 13: dota.CMsgDevMatchInfo.game_mode:type_name -> dota.ECitadelGameMode
	180, // 14: dota.CMsgDevMatchInfo.region_mode:type_name -> dota.ECitadelRegionMode
	159, // 15: dota.CMsgGCToClientDevPlaytestStatus.hero_whitelists:type_name -> dota.CMsgGCToClientDevPlaytestStatus.HeroWhitelist
	161, // 16: dota.CMsgGCToClientDevPlaytestStatus.regions:type_name -> dota.CMsgGCToClientDevPlaytestStatus.RegionInfo
	162, // 17: dota.CMsgClientToGCPostMatchSurveyResponse.post_match_survey:type_name -> dota.CMsgClientToGCPostMatchSurveyResponse.PostMatchSurvey
	181, // 18: dota.CMsgPartyMMInfo.platform:type_name -> dota.EGCPlatform
	183, // 19: dota.CMsgPartyMMInfo.ping_times:type_name -> dota.CMsgRegionPingTimesClient
	180, // 20: dota.CMsgPartyMMInfo.region_mode:type_name -> dota.ECitadelRegionMode
	184, // 21: dota.CMsgPartyMMInfo.hero_roster:type_name -> dota.CMsgHeroSelectionMatchInfo
	69,  // 22: dota.CMsgClientToGCPartyCreate.party_mm_info:type_name -> dota.CMsgPartyMMInfo
	9,   // 23: dota.CMsgClientToGCPartyCreateResponse.result:type_name -> dota.CMsgClientToGCPartyCreateResponse.EResponse
	10,  // 24: dota.CMsgClientToGCPartyLeaveResponse.result:type_name -> dota.CMsgClientToGCPartyLeaveResponse.EResponse
	69,  // 25: dota.CMsgClientToGCPartyJoin.party_mm_info:type_name -> dota.CMsgPartyMMInfo
	11,  // 26: dota.CMsgClientToGCPartyJoinResponse.result:type_name -> dota.CMsgClientToGCPartyJoinResponse.EResponse
	12,  // 27: dota.CMsgClientToGCPartyAction.action_id:type_name -> dota.CMsgClientToGCPartyAction.EAction
	13,  // 28: dota.CMsgClientToGCPartyActionResponse.result:type_name -> dota.CMsgClientToGCPartyActionResponse.EResponse
	187, // 29: dota.CMsgClientToGCPartySetMode.match_mode:type_name -> dota.ECitadelMatchMode
	188, // 30: dota.CMsgClientToGCPartySetMode.game_mode:type_name -> dota.ECitadelGameMode
	189, // 31: dota.CMsgClientToGCPartySetMode.bot_difficulty:type_name -> dota.ECitadelBotDifficulty
	180, // 32: dota.CMsgClientToGCPartySetMode.region_mode:type_name -> dota.ECitadelRegionMode
	14,  // 33: dota.CMsgClientToGCPartySetModeResponse.result:type_name -> dota.CMsgClientToGCPartySetModeResponse.EResponse
	15,  // 34: dota.CMsgClientToGCPartyStartMatchResponse.result:type_name -> dota.CMsgClientToGCPartyStartMatchResponse.EResponse
	16,  // 35: dota.CMsgClientToGCPartyInviteUserResponse.result:type_name -> dota.CMsgClientToGCPartyInviteUserResponse.EResponse
	17,  // 36: dota.CMsgGCToClientPartyEvent.event:type_name -> dota.CMsgGCToClientPartyEvent.EEvent
	69,  // 37: dota.CMsgClientToGCPartyJoinViaCode.party_mm_info:type_name -> dota.CMsgPartyMMInfo
	11,  // 38: dota.CMsgClientToGCPartyJoinViaCodeResponse.result:type_name -> dota.CMsgClientToGCPartyJoinResponse.EResponse
	184, // 39: dota.CMsgClientToGCPartyUpdateRoster.hero_roster:type_name -> dota.CMsgHeroSelectionMatchInfo
	18,  // 40: dota.CMsgClientToGCPartyUpdateRosterResponse.result:type_name -> dota.CMsgClientToGCPartyUpdateRosterResponse.EResponse
	184, // 41: dota.CMsgClientToGCPartySetReadyState.hero_roster:type_name -> dota.CMsgHeroSelectionMatchInfo
	19,  // 42: dota.CMsgClientToGCPartySetReadyStateResponse.result:type_name -> dota.CMsgClientToGCPartySetReadyStateResponse.EResponse
	20,  // 43: dota.CMsgClientToGCGetMatchHistoryResponse.result:type_name -> dota.CMsgClientToGCGetMatchHistoryResponse.EResult
	163, // 44: dota.CMsgClientToGCGetMatchHistoryResponse.matches:type_name -> dota.CMsgClientToGCGetMatchHistoryResponse.Match
	180, // 45: dota.CMsgClientToGCSpectateUser.region_mode:type_name -> dota.ECitadelRegionMode
	181, // 46: dota.CMsgClientToGCSpectateUser.client_platform:type_name -> dota.EGCPlatform
	21,  // 47: dota.CMsgClientToGCSpectateUserResponse.result:type_name -> dota.CMsgClientToGCSpectateUserResponse.EResponse
	180, // 48: dota.CMsgClientToGCSpectateLobby.region_mode:type_name -> dota.ECitadelRegionMode
	181, // 49: dota.CMsgClientToGCSpectateLobby.client_platform:type_name -> dota.EGCPlatform
	96,  // 50: dota.CMsgClientToGCSpectateLobbyResponse.result:type_name -> dota.CMsgClientToGCSpectateUserResponse
	164, // 51: dota.CMsgCitadelProfileCard.slots:type_name -> dota.CMsgCitadelProfileCard.Slot
	184, // 52: dota.CMsgClientToGCUpdateRoster.heroes:type_name -> dota.CMsgHeroSelectionMatchInfo
	188, // 53: dota.CMsgClientToGCUpdateRoster.game_mode:type_name -> dota.ECitadelGameMode
	187, // 54: dota.CMsgClientToGCUpdateRoster.match_mode:type_name -> dota.ECitadelMatchMode
	23,  // 55: dota.CMsgClientToGCUpdateRosterResponse.result:type_name -> dota.CMsgClientToGCUpdateRosterResponse.EResponse
	24,  // 56: dota.CMsgClientToGCGetAccountStatsResponse.result:type_name -> dota.CMsgClientToGCGetAccountStatsResponse.EResult
	190, // 57: dota.CMsgClientToGCGetAccountStatsResponse.stats:type_name -> dota.CMsgAccountStats
	25,  // 58: dota.CMsgClientToGCGetMatchMetaDataResponse.result:type_name -> dota.CMsgClientToGCGetMatchMetaDataResponse.EResult
	167, // 59: dota.CMsgGCToClientDevAnnouncements.announcements:type_name -> dota.CMsgGCToClientDevAnnouncements.Announcement
	26,  // 60: dota.CMsgClientToGCModifyDevAnnouncements.operation:type_name -> dota.CMsgClientToGCModifyDevAnnouncements.EOperation
	27,  // 61: dota.CMsgClientToGCModifyDevAnnouncementsResponse.result:type_name -> dota.CMsgClientToGCModifyDevAnnouncementsResponse.EResult
	28,  // 62: dota.CMsgClientToGCDevAction.action:type_name -> dota.CMsgClientToGCDevAction.EAction
	29,  // 63: dota.CMsgClientToGCDevActionResponse.result:type_name -> dota.CMsgClientToGCDevActionResponse.EResult
	168, // 64: dota.CMsgClientToGCRecordClientEvents.events:type_name -> dota.CMsgClientToGCRecordClientEvents.Event
	2,   // 65: dota.CMsgClientToGCSetNewPlayerProgress.flag:type_name -> dota.ECitadelNewPlayerProgressFlag
	30,  // 66: dota.CMsgClientToGCUpdateAccountSyncResponse.result:type_name -> dota.CMsgClientToGCUpdateAccountSyncResponse.EResponse
	31,  // 67: dota.CMsgClientToGCGetHeroChoiceResponse.result:type_name -> dota.CMsgClientToGCGetHeroChoiceResponse.EResult
	169, // 68: dota.CMsgClientToGCGetHeroChoiceResponse.hero_selections:type_name -> dota.CMsgClientToGCGetHeroChoiceResponse.Hero
	32,  // 69: dota.CMsgClientToGCUnlockHeroResponse.result:type_name -> dota.CMsgClientToGCUnlockHeroResponse.EResult
	170, // 70: dota.CMsgAccountBook.unlocks:type_name -> dota.CMsgAccountBook.Unlock
	33,  // 71: dota.CMsgClientToGCBookUnlockResponse.result:type_name -> dota.CMsgClientToGCBookUnlockResponse.EResult
	122, // 72: dota.CMsgClientToGCBookUnlockResponse.updated_book:type_name -> dota.CMsgAccountBook
	34,  // 73: dota.CMsgClientToGCGetBookResponse.result:type_name -> dota.CMsgClientToGCGetBookResponse.EResult
	122, // 74: dota.CMsgClientToGCGetBookResponse.book:type_name -> dota.CMsgAccountBook
	122, // 75: dota.CMsgGCToClientBookUpdated.book:type_name -> dota.CMsgAccountBook
	35,  // 76: dota.CMsgClientToGCSubmitPlaytestUserResponse.response:type_name -> dota.CMsgClientToGCSubmitPlaytestUserResponse.EResponse
	175, // 77: dota.CMsgHeroBuild.details:type_name -> dota.CMsgHeroBuild.Details_V0
	130, // 78: dota.CMsgClientToGCUpdateHeroBuild.hero_build:type_name -> dota.CMsgHeroBuild
	36,  // 79: dota.CMsgClientToGCUpdateHeroBuildResponse.response:type_name -> dota.CMsgClientToGCUpdateHeroBuildResponse.EResponse
	37,  // 80: dota.CMsgClientToGCFindHeroBuildsResponse.response:type_name -> dota.CMsgClientToGCFindHeroBuildsResponse.EResponse
	176, // 81: dota.CMsgClientToGCFindHeroBuildsResponse.results:type_name -> dota.CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult
	134, // 82: dota.CMsgClientToGCUpdateHeroBuildPreference.preference:type_name -> dota.CMsgHeroBuildPreference
	38,  // 83: dota.CMsgClientToGCUpdateHeroBuildPreferenceResponse.response:type_name -> dota.CMsgClientToGCUpdateHeroBuildPreferenceResponse.EResponse
	39,  // 84: dota.CMsgClientToGCGetOldHeroBuildDataResponse.response:type_name -> dota.CMsgClientToGCGetOldHeroBuildDataResponse.EResponse
	178, // 85: dota.CMsgClientToGCGetOldHeroBuildDataResponse.results:type_name -> dota.CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild
	40,  // 86: dota.CMsgClientToGCReportPlayerFromMatch.report_type:type_name -> dota.CMsgClientToGCReportPlayerFromMatch.EReportType
	41,  // 87: dota.CMsgClientToGCReportPlayerFromMatchResponse.response:type_name -> dota.CMsgClientToGCReportPlayerFromMatchResponse.EResponse
	42,  // 88: dota.CMsgClientToGCGetAccountMatchReportsResponse.response:type_name -> dota.CMsgClientToGCGetAccountMatchReportsResponse.EResponse
	179, // 89: dota.CMsgClientToGCGetAccountMatchReportsResponse.reports:type_name -> dota.CMsgClientToGCGetAccountMatchReportsResponse.Report
	43,  // 90: dota.CMsgClientToGCDeleteHeroBuildResponse.response:type_name -> dota.CMsgClientToGCDeleteHeroBuildResponse.EResponse
	61,  // 91: dota.CMsgClientToGCGetActiveMatchesResponse.active_matches:type_name -> dota.CMsgDevMatchInfo
	44,  // 92: dota.CMsgClientToGCGetDiscordLinkResponse.response:type_name -> dota.CMsgClientToGCGetDiscordLinkResponse.EResponse
	45,  // 93: dota.CMsgClientToGCGrantForumAccessResponse.response:type_name -> dota.CMsgClientToGCGrantForumAccessResponse.EResponse
	46,  // 94: dota.CMsgClientToGCGetFriendGameStatusResponse.response:type_name -> dota.CMsgClientToGCGetFriendGameStatusResponse.EResponse
	186, // 95: dota.CMsgDevMatchInfo.MatchPlayer.team:type_name -> dota.ECitadelLobbyTeam
	180, // 96: dota.CMsgGCToClientDevPlaytestStatus.RegionInfo.region:type_name -> dota.ECitadelRegionMode
	158, // 97: dota.CMsgGCToClientDevPlaytestStatus.RegionInfo.mm_window:type_name -> dota.CMsgGCToClientDevPlaytestStatus.NextMMWindow
	160, // 98: dota.CMsgGCToClientDevPlaytestStatus.RegionInfo.weekdays:type_name -> dota.CMsgGCToClientDevPlaytestStatus.PlaytestInterval
	160, // 99: dota.CMsgGCToClientDevPlaytestStatus.RegionInfo.weekends:type_name -> dota.CMsgGCToClientDevPlaytestStatus.PlaytestInterval
	186, // 100: dota.CMsgClientToGCGetMatchHistoryResponse.Match.player_team:type_name -> dota.ECitadelLobbyTeam
	165, // 101: dota.CMsgCitadelProfileCard.Slot.stat:type_name -> dota.CMsgCitadelProfileCard.Slot.Stat
	166, // 102: dota.CMsgCitadelProfileCard.Slot.hero:type_name -> dota.CMsgCitadelProfileCard.Slot.Hero
	22,  // 103: dota.CMsgCitadelProfileCard.Slot.Stat.stat_id:type_name -> dota.CMsgCitadelProfileCard.EStatID
	4,   // 104: dota.CMsgClientToGCRecordClientEvents.Event.event_id:type_name -> dota.ECitadelClientAccountEvent
	171, // 105: dota.CMsgHeroBuild.BuildModCategory.mods:type_name -> dota.CMsgHeroBuild.BuildModEntry
	173, // 106: dota.CMsgHeroBuild.AbilityOrder.currency_changes:type_name -> dota.CMsgHeroBuild.CurrencyChange
	172, // 107: dota.CMsgHeroBuild.Details_V0.mod_categories:type_name -> dota.CMsgHeroBuild.BuildModCategory
	174, // 108: dota.CMsgHeroBuild.Details_V0.ability_order:type_name -> dota.CMsgHeroBuild.AbilityOrder
	130, // 109: dota.CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.hero_build:type_name -> dota.CMsgHeroBuild
	134, // 110: dota.CMsgClientToGCFindHeroBuildsResponse.HeroBuildResult.preference:type_name -> dota.CMsgHeroBuildPreference
	177, // 111: dota.CMsgClientToGCGetOldHeroBuildDataResponse.OldBuild.details:type_name -> dota.CMsgClientToGCGetOldHeroBuildDataResponse.OldDetails_V0
	112, // [112:112] is the sub-list for method output_type
	112, // [112:112] is the sub-list for method input_type
	112, // [112:112] is the sub-list for extension type_name
	112, // [112:112] is the sub-list for extension extendee
	0,   // [0:112] is the sub-list for field type_name
}

func init() { file_citadel_gcmessages_client_proto_init() }
func file_citadel_gcmessages_client_proto_init() {
	if File_citadel_gcmessages_client_proto != nil {
		return
	}
	file_steammessages_proto_init()
	file_gcsdk_gcmessages_proto_init()
	file_citadel_gcmessages_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_citadel_gcmessages_client_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CSOGameAccountClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CSOAccountSyncStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CSOAccountHeroInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCitadelClientHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCStartMatchmaking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCStartMatchmakingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCStopMatchmaking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCStopMatchmakingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCToClientMatchmakingStopped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCLeaveLobby); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCLeaveLobbyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientWelcomeCitadel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCIsInMatchmaking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCIsInMatchmakingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgDevMatchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCToClientDevPlaytestStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCToClientSDRTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCReplacementSDRTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCReplacementSDRTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCSetServerConVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCSetServerConVarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPostMatchSurveyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgPartyMMInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyLeave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyLeaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyJoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartySetMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartySetModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyStartMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyStartMatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyInviteUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyInviteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCToClientPartyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCToClientCanRejoinParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyJoinViaCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyJoinViaCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyUpdateRoster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartyUpdateRosterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartySetReadyState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPartySetReadyStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCDevSetMMBias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetMatchHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetMatchHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCSpectateUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCSpectateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCSpectateLobby); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCSpectateLobbyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetProfileCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCitadelProfileCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCUpdateRoster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCUpdateRosterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetAccountStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetAccountStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetMatchMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetMatchMetaDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCToClientDevAnnouncements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCModifyDevAnnouncements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCModifyDevAnnouncementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCDevAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCDevActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCRecordClientEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCRecordClientEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCSetNewPlayerProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCSetNewPlayerProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCUpdateAccountSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCUpdateAccountSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetHeroChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetHeroChoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCUnlockHero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCUnlockHeroResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAccountBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCBookUnlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCBookUnlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCToClientBookUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCSubmitPlaytestUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCSubmitPlaytestUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgHeroBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCUpdateHeroBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCUpdateHeroBuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCFindHeroBuilds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgHeroBuildPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCFindHeroBuildsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCUpdateHeroBuildPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCUpdateHeroBuildPreferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetOldHeroBuildData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetOldHeroBuildDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCReportPlayerFromMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCReportPlayerFromMatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetAccountMatchReports); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetAccountMatchReportsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCDeleteHeroBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCDeleteHeroBuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetActiveMatches); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetActiveMatchesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetDiscordLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetDiscordLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGrantForumAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGrantForumAccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCModeratorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[106].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCModeratorRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetFriendGameStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetFriendGameStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[109].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCUpdateSpectatorStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[110].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgDevMatchInfo_MatchPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[111].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCToClientDevPlaytestStatus_NextMMWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[112].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCToClientDevPlaytestStatus_HeroWhitelist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[113].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCToClientDevPlaytestStatus_PlaytestInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[114].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCToClientDevPlaytestStatus_RegionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[115].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCPostMatchSurveyResponse_PostMatchSurvey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[116].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetMatchHistoryResponse_Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[117].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCitadelProfileCard_Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[118].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCitadelProfileCard_Slot_Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[119].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCitadelProfileCard_Slot_Hero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[120].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCToClientDevAnnouncements_Announcement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[121].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCRecordClientEvents_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[122].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetHeroChoiceResponse_Hero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[123].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAccountBook_Unlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[124].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgHeroBuild_BuildModEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[125].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgHeroBuild_BuildModCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[126].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgHeroBuild_CurrencyChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[127].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgHeroBuild_AbilityOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[128].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgHeroBuild_Details_V0); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[129].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCFindHeroBuildsResponse_HeroBuildResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[130].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetOldHeroBuildDataResponse_OldDetails_V0); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[131].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetOldHeroBuildDataResponse_OldBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citadel_gcmessages_client_proto_msgTypes[132].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientToGCGetAccountMatchReportsResponse_Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_citadel_gcmessages_client_proto_rawDesc,
			NumEnums:      47,
			NumMessages:   133,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_citadel_gcmessages_client_proto_goTypes,
		DependencyIndexes: file_citadel_gcmessages_client_proto_depIdxs,
		EnumInfos:         file_citadel_gcmessages_client_proto_enumTypes,
		MessageInfos:      file_citadel_gcmessages_client_proto_msgTypes,
	}.Build()
	File_citadel_gcmessages_client_proto = out.File
	file_citadel_gcmessages_client_proto_rawDesc = nil
	file_citadel_gcmessages_client_proto_goTypes = nil
	file_citadel_gcmessages_client_proto_depIdxs = nil
}
