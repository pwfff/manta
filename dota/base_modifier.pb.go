// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: base_modifier.proto

package dota

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MODIFIER_ENTRY_TYPE int32

const (
	MODIFIER_ENTRY_TYPE_MODIFIER_ENTRY_TYPE_ACTIVE  MODIFIER_ENTRY_TYPE = 1
	MODIFIER_ENTRY_TYPE_MODIFIER_ENTRY_TYPE_REMOVED MODIFIER_ENTRY_TYPE = 2
)

// Enum value maps for MODIFIER_ENTRY_TYPE.
var (
	MODIFIER_ENTRY_TYPE_name = map[int32]string{
		1: "MODIFIER_ENTRY_TYPE_ACTIVE",
		2: "MODIFIER_ENTRY_TYPE_REMOVED",
	}
	MODIFIER_ENTRY_TYPE_value = map[string]int32{
		"MODIFIER_ENTRY_TYPE_ACTIVE":  1,
		"MODIFIER_ENTRY_TYPE_REMOVED": 2,
	}
)

func (x MODIFIER_ENTRY_TYPE) Enum() *MODIFIER_ENTRY_TYPE {
	p := new(MODIFIER_ENTRY_TYPE)
	*p = x
	return p
}

func (x MODIFIER_ENTRY_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MODIFIER_ENTRY_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_base_modifier_proto_enumTypes[0].Descriptor()
}

func (MODIFIER_ENTRY_TYPE) Type() protoreflect.EnumType {
	return &file_base_modifier_proto_enumTypes[0]
}

func (x MODIFIER_ENTRY_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MODIFIER_ENTRY_TYPE) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MODIFIER_ENTRY_TYPE(num)
	return nil
}

// Deprecated: Use MODIFIER_ENTRY_TYPE.Descriptor instead.
func (MODIFIER_ENTRY_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_base_modifier_proto_rawDescGZIP(), []int{0}
}

type CModifierTableEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryType                *MODIFIER_ENTRY_TYPE `protobuf:"varint,1,req,name=entry_type,json=entryType,enum=dota.MODIFIER_ENTRY_TYPE" json:"entry_type,omitempty"`
	Parent                   *uint32              `protobuf:"varint,2,req,name=parent" json:"parent,omitempty"`
	SerialNumber             *uint32              `protobuf:"varint,3,req,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	ModifierSubclass         *uint32              `protobuf:"varint,4,opt,name=modifier_subclass,json=modifierSubclass" json:"modifier_subclass,omitempty"`
	StackCount               *int32               `protobuf:"varint,5,opt,name=stack_count,json=stackCount" json:"stack_count,omitempty"`
	MaxStackCount            *int32               `protobuf:"varint,6,opt,name=max_stack_count,json=maxStackCount" json:"max_stack_count,omitempty"`
	LastAppliedTime          *float32             `protobuf:"fixed32,7,opt,name=last_applied_time,json=lastAppliedTime" json:"last_applied_time,omitempty"`
	Duration                 *float32             `protobuf:"fixed32,8,opt,name=duration" json:"duration,omitempty"`
	Caster                   *uint32              `protobuf:"varint,9,opt,name=caster" json:"caster,omitempty"`
	Ability                  *uint32              `protobuf:"varint,10,opt,name=ability" json:"ability,omitempty"`
	AuraProviderSerialNumber *int32               `protobuf:"varint,11,opt,name=aura_provider_serial_number,json=auraProviderSerialNumber" json:"aura_provider_serial_number,omitempty"`
	AuraProviderEhandle      *uint32              `protobuf:"varint,12,opt,name=aura_provider_ehandle,json=auraProviderEhandle" json:"aura_provider_ehandle,omitempty"`
	AbilitySubclass          *uint32              `protobuf:"varint,13,opt,name=ability_subclass,json=abilitySubclass" json:"ability_subclass,omitempty"`
	Bool1_                   *bool                `protobuf:"varint,20,opt,name=bool1_,json=bool1" json:"bool1_,omitempty"`
	Bool2_                   *bool                `protobuf:"varint,21,opt,name=bool2_,json=bool2" json:"bool2_,omitempty"`
	Bool3_                   *bool                `protobuf:"varint,22,opt,name=bool3_,json=bool3" json:"bool3_,omitempty"`
	Bool4_                   *bool                `protobuf:"varint,23,opt,name=bool4_,json=bool4" json:"bool4_,omitempty"`
	Int1_                    *int32               `protobuf:"varint,25,opt,name=int1_,json=int1" json:"int1_,omitempty"`
	Int2_                    *int32               `protobuf:"varint,26,opt,name=int2_,json=int2" json:"int2_,omitempty"`
	Int3_                    *int32               `protobuf:"varint,27,opt,name=int3_,json=int3" json:"int3_,omitempty"`
	Int4_                    *int32               `protobuf:"varint,28,opt,name=int4_,json=int4" json:"int4_,omitempty"`
	Float1_                  *float32             `protobuf:"fixed32,30,opt,name=float1_,json=float1" json:"float1_,omitempty"`
	Float2_                  *float32             `protobuf:"fixed32,31,opt,name=float2_,json=float2" json:"float2_,omitempty"`
	Float3_                  *float32             `protobuf:"fixed32,32,opt,name=float3_,json=float3" json:"float3_,omitempty"`
	Float4_                  *float32             `protobuf:"fixed32,33,opt,name=float4_,json=float4" json:"float4_,omitempty"`
	Float5_                  *float32             `protobuf:"fixed32,49,opt,name=float5_,json=float5" json:"float5_,omitempty"`
	Float6_                  *float32             `protobuf:"fixed32,50,opt,name=float6_,json=float6" json:"float6_,omitempty"`
	Float7_                  *float32             `protobuf:"fixed32,51,opt,name=float7_,json=float7" json:"float7_,omitempty"`
	Float8_                  *float32             `protobuf:"fixed32,52,opt,name=float8_,json=float8" json:"float8_,omitempty"`
	Float9_                  *float32             `protobuf:"fixed32,53,opt,name=float9_,json=float9" json:"float9_,omitempty"`
	Float10_                 *float32             `protobuf:"fixed32,54,opt,name=float10_,json=float10" json:"float10_,omitempty"`
	Uint1_                   *uint64              `protobuf:"varint,35,opt,name=uint1_,json=uint1" json:"uint1_,omitempty"`
	Uint2_                   *uint64              `protobuf:"varint,36,opt,name=uint2_,json=uint2" json:"uint2_,omitempty"`
	Uint3_                   *uint64              `protobuf:"varint,37,opt,name=uint3_,json=uint3" json:"uint3_,omitempty"`
	Uint4_                   *uint64              `protobuf:"varint,38,opt,name=uint4_,json=uint4" json:"uint4_,omitempty"`
	Vec1_                    *CMsgVector          `protobuf:"bytes,40,opt,name=vec1_,json=vec1" json:"vec1_,omitempty"`
	Vec2_                    *CMsgVector          `protobuf:"bytes,41,opt,name=vec2_,json=vec2" json:"vec2_,omitempty"`
	Vec3_                    *CMsgVector          `protobuf:"bytes,42,opt,name=vec3_,json=vec3" json:"vec3_,omitempty"`
	Vec4_                    *CMsgVector          `protobuf:"bytes,43,opt,name=vec4_,json=vec4" json:"vec4_,omitempty"`
	String1_                 *string              `protobuf:"bytes,45,opt,name=string1_,json=string1" json:"string1_,omitempty"`
	String2_                 *string              `protobuf:"bytes,46,opt,name=string2_,json=string2" json:"string2_,omitempty"`
	String3_                 *string              `protobuf:"bytes,47,opt,name=string3_,json=string3" json:"string3_,omitempty"`
	String4_                 *string              `protobuf:"bytes,48,opt,name=string4_,json=string4" json:"string4_,omitempty"`
}

func (x *CModifierTableEntry) Reset() {
	*x = CModifierTableEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_modifier_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CModifierTableEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CModifierTableEntry) ProtoMessage() {}

func (x *CModifierTableEntry) ProtoReflect() protoreflect.Message {
	mi := &file_base_modifier_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CModifierTableEntry.ProtoReflect.Descriptor instead.
func (*CModifierTableEntry) Descriptor() ([]byte, []int) {
	return file_base_modifier_proto_rawDescGZIP(), []int{0}
}

func (x *CModifierTableEntry) GetEntryType() MODIFIER_ENTRY_TYPE {
	if x != nil && x.EntryType != nil {
		return *x.EntryType
	}
	return MODIFIER_ENTRY_TYPE_MODIFIER_ENTRY_TYPE_ACTIVE
}

func (x *CModifierTableEntry) GetParent() uint32 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CModifierTableEntry) GetSerialNumber() uint32 {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return 0
}

func (x *CModifierTableEntry) GetModifierSubclass() uint32 {
	if x != nil && x.ModifierSubclass != nil {
		return *x.ModifierSubclass
	}
	return 0
}

func (x *CModifierTableEntry) GetStackCount() int32 {
	if x != nil && x.StackCount != nil {
		return *x.StackCount
	}
	return 0
}

func (x *CModifierTableEntry) GetMaxStackCount() int32 {
	if x != nil && x.MaxStackCount != nil {
		return *x.MaxStackCount
	}
	return 0
}

func (x *CModifierTableEntry) GetLastAppliedTime() float32 {
	if x != nil && x.LastAppliedTime != nil {
		return *x.LastAppliedTime
	}
	return 0
}

func (x *CModifierTableEntry) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CModifierTableEntry) GetCaster() uint32 {
	if x != nil && x.Caster != nil {
		return *x.Caster
	}
	return 0
}

func (x *CModifierTableEntry) GetAbility() uint32 {
	if x != nil && x.Ability != nil {
		return *x.Ability
	}
	return 0
}

func (x *CModifierTableEntry) GetAuraProviderSerialNumber() int32 {
	if x != nil && x.AuraProviderSerialNumber != nil {
		return *x.AuraProviderSerialNumber
	}
	return 0
}

func (x *CModifierTableEntry) GetAuraProviderEhandle() uint32 {
	if x != nil && x.AuraProviderEhandle != nil {
		return *x.AuraProviderEhandle
	}
	return 0
}

func (x *CModifierTableEntry) GetAbilitySubclass() uint32 {
	if x != nil && x.AbilitySubclass != nil {
		return *x.AbilitySubclass
	}
	return 0
}

func (x *CModifierTableEntry) GetBool1_() bool {
	if x != nil && x.Bool1_ != nil {
		return *x.Bool1_
	}
	return false
}

func (x *CModifierTableEntry) GetBool2_() bool {
	if x != nil && x.Bool2_ != nil {
		return *x.Bool2_
	}
	return false
}

func (x *CModifierTableEntry) GetBool3_() bool {
	if x != nil && x.Bool3_ != nil {
		return *x.Bool3_
	}
	return false
}

func (x *CModifierTableEntry) GetBool4_() bool {
	if x != nil && x.Bool4_ != nil {
		return *x.Bool4_
	}
	return false
}

func (x *CModifierTableEntry) GetInt1_() int32 {
	if x != nil && x.Int1_ != nil {
		return *x.Int1_
	}
	return 0
}

func (x *CModifierTableEntry) GetInt2_() int32 {
	if x != nil && x.Int2_ != nil {
		return *x.Int2_
	}
	return 0
}

func (x *CModifierTableEntry) GetInt3_() int32 {
	if x != nil && x.Int3_ != nil {
		return *x.Int3_
	}
	return 0
}

func (x *CModifierTableEntry) GetInt4_() int32 {
	if x != nil && x.Int4_ != nil {
		return *x.Int4_
	}
	return 0
}

func (x *CModifierTableEntry) GetFloat1_() float32 {
	if x != nil && x.Float1_ != nil {
		return *x.Float1_
	}
	return 0
}

func (x *CModifierTableEntry) GetFloat2_() float32 {
	if x != nil && x.Float2_ != nil {
		return *x.Float2_
	}
	return 0
}

func (x *CModifierTableEntry) GetFloat3_() float32 {
	if x != nil && x.Float3_ != nil {
		return *x.Float3_
	}
	return 0
}

func (x *CModifierTableEntry) GetFloat4_() float32 {
	if x != nil && x.Float4_ != nil {
		return *x.Float4_
	}
	return 0
}

func (x *CModifierTableEntry) GetFloat5_() float32 {
	if x != nil && x.Float5_ != nil {
		return *x.Float5_
	}
	return 0
}

func (x *CModifierTableEntry) GetFloat6_() float32 {
	if x != nil && x.Float6_ != nil {
		return *x.Float6_
	}
	return 0
}

func (x *CModifierTableEntry) GetFloat7_() float32 {
	if x != nil && x.Float7_ != nil {
		return *x.Float7_
	}
	return 0
}

func (x *CModifierTableEntry) GetFloat8_() float32 {
	if x != nil && x.Float8_ != nil {
		return *x.Float8_
	}
	return 0
}

func (x *CModifierTableEntry) GetFloat9_() float32 {
	if x != nil && x.Float9_ != nil {
		return *x.Float9_
	}
	return 0
}

func (x *CModifierTableEntry) GetFloat10_() float32 {
	if x != nil && x.Float10_ != nil {
		return *x.Float10_
	}
	return 0
}

func (x *CModifierTableEntry) GetUint1_() uint64 {
	if x != nil && x.Uint1_ != nil {
		return *x.Uint1_
	}
	return 0
}

func (x *CModifierTableEntry) GetUint2_() uint64 {
	if x != nil && x.Uint2_ != nil {
		return *x.Uint2_
	}
	return 0
}

func (x *CModifierTableEntry) GetUint3_() uint64 {
	if x != nil && x.Uint3_ != nil {
		return *x.Uint3_
	}
	return 0
}

func (x *CModifierTableEntry) GetUint4_() uint64 {
	if x != nil && x.Uint4_ != nil {
		return *x.Uint4_
	}
	return 0
}

func (x *CModifierTableEntry) GetVec1_() *CMsgVector {
	if x != nil {
		return x.Vec1_
	}
	return nil
}

func (x *CModifierTableEntry) GetVec2_() *CMsgVector {
	if x != nil {
		return x.Vec2_
	}
	return nil
}

func (x *CModifierTableEntry) GetVec3_() *CMsgVector {
	if x != nil {
		return x.Vec3_
	}
	return nil
}

func (x *CModifierTableEntry) GetVec4_() *CMsgVector {
	if x != nil {
		return x.Vec4_
	}
	return nil
}

func (x *CModifierTableEntry) GetString1_() string {
	if x != nil && x.String1_ != nil {
		return *x.String1_
	}
	return ""
}

func (x *CModifierTableEntry) GetString2_() string {
	if x != nil && x.String2_ != nil {
		return *x.String2_
	}
	return ""
}

func (x *CModifierTableEntry) GetString3_() string {
	if x != nil && x.String3_ != nil {
		return *x.String3_
	}
	return ""
}

func (x *CModifierTableEntry) GetString4_() string {
	if x != nil && x.String4_ != nil {
		return *x.String4_
	}
	return ""
}

var File_base_modifier_proto protoreflect.FileDescriptor

var file_base_modifier_proto_rawDesc = []byte{
	0x0a, 0x13, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x6f, 0x74, 0x61, 0x1a, 0x16, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x0a, 0x0a, 0x13, 0x43, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x0a, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45, 0x52, 0x5f,
	0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x73,
	0x75, 0x62, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x75, 0x62, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x3d, 0x0a, 0x1b, 0x61, 0x75, 0x72, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x61, 0x75, 0x72, 0x61, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x75, 0x72, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x65, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x13, 0x61, 0x75, 0x72, 0x61, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x45, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x73, 0x75, 0x62, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x75, 0x62, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6c, 0x31, 0x5f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x31, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6c, 0x32,
	0x5f, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x12, 0x15,
	0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x5f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x62, 0x6f, 0x6f, 0x6c, 0x33, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x5f, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x34, 0x12, 0x13, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x31, 0x5f, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x6e, 0x74,
	0x31, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x32, 0x5f, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x69, 0x6e, 0x74, 0x32, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x5f, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x6e, 0x74, 0x33, 0x12, 0x13, 0x0a, 0x05, 0x69,
	0x6e, 0x74, 0x34, 0x5f, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x6e, 0x74, 0x34,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x31, 0x5f, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x31, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x32, 0x5f, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x32, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x5f, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x12, 0x17, 0x0a, 0x07, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x34, 0x5f, 0x18, 0x21, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x34, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x35, 0x5f, 0x18,
	0x31, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x35, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x5f, 0x18, 0x32, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x37,
	0x5f, 0x18, 0x33, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x37, 0x12,
	0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x38, 0x5f, 0x18, 0x34, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x38, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x39, 0x5f, 0x18, 0x35, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x39, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x31, 0x30, 0x5f, 0x18, 0x36, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x31, 0x30, 0x12, 0x15, 0x0a, 0x06,
	0x75, 0x69, 0x6e, 0x74, 0x31, 0x5f, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x75, 0x69,
	0x6e, 0x74, 0x31, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x5f, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x75, 0x69, 0x6e, 0x74, 0x32, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x69,
	0x6e, 0x74, 0x33, 0x5f, 0x18, 0x25, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x5f, 0x18, 0x26, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x75, 0x69, 0x6e, 0x74, 0x34, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x65, 0x63, 0x31,
	0x5f, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x04, 0x76, 0x65, 0x63, 0x31, 0x12,
	0x25, 0x0a, 0x05, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x04, 0x76, 0x65, 0x63, 0x32, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x18,
	0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x04, 0x76, 0x65, 0x63, 0x33, 0x12, 0x25, 0x0a,
	0x05, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x04,
	0x76, 0x65, 0x63, 0x34, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x5f,
	0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x5f, 0x18, 0x2e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x33, 0x5f, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x33, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x34,
	0x5f, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x34,
	0x2a, 0x56, 0x0a, 0x13, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x4f, 0x44, 0x49, 0x46,
	0x49, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x4f, 0x44, 0x49, 0x46,
	0x49, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52,
	0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x74, 0x61, 0x62, 0x75, 0x66, 0x66, 0x2f,
	0x6d, 0x61, 0x6e, 0x74, 0x61, 0x2f, 0x64, 0x6f, 0x74, 0x61, 0x3b, 0x64, 0x6f, 0x74, 0x61,
}

var (
	file_base_modifier_proto_rawDescOnce sync.Once
	file_base_modifier_proto_rawDescData = file_base_modifier_proto_rawDesc
)

func file_base_modifier_proto_rawDescGZIP() []byte {
	file_base_modifier_proto_rawDescOnce.Do(func() {
		file_base_modifier_proto_rawDescData = protoimpl.X.CompressGZIP(file_base_modifier_proto_rawDescData)
	})
	return file_base_modifier_proto_rawDescData
}

var file_base_modifier_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_base_modifier_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_base_modifier_proto_goTypes = []any{
	(MODIFIER_ENTRY_TYPE)(0),    // 0: dota.MODIFIER_ENTRY_TYPE
	(*CModifierTableEntry)(nil), // 1: dota.CModifierTableEntry
	(*CMsgVector)(nil),          // 2: dota.CMsgVector
}
var file_base_modifier_proto_depIdxs = []int32{
	0, // 0: dota.CModifierTableEntry.entry_type:type_name -> dota.MODIFIER_ENTRY_TYPE
	2, // 1: dota.CModifierTableEntry.vec1_:type_name -> dota.CMsgVector
	2, // 2: dota.CModifierTableEntry.vec2_:type_name -> dota.CMsgVector
	2, // 3: dota.CModifierTableEntry.vec3_:type_name -> dota.CMsgVector
	2, // 4: dota.CModifierTableEntry.vec4_:type_name -> dota.CMsgVector
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_base_modifier_proto_init() }
func file_base_modifier_proto_init() {
	if File_base_modifier_proto != nil {
		return
	}
	file_networkbasetypes_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_base_modifier_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CModifierTableEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_base_modifier_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_base_modifier_proto_goTypes,
		DependencyIndexes: file_base_modifier_proto_depIdxs,
		EnumInfos:         file_base_modifier_proto_enumTypes,
		MessageInfos:      file_base_modifier_proto_msgTypes,
	}.Build()
	File_base_modifier_proto = out.File
	file_base_modifier_proto_rawDesc = nil
	file_base_modifier_proto_goTypes = nil
	file_base_modifier_proto_depIdxs = nil
}
